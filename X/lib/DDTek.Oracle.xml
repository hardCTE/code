<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DDTek.Oracle</name>
    </assembly>
    <members>
        <member name="F:DDInt.Common.CommonEscape.TIME">
            Implemented via BaseTimestampEscape class.
            Example:  {t 'hh:mm:ss'}
        </member>
        <member name="F:DDInt.Common.CommonEscape.DATE">
            Implemented via BaseTimestampEscape class.
            Example:  {d 'yyyy-mm-dd'}
        </member>
        <member name="F:DDInt.Common.CommonEscape.TIMESTAMP">
            Implemented via BaseTimestampEscape class.
            Example:  {ts 'yyyy-mm-dd hh:mm:ss.ffffff'}
        </member>
        <member name="F:DDInt.Common.CommonEscape.FUNCTION">
            Implemented via BaseFunctionEscape class.
            Example:  {fn abs(x)}
        </member>
        <member name="F:DDInt.Common.CommonEscape.OUTER_JOIN">
            Implemented via BaseJoinEscape class.
            Example:  {oj tab1 LEFT OUTER JOIN tab2 ON cond}
        </member>
        <member name="F:DDInt.Common.CommonEscape.CALL_PROCEDURE">
            Implemented via BaseCallEscape class.
            Example:  {call EMPS_IN_DEPT (parm1, parm2)}
        </member>
        <member name="F:DDInt.Common.CommonEscape.CALL_FUNCTION">
            Implemented via BaseCallEscape class.
            Example:  {? = call EMPS_IN_DEPT (parm1, parm2)}
        </member>
        <member name="F:DDInt.Common.CommonEscape.ESCAPE">
            Implemented via CommonEscapeEscape class.
            {escape 'c'}
        </member>
        <member name="F:DDInt.Common.CommonEscape.EXTENSION">
            Implemented via CommonExtensionEscape class.
            {ext RowSetSize 5}
        </member>
        <member name="F:DDInt.Common.CommonEscape.generator">
            Used to obtain the text of sub-trees.
        </member>
        <member name="F:DDInt.Common.CommonEscape.escapeRoot">
            Records the escape type text.
        </member>
        <member name="M:DDInt.Common.CommonEscape.#ctor(DDInt.Parser.BaseSQLTreeNode)">
            Constructor.
        </member>
        <member name="F:DDInt.Common.CommonEscapeParameterList.leftmostParameter">
            The leftmost parameter in the escape's parameter list.
        </member>
        <member name="M:DDInt.Common.CommonEscapeParameterList.getParameter(System.Int32)">
             Returns the specified parameter as a String.
            
             @return the specified parameter as a String.
            
             @param parameterIndex - specified as 1-based ordinal.
        </member>
        <member name="M:DDInt.Common.CommonEscapeParameterList.getAllParameters">
             Returns a comma-separated String of all the parameters in the
             list.
            
             @return - Comma-separated String of all the parameters in the list.
        </member>
        <member name="M:DDInt.Common.CommonEscapeParameterList.setLeftmostparameter">
            Initialize the leftmost parameter pointer.  It can be null.
        </member>
        <member name="M:DDInt.Common.CommonEscapeParameterList.generateText(DDInt.Parser.BaseSQLTreeNode)">
            Generate the text of the parameter or parameter list at the specified
            node.
        </member>
        <member name="P:DDInt.Common.CommonEscapeParameterList.ParameterCount">
             Returns the number of parameters in the parameter list.
            
             @return the number of parameters in the parameter list.
        </member>
        <member name="M:DDInt.Common.CommonCallEscape.setLeftmostparameter">
             Initialize the leftmost parameter pointer.  It can be null.
            
             CallEscape
                 ::= _LeftBrace _CALL QualifiedName EscapeParameterList ...
                 ::= _LeftBrace _Parameter _EqualOperator _CALL QualifiedName EscapeParameterList ...
        </member>
        <member name="M:DDInt.Common.CommonConnectionOptions.GetOptionName(System.String)">
            <summary>
            Return the actual option name against this key
            </summary>
            <param name="keyName">Key or Synonym</param>
            <returns>Option Name</returns>
        </member>
        <member name="T:DDInt.Common.CommonCsvDbType">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Char">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.VarChar">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.LongVarChar">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.UnicodeChar">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.UnicodeVarChar">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.UnicodeLongVarChar">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Decimal">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Bit">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.TinyInt">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.SmallInt">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Integer">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.BigInt">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.UnsignedTinyInt">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.UnsignedSmallInt">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.UnsignedInteger">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.UnsignedBigInt">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.DecFloat16">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.DecFloat34">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.SinglePrecision">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.DoublePrecision">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Binary">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.VarBinary">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.LongVarBinary">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Date">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Time">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.DateTime">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.DateTimeWithTz">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalMonth">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalYear">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalYearToMonth">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalDay">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalHour">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalMinute">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalSecond">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalDayToHour">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalDayToMinute">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalDayToSecond">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalHourToMinute">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalHourToSecond">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.IntervalMinuteToSecond">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.Guid">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.XmlText">
            <summary>
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonCsvDbType.XmlBinary">
            <summary>
            </summary>
        </member>
        <member name="M:DDInt.Common.CommonExtensionEscape.validateExtensionName(System.String)">
             Determines if the value specified is a valid extension.
            
             @return the index into scalarFunctionNames of the scalar function name
             that matches the value specified, or -1 if no match exists.
        </member>
        <member name="T:DDInt.Common.CEM">
            <summary>
            The CEM (shorthand for CommonErrorManagement) is a set of static methods
            for raising exceptions through a standard manner.  By using these methods
            to raise exceptions, we can trace all exceptions thrown by the common layer,
            obtain error strings from a resource file and map error conditions to
            the appropriate exception.
            </summary>
        </member>
        <member name="M:DDInt.Common.CommonEscapeEscape.getEscapeCharacter">
             Returns the escape character defined in the escape.
            
             EscapeEscape
                 ::= _LeftBrace _ESCAPE _StringLiteral ...
            
             @return the escape character defined in the escape.
        </member>
        <member name="F:DDInt.Common.CommonEscapeTranslator.NO_TRANSLATION_NEEDED">
            Describes the type of escape m_translation required.
        </member>
        <!-- Badly formed XML comment ignored for member "F:DDInt.Common.CommonEscapeTranslator.UNADORN_TRANSLATION_NEEDED" -->
        <member name="F:DDInt.Common.CommonEscapeTranslator.FULL_TRANSLATION_NEEDED">
            Describes the type of escape m_translation required.
        </member>
        <member name="M:DDInt.Common.CommonEscapeTranslator.translateCallEscape(DDInt.Common.CommonCallEscape)">
             Returns translated call escape or null if the escape cannot be
             translated.
            
             @return translated call escape or null if the escape cannot be
             translated.
            
             @param callEscape - call escape semantic information obtained from
             the parse.
        </member>
        <member name="M:DDInt.Common.CommonEscapeTranslator.translateFunctionEscape(DDInt.Common.CommonFunctionEscape)">
             Returns translated function escape or null if the escape cannot be
             translated.
            
             @return translated function escape or null if the escape cannot be
             translated.
            
             @param functionEscape - fn escape semantic information obtained from
             the parse.
        </member>
        <member name="M:DDInt.Common.CommonEscapeTranslator.translateTimestampEscape(DDInt.Common.CommonTimestampEscape)">
             Returns translated t, d, or ts escape or null if the escape cannot
             be translated.
            
             @return translated t, d, or ts  escape or null if the escape cannot
             be translated.
            
             @param timestampEscape - t, d, or ts escape semantic information
             obtained from the parse
        </member>
        <member name="M:DDInt.Common.CommonEscapeTranslator.translateEscapeEscape(DDInt.Common.CommonEscapeEscape)">
             Returns translated escape escape or null if the escape cannot
             be translated.
            
             @return translated escape escape or null if the escape cannot
             be translated.
            
             @param escapeEscape - escape escape semantic information
             obtained from the parse
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Common.CommonEscapeTranslator.getTranslationNeeded(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Common.CommonEscapeTranslator.translateJoinEscapeFromClause(DDInt.Common.CommonJoinEscape)" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Common.CommonEscapeTranslator.insertOuterJoinOperator(System.Text.StringBuilder,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Common.CommonEscapeTranslator.translateJoinEscapeWhereClause(DDInt.Common.CommonJoinEscape,System.String)" -->
        <member name="M:DDInt.Common.CommonEscapeTranslator.translateEscape(DDInt.Parser.BaseSQLTreeNode,System.String)">
             Oversees the m_translation of the escape.
            
             @param escapeSemantics - semantic information obtained from the parse.
             @param currentWhere - where clause associated with the escape.  Is null if doesn't exist.
        </member>
        <member name="M:DDInt.Common.CommonEscapeTranslator.getTranslation">
             Returns the translated escape.
            
             @return Returns the translated escape.
        </member>
        <member name="M:DDInt.Common.CommonEscapeTranslator.getNewWhere">
             Returns Updated WHERE clause or null if WHERE clause hasn't changed.
            
             @return Updated WHERE clause or null if WHERE clause hasn't changed.
        </member>
        <member name="M:DDInt.Common.CommonEscapeTranslator.translateExtensionEscape(DDInt.Common.CommonExtensionEscape)">
             Returns translated extension escape or null if the escape cannot
             be translated.
            
             @return translated extension escape or null if the escape cannot
             be translated.
            
             @param extensionEscape - extension escape semantic information
             obtained from the parse
        </member>
        <member name="F:DDInt.Common.CommonFunctionEscape.NONE">
            Scalar function types.  These match the indexes of the scalar function
            names found in scalarFunctionNames.
        </member>
        <member name="F:DDInt.Common.CommonFunctionEscape.scalarFunctionNames">
             Valid scalar function names.
            
             Each function name's index doubles as the BaseSQLTreeNode operator.
        </member>
        <member name="M:DDInt.Common.CommonFunctionEscape.validateScalarFunctionName(System.String)">
             Determines if the value specified is a valid scalar function.
            
             @return the index into scalarFunctionNames of the scalar function name
             that matches the value specified, or -1 if no match exists.
        </member>
        <member name="M:DDInt.Common.CommonFunctionEscape.setLeftmostparameter">
             Initialize the leftmost parameter pointer.  It can be null.
            
             FunctionEscape
                 ::= _LeftBrace _FN _ScalarFunctionName EscapeParameterList ...
        </member>
        <member name="P:DDInt.Common.CommonFunctionEscape.FunctionText">
             Returns the function text w/o the escape adorning.  For example,
             returns "UCASE (NAME)" instead of "{fn UCASE (NAME)}".
            
             @return the function text w/o the escape adorning.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.NODE_RIGHT_OUTER_JOIN_OP">
            Join operator values.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.ojRoot">
            OJ root node.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.ojCursor">
            Current outer join position node.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.trCursor">
            Current table reference postion node.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.joinOperator">
            Join operator or BaseSQLTreeNode.NODE_UNKNOWN if there are
            no more outer joins to enumeratre.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.currentSearchConditionNode">
            The value of the currently traversed search condition clause.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.currentTableNameNode">
            Table name from enumerated table reference.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.firstOuterJoinRequest">
            True if getNextOuterJoin () has been called before; false, otherwise.
        </member>
        <member name="F:DDInt.Common.CommonJoinEscape.firstTableReferenceRequest">
            True if getNextTableReference () has been called before; false,
            otherwise.
        </member>
        <member name="M:DDInt.Common.CommonJoinEscape.#ctor(DDInt.Parser.BaseSQLTreeNode)">
             Constructor.
            
             OuterJoinEscape
                 ::= _LeftBrace _OJ OuterJoin _RightBrace
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Common.CommonJoinEscape.moveToNextOuterJoin" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Common.CommonJoinEscape.moveToNextTableReference" -->
        <member name="M:DDInt.Common.CommonJoinEscape.isJoinOperator(System.Int32)">
             Returns true if the specified operator is an outer join operator;
             false, otherwise.
            
             @return true if the specified operator is an outer join operator;
             false, otherwise.
            
             @param op - operator being tested.
        </member>
        <member name="M:DDInt.Common.CommonJoinEscape.getCurrentSearchCondition">
             Returns the current search condition.
            
             @return the current search condition.
        </member>
        <member name="M:DDInt.Common.CommonJoinEscape.getCurrentJoinOperator">
             Returns the current search condition.
            
             @return the current search condition.
        </member>
        <member name="M:DDInt.Common.CommonJoinEscape.getCurrentTableName">
             Returns the table name for the currently enumerated outer join
             or null if none exists.
            
             TableReference
                 ::= QualifiedName [CorrelationName]
            
             @return the table name for the currently enumerated outer join.
             or null if none exists.
        </member>
        <member name="M:DDInt.Common.CommonJoinEscape.getCurrentCorrelationName">
             Returns the correlation name for the currently enumerated outer join
             or null if none exists.
            
             TableReference
                 ::= QualifiedName [CorrelationName]
            
             @return the correlation name for the currently enumerated outer join.
             or null if none exists.
        </member>
        <member name="T:DDTek.Common.CommonStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BAD_CONNECTION">
            <summary>
              Looks up a localized string similar to Connection must be valid and open.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BAD_FIELD_OFFSET">
            <summary>
              Looks up a localized string similar to Field offset is greater than length..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_ABORTED">
            <summary>
              Looks up a localized string similar to The bulk copy operation has been aborted..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_CONFLICTING_TRANSACTION_OPTION">
            <summary>
              Looks up a localized string similar to Must not specify the BulkCopyOption UseInternalTransaction and pass an external Transaction at the same time..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_CONVERSION_FAILED">
            <summary>
              Looks up a localized string similar to The bulk copy operation has failed due to a conversion error between a source column value and destination column value..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_IN_PROGRESS_CHANGES_PROHIBITED">
            <summary>
              Looks up a localized string similar to A ColumnMappingCollection cannot be changed during the execution of a bulk copy operation..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_INVALID_DESTINATION_TABLE">
            <summary>
              Looks up a localized string similar to Cannot access destination table &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_NON_UNIFORM_COLUMN_MAPPING_COLLECTION">
            <summary>
              Looks up a localized string similar to The mappings in a ColumnMappingCollection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_ROW_LIMIT_EXCEEDED">
             <summary>
               Looks up a localized string similar to This Progress DataDirect Connect for ADO.NET Bulk Load feature you are attempting to use is an Evaluation copy. The Bulk Load row count limit has been exceeded. If you would like to license a provider to remove this limit, please contact Progress DataDirect. USA and Canada: 800-876-3101
            United Kingdom: Toll-free: 0800 169 1907 or Tel: +44 (0) 1753-218 930 
            Benelux: Toll-free: (French) 0800 12 045, Toll-free: (Dutch) 0800 12 046, Toll-free: (Netherlands) 0800 022 0524 or Tel: +32 15 30 77 00
            France: Toll- [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_COPY_UNDEFINED_COLUMN_MAPPING">
            <summary>
              Looks up a localized string similar to A ColumnMapping must define a source and destination column..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.BULK_SOURCE_COLUMN_NOT_FOUND">
            <summary>
              Looks up a localized string similar to The given ColumnName &apos;{0}&apos; does not match up with any column in data source..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_CHANGE_CURRENTUSER">
            <summary>
              Looks up a localized string similar to Changing the &apos;CurrentUser&apos; requires the Reauthentication Enabled connection option be set to true.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_GENERATE_COMMAND">
            <summary>
              Looks up a localized string similar to command object is not suitable for command generation..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_GENERATE_DELETE">
             <summary>
               Looks up a localized string similar to Dynamic SQL generation for the DeleteCommand is not supported against a SelectCommand that does not return any key column information.
            .
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_GENERATE_UPDATE">
             <summary>
               Looks up a localized string similar to Dynamic SQL generation for the UpdateCommand is not supported against a SelectCommand that does not return any key column information.
            .
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_GENERATE_UPDATE2">
            <summary>
              Looks up a localized string similar to Dynamic SQL generation for the UpdateCommand is not supported against a SelectCommand that does not return any modifiable columns..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_SPECIFY_OPTION_AGAIN">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; option or its alias cannot be specified more than once in a connection string..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_UPDATE_JOIN">
             <summary>
               Looks up a localized string similar to Dynamic SQL generation is not supported against multiple base tables.
            .
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CANNOT_USE_ARRAY_BINDING">
            <summary>
              Looks up a localized string similar to Only ExecuteNonQuery can use parameter array binding..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_Advanced">
            <summary>
              Looks up a localized string similar to Advanced.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_BulkLoad">
            <summary>
              Looks up a localized string similar to Bulk Load.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_ClientMonitoring">
            <summary>
              Looks up a localized string similar to Client Monitoring.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_ConnectionPooling">
            <summary>
              Looks up a localized string similar to Connection Pooling.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_Failover">
            <summary>
              Looks up a localized string similar to Failover.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_Performance">
            <summary>
              Looks up a localized string similar to Performance.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_SchemaInformation">
            <summary>
              Looks up a localized string similar to Schema Information.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_Security">
            <summary>
              Looks up a localized string similar to Security.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_StandardConnection">
            <summary>
              Looks up a localized string similar to Standard Connection.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Category_Tracing">
            <summary>
              Looks up a localized string similar to Tracing.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CMDTXT_NOT_INITIALIZED">
            <summary>
              Looks up a localized string similar to CommandText property has not been initialized..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_INDEX_INT32">
            <summary>
              Looks up a localized string similar to Invalid index {0} for this {1} with Count={2}..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_INDEX_STRING">
             <summary>
               Looks up a localized string similar to An {0} with {1} &apos;{2}&apos; is not contained by this {3}.
            .
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_INVALID_TYPE">
            <summary>
              Looks up a localized string similar to The {0} only accepts non-null {1} type objects, not {2} objects..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_IS_NOT_PARENT">
             <summary>
               Looks up a localized string similar to The {0} is already contained by another {1}.
            .
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_IS_PARENT">
             <summary>
               Looks up a localized string similar to The {0} with is already contained by this {1}.
            .
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_NULL_VALUE">
            <summary>
              Looks up a localized string similar to The {0} only accepts non-null {1} type objects..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_REMOVE_INVALID_OBJECT">
            <summary>
              Looks up a localized string similar to Attempted to remove an {0} that is not contained by this {1}..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLLECTION_TIMED_OUT">
            <summary>
              Looks up a localized string similar to Unable to build the &apos;{0}&apos; collection because the execution of the command timed out.  The &apos;Schema Collection Timeout&apos; connect option may need to be increased..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.COLUMN_INDEX_OUT_OF_RANGE">
            <summary>
              Looks up a localized string similar to Couldn&apos;t find specified column in results.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONNECTION_ALREADY_OPEN">
            <summary>
              Looks up a localized string similar to The connection is already Open (state=Open)..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONNECTION_POOL_TIMEOUT">
            <summary>
              Looks up a localized string similar to Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONNECTION_REQUIRED">
            <summary>
              Looks up a localized string similar to Operation requires connection object in SELECT command..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONNECTION_REQUIRED_TO_DERIVE_PARAMS">
            <summary>
              Looks up a localized string similar to The DeriveParameters method requires that the given command object references an open connection..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONNECTION_STATE_CLOSED">
            <summary>
              Looks up a localized string similar to The connection&apos;s current state is closed..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONNECTION_STATE_OPEN">
            <summary>
              Looks up a localized string similar to The connection&apos;s current state is open..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONNECTION_STRING_SYNTAX">
            <summary>
              Looks up a localized string similar to Format of the initialization string does not conform to specification starting at index {0}..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CONSTR_NOT_INITIALIZED">
            <summary>
              Looks up a localized string similar to The ConnectionString property has not been initialized..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CPU_COUNT_VIOLATION">
             <summary>
               Looks up a localized string similar to This system includes a licensed version of Progress DataDirect Connect for ADO.NET which may run on systems that  include up to {0} processors.  The current system is configured with {1} processors.  The 15 day grace period has expired – please contact Progress DataDirect to upgrade this license.
            USA and Canada: 800-876-3101
            United Kingdom: Toll-free: 0800 169 1907 or Tel: +44 (0) 1753-218 930
            Benelux: Toll-free: (French) 0800 12 045, Toll-free: (Dutch) 0800 12 046, Toll-free: (Netherlands) 0800 022 0524 [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CPU_COUNT_WARN">
             <summary>
               Looks up a localized string similar to This system includes a licensed version of Progress DataDirect Connect for ADO.NET which may run on systems that include up to {0} processors.  The current system is configured with {1} processors.  Please contact Progress DataDirect within the next 15 days to upgrade the license.
            USA and Canada: 800-876-3101
            United Kingdom: Toll-free: 0800 169 1907 or Tel: +44 (0) 1753-218 930
            Benelux: Toll-free: (French) 0800 12 045, Toll-free: (Dutch) 0800 12 046, Toll-free: (Netherlands) 0800 022 0524 or Tel: +32 15  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.CROSS_PROVIDER_BULK_UNSUPPORTED">
            <summary>
              Looks up a localized string similar to Cross provider bulk load is not supported..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.DATA_READER_IS_CLOSED">
            <summary>
              Looks up a localized string similar to Invalid attempt to {0} when reader is closed..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.DATA_READER_NO_DATA">
            <summary>
              Looks up a localized string similar to No data exists for the row or column..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_AlternateServers">
            <summary>
              Looks up a localized string similar to A list of database servers to which the data provider will try to connect if the primary database server is unavailable..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_BulkLoadProtocol">
            <summary>
              Looks up a localized string similar to Specifies the Bulk Load Protocol to be used..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_CommonWorkArounds">
            <summary>
              Looks up a localized string similar to Use this field only when instructed by Progress DataDirect Technical Support..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ConnectionPoolBehavior">
            <summary>
              Looks up a localized string similar to Specifies the connection pool algorithm used by the pooling mechanism. When set to LeastRecentlyUsed (the default), the pooling mechanism organizes connections in the pool using a queue processing technique. When set to MostRecentlyUsed, pooling mechanism organizes connections in the pool using a stack technique. When set to MostFrequentlyUsed, the pooling mechanism keeps track of how many times a connection has been used from the pool and provides the connection with the highest count when a connection is  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ConnectionReset">
            <summary>
              Looks up a localized string similar to When true, the connection state is reset when the connection is removed from the connection pool..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ConnectionRetryCount">
            <summary>
              Looks up a localized string similar to The number of times the data provider tries to connect to the primary server, and, if specified, the alternate servers after the initial unsuccessful attempt..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ConnectionRetryDelay">
            <summary>
              Looks up a localized string similar to The number of seconds the data provider waits after the initial unsuccessful connection attempt before retrying a connection to the primary server, and, if specified, the alternate servers..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ConnectionTimeout">
            <summary>
              Looks up a localized string similar to The number of seconds after which the attempted connection to the server will fail if not yet connected..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_DefaultSchemaRestriction">
            <summary>
              Looks up a localized string similar to The default value to use when the Schema restriction is omitted from GetSchema calls.  The initial default is an empty string (no restriction)..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_EnableTrace">
            <summary>
              Looks up a localized string similar to When set to 1 or higher, enables tracing. When set to 0, tracing is disabled..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_Enlist">
            <summary>
              Looks up a localized string similar to When true, the data provider automatically attempts to enlist the connection in creating the thread&apos;s current transaction context..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_GssClient">
            <summary>
              Looks up a localized string similar to Specifies which GSS client library the provider should use to communicate with the Key Distribution Center (KDC) when authentication in a MIT Kerberos environment.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_HostNameInCertificate">
            <summary>
              Looks up a localized string similar to Defines the host name in the certificate used as part of the SSL Server Certificate validation..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_InitialCommandTimeout">
            <summary>
              Looks up a localized string similar to The initial (default) CommandTimeout for commands that use this connection.  Setting the CommandTimeout property on the command will override this option..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_LicensePath">
            <summary>
              Looks up a localized string similar to The fully qualified path to the DDTek.lic license file..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_LoadBalanceTimeout">
            <summary>
              Looks up a localized string similar to The time (from 1 to 65535 seconds, or 0 for unlimited time) to keep connections in a connection pool. .
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_LoadBalancing">
            <summary>
              Looks up a localized string similar to When true, client load balancing is used in attempts to connect to primary and alternate database servers..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_MaxPoolSize">
            <summary>
              Looks up a localized string similar to The maximum number of connections within a single pool..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_MaxPoolSizeBehavior">
            <summary>
              Looks up a localized string similar to When set to HardCap (the default), the pooling mechanism will not allow more than MaxPoolSize connections to be created. When set to SoftCap, if MaxPoolSize connections are in use and another connection is requested, a new connection will be created. However, the pooling mechanism will not allow more than MaxPoolSize connections to be pooled..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_MaxStatementCacheSize">
            <summary>
              Looks up a localized string similar to The Max Statement Cache Size limits the size of the statement cache.  The default is 10.  Setting this size to 0 will disable the statement cache..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_MinPoolSize">
            <summary>
              Looks up a localized string similar to The minimum number of connections that are opened and placed in a connection pool when it is created..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ParameterMode">
            <summary>
              Looks up a localized string similar to When set to ANSI, &apos;?&apos; are processed as Parameter Markers and bound ordinally. When set to BindByOrdinal, native parameters markers are used and bound ordinally. When set to BindByName, native parameter markers are used and bound by name..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_PersistSecurityInfo">
            <summary>
              Looks up a localized string similar to When true, secure information is displayed in clear text in the ConnectionString property of the Connection object..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_Pooling">
            <summary>
              Looks up a localized string similar to When true, connections are pooled..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ReauthenticationEnabled">
            <summary>
              Looks up a localized string similar to Specifies if a provider may Reauthenticate.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_SchemaCollectionTimeout">
            <summary>
              Looks up a localized string similar to The number of seconds after which the attempted schema collection operation to the server will fail if not yet completed..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_SchemaOptions">
            <summary>
              Looks up a localized string similar to Specifies a schema option that influences how a provider returns schema meta data..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_StatementCacheMode">
            <summary>
              Looks up a localized string similar to The Statement Cache Mode controls the behavior of the statement cache.  By default the statements will only be cached when the command is explicity set.  This mode can be changed to automatically cache statements..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_SynchronizeConnection">
            <summary>
              Looks up a localized string similar to Specifies whether synchronization on the connection is required.  Typically, this is not required.  This is normally only needed if a connection is being shared across multiple threads.  The default is false..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ThrottleCollectionsData">
            <summary>
              Looks up a localized string similar to Specifies whether a provider returns very large collection meta data..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_TraceFile">
            <summary>
              Looks up a localized string similar to The path and name of the trace file..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_TransactionTimeout">
            <summary>
              Looks up a localized string similar to Controls the length of time the provider will wait when committing or rolling back a transaction.  0 implies the provider should not timeout.  Any positive integer represents the number of seconds the provider should wait before timing out.  -1, the default, implies the the provider will use the connection timeout setting..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_UseCurrentSchema">
            <summary>
              Looks up a localized string similar to Indicates whether the schema collections should automatically restrict using the current schema when the schema restriction is omitted..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.Description_ValidateServerCertificate">
            <summary>
              Looks up a localized string similar to Specifies whether the server certificate is verified as valid according to a Certificate Authority..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.EMPTY_DATABASE_NAME">
            <summary>
              Looks up a localized string similar to Database cannot be null, the empty string, or string of only whitespace..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.ENLIST_FAILED">
            <summary>
              Looks up a localized string similar to Error occured when enlisting connection in distributed transaction..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_ERROR">
            <summary>
              Looks up a localized string similar to Security Services Error: {0}.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_APPL_EXPIRED">
            <summary>
              Looks up a localized string similar to This application has expired.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_BAD_ENCTYPE">
            <summary>
              Looks up a localized string similar to Bad encryption type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_BAD_KEYSIZE">
            <summary>
              Looks up a localized string similar to Key size is incompatible with encryption type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_BAD_MSIZE">
            <summary>
              Looks up a localized string similar to Message size is incompatible with encryption type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_BADMSGTYPE">
            <summary>
              Looks up a localized string similar to Invalid message type specified for encoding.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_BADNAME">
            <summary>
              Looks up a localized string similar to Credential cache name malformed.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_END">
            <summary>
              Looks up a localized string similar to End of credential cache reached.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_FORMAT">
            <summary>
              Looks up a localized string similar to Bad format in credentials cache.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_IO">
            <summary>
              Looks up a localized string similar to Credentials cache I/O operation failed XXX.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_NOMEM">
            <summary>
              Looks up a localized string similar to No more memory to allocate (in credentials cache code).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_NOTFOUND">
            <summary>
              Looks up a localized string similar to Matching credential not found.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_TYPE_EXISTS">
            <summary>
              Looks up a localized string similar to Credentials cache type is already registered..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_UNKNOWN_TYPE">
            <summary>
              Looks up a localized string similar to Unknown credential cache type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CC_WRITE">
            <summary>
              Looks up a localized string similar to Error writing to credentials cache.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CCACHE_BADVNO">
            <summary>
              Looks up a localized string similar to Unsupported credentials cache format version number.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CHPW_FAIL">
            <summary>
              Looks up a localized string similar to Password change failed.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CHPW_PWDNULL">
            <summary>
              Looks up a localized string similar to New password cannot be zero length.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CONFIG_BADFORMAT">
            <summary>
              Looks up a localized string similar to Improper format of Kerberos configuration file.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CONFIG_CANTOPEN">
            <summary>
              Looks up a localized string similar to Can&apos;t open/find Kerberos configuration file.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CONFIG_ETYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to No supported encryption types (config file error?).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CONFIG_NODEFREALM">
            <summary>
              Looks up a localized string similar to Configuration file does not specify default realm.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CONFIG_NOTENUFSPACE">
            <summary>
              Looks up a localized string similar to Insufficient space to return complete information.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_CRYPTO_INTERNAL">
            <summary>
              Looks up a localized string similar to Cryptosystem internal error.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_EAI_FAIL">
            <summary>
              Looks up a localized string similar to unknown getaddrinfo failure.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_EAI_NODATA">
            <summary>
              Looks up a localized string similar to no data available for host/domain name.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_EAI_NONAME">
            <summary>
              Looks up a localized string similar to host/domain name not found.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_EAI_SERVICE">
            <summary>
              Looks up a localized string similar to service name unknown.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_ERR_BAD_HOSTNAME">
            <summary>
              Looks up a localized string similar to Hostname cannot be canonicalized.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_ERR_HOST_REALM_UNKNOWN">
            <summary>
              Looks up a localized string similar to Cannot determine realm for host.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_ERR_NUMERIC_REALM">
            <summary>
              Looks up a localized string similar to Cannot determine realm for numeric host address.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_ERR_RCSID">
            <summary>
              Looks up a localized string similar to (RCS Id string for the krb5 error table).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_FCC_INTERNAL">
            <summary>
              Looks up a localized string similar to Internal credentials cache error.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_FCC_NOFILE">
            <summary>
              Looks up a localized string similar to No credentials cache found.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_FCC_PERM">
            <summary>
              Looks up a localized string similar to Credentials cache file permissions incorrect.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_FWD_BAD_PRINCIPAL">
            <summary>
              Looks up a localized string similar to Bad principal name while trying to forward credentials.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_GET_IN_TKT_LOOP">
            <summary>
              Looks up a localized string similar to Looping detected inside krb5_get_in_tkt.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_IN_TKT_REALM_MISMATCH">
            <summary>
              Looks up a localized string similar to Client/server realm mismatch in initial ticket request.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_INVALID_FLAGS">
            <summary>
              Looks up a localized string similar to Invalid KDC option combination (library internal error) [for dual tgt library calls].
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KDC_UNREACH">
            <summary>
              Looks up a localized string similar to Cannot contact any KDC for requested realm.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KDCREP_MODIFIED">
            <summary>
              Looks up a localized string similar to KDC reply did not match expectations.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KDCREP_SKEW">
            <summary>
              Looks up a localized string similar to Clock skew too great in KDC reply.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KEYTAB_BADVNO">
            <summary>
              Looks up a localized string similar to Unsupported key table format version number.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_BADNAME">
            <summary>
              Looks up a localized string similar to Key table name malformed.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_END">
            <summary>
              Looks up a localized string similar to End of key table reached.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_FORMAT">
            <summary>
              Looks up a localized string similar to Bad format in keytab.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_IOERR">
            <summary>
              Looks up a localized string similar to Error writing to key table.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_KVNONOTFOUND">
            <summary>
              Looks up a localized string similar to Key version number for principal in key table is incorrect.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_NAME_TOOLONG">
            <summary>
              Looks up a localized string similar to Keytab name too long.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_NOTFOUND">
            <summary>
              Looks up a localized string similar to Key table entry not found.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_NOWRITE">
            <summary>
              Looks up a localized string similar to Cannot write to specified key table.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_TYPE_EXISTS">
            <summary>
              Looks up a localized string similar to Key table type is already registered..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_KT_UNKNOWN_TYPE">
            <summary>
              Looks up a localized string similar to Unknown Key table type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LIB_EXPIRED">
            <summary>
              Looks up a localized string similar to This Krb5 library has expired.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LIBOS_BADLOCKFLAG">
            <summary>
              Looks up a localized string similar to Invalid flag for file lock mode.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LIBOS_BADPWDMATCH">
            <summary>
              Looks up a localized string similar to Password mismatch.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LIBOS_CANTREADPWD">
            <summary>
              Looks up a localized string similar to Cannot read password.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LIBOS_PWDINTR">
            <summary>
              Looks up a localized string similar to Password read interrupted.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LNAME_BADFORMAT">
            <summary>
              Looks up a localized string similar to Improper format of translation database entry.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LNAME_CANTOPEN">
            <summary>
              Looks up a localized string similar to Can&apos;t open/find lname translation database.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_LNAME_NOTRANS">
            <summary>
              Looks up a localized string similar to No translation available for requested principal.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_MUTUAL_FAILED">
            <summary>
              Looks up a localized string similar to Mutual authentication failed.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_NO_2ND_TKT">
            <summary>
              Looks up a localized string similar to Request missing second ticket [for dual tgt library calls].
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_NO_LOCALNAME">
            <summary>
              Looks up a localized string similar to No local name found for principal name.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_NO_TKT_IN_RLM">
            <summary>
              Looks up a localized string similar to Cannot find ticket for requested realm.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_NO_TKT_SUPPLIED">
            <summary>
              Looks up a localized string similar to Request did not supply a ticket.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_NOCREDS_SUPPLIED">
            <summary>
              Looks up a localized string similar to No credentials supplied to library routine.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_NOPERM_ETYPE">
            <summary>
              Looks up a localized string similar to Encryption type not permitted.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_OBSOLETE_FN">
            <summary>
              Looks up a localized string similar to Program called an obsolete, deleted function.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PARSE_ILLCHAR">
            <summary>
              Looks up a localized string similar to Illegal character in component name.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PARSE_MALFORMED">
            <summary>
              Looks up a localized string similar to Malformed representation of principal.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PREAUTH_BAD_TYPE">
            <summary>
              Looks up a localized string similar to Unsupported preauthentication type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PREAUTH_FAILED">
            <summary>
              Looks up a localized string similar to Generic preauthentication failure.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PREAUTH_NO_KEY">
            <summary>
              Looks up a localized string similar to Required preauthentication key not supplied.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PRINC_NOMATCH">
            <summary>
              Looks up a localized string similar to Requested principal and ticket don&apos;t match.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PROG_ATYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to Program lacks support for address type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PROG_ETYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to Program lacks support for encryption type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PROG_KEYTYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to Program lacks support for key type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_PROG_SUMTYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to Program lacks support for checksum type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_IO">
            <summary>
              Looks up a localized string similar to Replay I/O operation failed XXX.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_IO_EOF">
            <summary>
              Looks up a localized string similar to End-of-file on replay cache I/O.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_IO_IO">
            <summary>
              Looks up a localized string similar to I/O error in replay cache i/o code.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_IO_MALLOC">
            <summary>
              Looks up a localized string similar to No more memory to allocate (in replay cache I/O code).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_IO_PERM">
            <summary>
              Looks up a localized string similar to Permission denied in replay cache code.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_IO_SPACE">
            <summary>
              Looks up a localized string similar to Insufficient system space to store replay information.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_IO_UNKNOWN">
            <summary>
              Looks up a localized string similar to Generic unknown RC/IO error.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_MALLOC">
            <summary>
              Looks up a localized string similar to No more memory to allocate (in replay cache code).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_NOIO">
            <summary>
              Looks up a localized string similar to Replay cache type does not support non-volatile storage.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_PARSE">
            <summary>
              Looks up a localized string similar to Replay cache name parse/format error.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_REPLAY">
            <summary>
              Looks up a localized string similar to Message is a replay.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_REQUIRED">
            <summary>
              Looks up a localized string similar to Message replay detection requires rcache parameter.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_TYPE_EXISTS">
            <summary>
              Looks up a localized string similar to Replay cache type is already registered.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_TYPE_NOTFOUND">
            <summary>
              Looks up a localized string similar to Replay cache type is unknown.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RC_UNKNOWN">
            <summary>
              Looks up a localized string similar to Generic unknown RC error.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_RCACHE_BADVNO">
            <summary>
              Looks up a localized string similar to Unsupported replay cache format version number.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_REALM_CANT_RESOLVE">
            <summary>
              Looks up a localized string similar to Cannot resolve KDC for requested realm.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_REALM_UNKNOWN">
            <summary>
              Looks up a localized string similar to Cannot find KDC for requested realm.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_SAM_UNSUPPORTED">
            <summary>
              Looks up a localized string similar to Bad SAM flags in obtain_sam_padata.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_SENDAUTH_BADAPPLVERS">
            <summary>
              Looks up a localized string similar to Bad application version was sent (via sendauth).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_SENDAUTH_BADAUTHVERS">
            <summary>
              Looks up a localized string similar to Bad sendauth version was sent.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_SENDAUTH_BADRESPONSE">
            <summary>
              Looks up a localized string similar to Bad response (during sendauth exchange).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_SENDAUTH_REJECTED">
            <summary>
              Looks up a localized string similar to Server rejected authentication (during sendauth exchange).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_SERVICE_UNKNOWN">
            <summary>
              Looks up a localized string similar to Kerberos service unknown.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_SNAME_UNSUPP_NAMETYPE">
            <summary>
              Looks up a localized string similar to Conversion to service principal undefined for name type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_TKT_NOT_FORWARDABLE">
            <summary>
              Looks up a localized string similar to Requesting ticket can&apos;t get forwardable tickets.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_TRANS_BADFORMAT">
            <summary>
              Looks up a localized string similar to Improper format of realm translation file.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_TRANS_CANTOPEN">
            <summary>
              Looks up a localized string similar to Can&apos;t open/find realm translation file.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5_WRONG_ETYPE">
            <summary>
              Looks up a localized string similar to Requested encryption type not used in message.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5DES_BAD_KEYPAR">
            <summary>
              Looks up a localized string similar to DES key has bad parity.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5DES_WEAK_KEY">
            <summary>
              Looks up a localized string similar to DES key is a weak key.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_BAD_PVNO">
            <summary>
              Looks up a localized string similar to Requested protocol version not supported.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_BADOPTION">
            <summary>
              Looks up a localized string similar to KDC can&apos;t fulfill requested option.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_C_OLD_MAST_KVNO">
            <summary>
              Looks up a localized string similar to Client&apos;s key is encrypted in an old master key.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN">
            <summary>
              Looks up a localized string similar to Client not found in Kerberos database.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_CANNOT_POSTDATE">
            <summary>
              Looks up a localized string similar to Ticket is ineligible for postdating.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_CLIENT_NOTYET">
            <summary>
              Looks up a localized string similar to Client not yet valid - try again later.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_CLIENT_REVOKED">
            <summary>
              Looks up a localized string similar to Clients credentials have been revoked.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_ETYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to KDC has no support for encryption type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_KEY_EXP">
            <summary>
              Looks up a localized string similar to Password has expired.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_NAME_EXP">
            <summary>
              Looks up a localized string similar to Client&apos;s entry in database has expired.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_NEVER_VALID">
            <summary>
              Looks up a localized string similar to Requested effective lifetime is negative or too short.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_NULL_KEY">
            <summary>
              Looks up a localized string similar to Client or server has a null key.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_PADATA_TYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to KDC has no support for padata type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_POLICY">
            <summary>
              Looks up a localized string similar to KDC policy rejects request.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_PREAUTH_FAILED">
            <summary>
              Looks up a localized string similar to Preauthentication failed.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_PREAUTH_REQUIRED">
            <summary>
              Looks up a localized string similar to Additional pre-authentication required.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_PRINCIPAL_NOT_UNIQUE">
            <summary>
              Looks up a localized string similar to Principal has multiple entries in Kerberos database.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_S_OLD_MAST_KVNO">
            <summary>
              Looks up a localized string similar to Server&apos;s key is encrypted in an old master key.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN">
            <summary>
              Looks up a localized string similar to Server not found in Kerberos database.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_SERVER_NOMATCH">
            <summary>
              Looks up a localized string similar to Requested server and ticket don&apos;t match.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_SERVICE_EXP">
            <summary>
              Looks up a localized string similar to Server&apos;s entry in database has expired.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_SERVICE_NOTYET">
            <summary>
              Looks up a localized string similar to Server not yet valid - try again later.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_SERVICE_REVOKED">
            <summary>
              Looks up a localized string similar to Credentials for server have been revoked.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_SUMTYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to KDC has no support for checksum type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_TGT_REVOKED">
            <summary>
              Looks up a localized string similar to TGT has been revoked.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KDC_ERR_TRTYPE_NOSUPP">
            <summary>
              Looks up a localized string similar to KDC has no support for transited type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BAD_INTEGRITY">
            <summary>
              Looks up a localized string similar to Decrypt integrity check failed.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BADADDR">
            <summary>
              Looks up a localized string similar to Incorrect net address.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BADDIRECTION">
            <summary>
              Looks up a localized string similar to Incorrect message direction.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BADKEYVER">
            <summary>
              Looks up a localized string similar to Key version is not available.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BADMATCH">
            <summary>
              Looks up a localized string similar to Ticket/authenticator don&apos;t match.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BADORDER">
            <summary>
              Looks up a localized string similar to Message out of order.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BADSEQ">
            <summary>
              Looks up a localized string similar to Incorrect sequence number in message.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_BADVERSION">
            <summary>
              Looks up a localized string similar to Protocol version mismatch.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_ILL_CR_TKT">
            <summary>
              Looks up a localized string similar to Illegal cross-realm ticket.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_INAPP_CKSUM">
            <summary>
              Looks up a localized string similar to Inappropriate type of checksum in message.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_METHOD">
            <summary>
              Looks up a localized string similar to Alternative authentication method required.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_MODIFIED">
            <summary>
              Looks up a localized string similar to Message stream modified.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_MSG_TYPE">
            <summary>
              Looks up a localized string similar to Invalid message type.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_MUT_FAIL">
            <summary>
              Looks up a localized string similar to Mutual authentication failed.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_NOKEY">
            <summary>
              Looks up a localized string similar to Service key not available.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_NOT_US">
            <summary>
              Looks up a localized string similar to The ticket isn&apos;t for us.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_REPEAT">
            <summary>
              Looks up a localized string similar to Request is a replay.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_SKEW">
            <summary>
              Looks up a localized string similar to Clock skew too great.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_TKT_EXPIRED">
            <summary>
              Looks up a localized string similar to Ticket expired.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_TKT_INVALID">
            <summary>
              Looks up a localized string similar to Ticket has invalid flag set.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_TKT_NYV">
            <summary>
              Looks up a localized string similar to Ticket not yet valid.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_ERR_V4_REPLY">
            <summary>
              Looks up a localized string similar to Initial Ticket response appears to be Version 4 error.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_PATH_NOT_ACCEPTED">
            <summary>
              Looks up a localized string similar to Policy rejects transited path.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_AP_WRONG_PRINC">
            <summary>
              Looks up a localized string similar to Wrong principal in request.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_ERR_FIELD_TOOLONG">
            <summary>
              Looks up a localized string similar to Field is too long for this implementation.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_ERR_GENERIC">
            <summary>
              Looks up a localized string similar to Generic error (see e-text).
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.GSS_KRB5KRB_ERR_RESPONSE_TOO_BIG">
            <summary>
              Looks up a localized string similar to Response too big for UDP, retry with TCP.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.HELPER_NOT_FOUND">
            <summary>
              Looks up a localized string similar to The {0} assembly with assembly version number of {1} failed to load.  .
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_COLUMN_INDEX">
            <summary>
              Looks up a localized string similar to The index specified must non-negative and less than the number of columns in the reader..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_CONNECTION_OPTION_VALUE">
            <summary>
              Looks up a localized string similar to Invalid value for key &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_ENUMERATION_VALUE">
            <summary>
              Looks up a localized string similar to The {0} enumeration value, {1}, is invalid..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_MIN_MAX_POOL_SIZE_VALUES">
            <summary>
              Looks up a localized string similar to Invalid min or max pool size values, min pool size cannot be greater than the max pool size..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_OFFSET_VALUE">
            <summary>
              Looks up a localized string similar to Invalid parameter Offset value &apos;{0}&apos;. The value must be greater than or equal to 0..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_PARAMETER_DBTYPE">
            <summary>
              Looks up a localized string similar to Invalid parameter DbType..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_PARAMETER_DIRECTION">
            <summary>
              Looks up a localized string similar to Invalid parameter direction..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_PARAMETER_SIZE">
            <summary>
              Looks up a localized string similar to Invalid parameter size..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_PARAMETER_SOURCE">
            <summary>
              Looks up a localized string similar to Invalid parameter source..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.INVALID_SIZE_VALUE">
            <summary>
              Looks up a localized string similar to Invalid parameter Size value &apos;{0}&apos;. The value must be greater than or equal to 0..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.KEYWORD_NOT_SUPPORTED">
            <summary>
              Looks up a localized string similar to Keyword not supported: {0}..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.MISSING_RESTRICTION_DEFAULT">
            <summary>
              Looks up a localized string similar to Missing restriction default..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.MUTUALLY_EXCLUSIVE_OPTIONS">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; option and the &apos;{1}&apos; option cannot be specified together in the same connection string..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.NAMED_PARAMETER_MARKER_MISMATCH">
            <summary>
              Looks up a localized string similar to Named parameter marker mismatch. Cannot match named parameter marker {0} within the Parameter collection.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.NEED_ADAPTER">
            <summary>
              Looks up a localized string similar to The DataAdapter.SelectCommand property needs to be initialized..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.NO_DTC_INSTALLATION">
            <summary>
              Looks up a localized string similar to The optional DTC support components cannot be located.  Please make sure you have installed them and that they are on your path.  See the product documentation for more details..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.NO_DTC_LICENSE">
             <summary>
               Looks up a localized string similar to The Progress DataDirect ADO.NET Data Provider you are attempting to use is not licensed for use in Distributed Transactions.  A Server license is required for this feature.  If you would like to purchase a Server license, please contact Progress DataDirect. USA and Canada: 800-876-3101
            United Kingdom: Toll-free: 0800 169 1907 or Tel: +44 (0) 1753-218 930 
            Benelux: Toll-free: (French) 0800 12 045, Toll-free: (Dutch) 0800 12 046, Toll-free: (Netherlands) 0800 022 0524 or Tel: +32 15 30 77 00
            France: Toll-f [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.NO_DTC_SUPPORT_PLATFORM">
            <summary>
              Looks up a localized string similar to The DTC is only supported on Windows 2000 or later..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.NO_DTC_TRANSACTION">
            <summary>
              Looks up a localized string similar to Not in distributed transaction..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.NO_PARALLEL_TRANSACTIONS">
            <summary>
              Looks up a localized string similar to Parallel transactions not supported..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.OBJECT_DISPOSED">
            <summary>
              Looks up a localized string similar to Cannot use a disposed object..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.ODBC_CALL_ESCAPE_NOT_SUPPORTED">
            <summary>
              Looks up a localized string similar to ODBC CALL escape is not supported..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.OPEN_CONNECTION_PROPERTY_SET">
            <summary>
              Looks up a localized string similar to Not allowed to change the &apos;{0}&apos; property. {1}.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.PREPARE_REQUIRES_PARAM_SIZE">
            <summary>
              Looks up a localized string similar to Prepare method requires all variable length parameters to have an explicitly set non-zero Size..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.PREPARE_REQUIRES_PARAM_TYPE">
            <summary>
              Looks up a localized string similar to Prepare method requires all parameters to have an explicitly set type..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.QUERY_FAILED">
            <summary>
              Looks up a localized string similar to Unable to build the &apos;{0}&apos; collection because execution of the command failed with the following error: {1}.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.READER_ALREADY_ACTIVE_FOR_CONNECTION">
            <summary>
              Looks up a localized string similar to A data reader is already active for this connection..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.READER_NOT_ON_ROW">
            <summary>
              Looks up a localized string similar to Operation not supported when reader is not positioned to a row..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.READER_OPEN">
            <summary>
              Looks up a localized string similar to A DataReader object is already open for this command..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.REQUIRED_ARGUMENT_WAS_NULL">
            <summary>
              Looks up a localized string similar to A required argument was null..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.REQUIRED_RESTRICTION_NOT_SPECIFIED">
            <summary>
              Looks up a localized string similar to The required restriction, {0}, was not specified..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.SUPERSEDED_OPTIONS_CANT_COEXIST">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; option has been superseded by the &apos;{1}&apos; option. They cannot be specified together in the same connection string..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.TOO_MANY_RESTRICTIONS">
            <summary>
              Looks up a localized string similar to More restrictions were provided than the requested schema (&apos;{0}&apos;) supports..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.TRANSACTION_CONNECTION_MISMATCH">
            <summary>
              Looks up a localized string similar to The transaction object for this command does not match the connection object for this command..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.TRANSACTION_PRESENT">
            <summary>
              Looks up a localized string similar to Cannot enlist in the distributed transaction because an existing transaction is in progress on the connection.  Finish existing transaction and retry..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.TRANSACTION_REQURED">
             <summary>
               Looks up a localized string similar to Execute requires the command to have a
            transaction object when the connection assigned to the command is in a
            pending local transaction.  The Transaction property of the command has
            not been initialized..
             </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.TRANSACTION_ZOMBIED">
            <summary>
              Looks up a localized string similar to Operation invalid on a inactive transaction object..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.TXN_NOT_ACTIVE">
            <summary>
              Looks up a localized string similar to Transaction already commited or rolled back..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UNABLE_TO_LOAD_ASSEMBLY">
            <summary>
              Looks up a localized string similar to EnableLoggingApplicationBlock is set to true but the assembly specified for LABAssemblyName failed to load &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UNABLE_TO_LOAD_METHOD">
            <summary>
              Looks up a localized string similar to Unable to load the method or constructor &apos;{0}.{1}&apos;..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UNABLE_TO_LOAD_TYPE">
            <summary>
              Looks up a localized string similar to Unable to load the type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UNDEFINED_COLLECTION">
            <summary>
              Looks up a localized string similar to The requested collection ({0}) is not defined..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UNSUPPORTED_PARAMETER_MODE">
            <summary>
              Looks up a localized string similar to Unsupported Parameter Mode. Uses are restricted to ANSI, BindByOrdinal or BindByName.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UNSUPPORTED_VERSION">
            <summary>
              Looks up a localized string similar to The requested collection ({0}) is not supported by this version of the provider..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BAD_BINDINGS">
            <summary>
              Looks up a localized string similar to Incorrect channel bindings were supplied..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BAD_MECH">
            <summary>
              Looks up a localized string similar to The requested mechanism is unavailable..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BAD_NAME">
            <summary>
              Looks up a localized string similar to An invalid name was supplied..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BAD_NAMETYPE">
            <summary>
              Looks up a localized string similar to A supplied name was of an unsupported type..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BAD_QOP">
            <summary>
              Looks up a localized string similar to The requested quality of protection could not be provided by the context..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BAD_SIG">
            <summary>
              Looks up a localized string similar to A token had an invalid MIC..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BAD_STATUS">
            <summary>
              Looks up a localized string similar to An invalid status code was supplied..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_BUFFER_OVERFLOW">
            <summary>
              Looks up a localized string similar to Output buffer overflow.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_CONTEXT_EXPIRED">
            <summary>
              Looks up a localized string similar to The context has already expired..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_CREDENTIALS_EXPIRED">
            <summary>
              Looks up a localized string similar to The credentials could not be acquired because they have expired..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_DEFECTIVE_CREDENTIAL">
            <summary>
              Looks up a localized string similar to The referenced credentials were invalid..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_DEFECTIVE_TOKEN">
            <summary>
              Looks up a localized string similar to Consistency checks on input token failed..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_DUPLICATE_ELEMENT">
            <summary>
              Looks up a localized string similar to The requested credential element already exists..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_FAILURE">
            <summary>
              Looks up a localized string similar to Unspecified error at the GSS layer..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_NAME_NOT_MN">
            <summary>
              Looks up a localized string similar to The provided name was not a mechanism name..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_NO_CONTEXT">
            <summary>
              Looks up a localized string similar to No context has been established..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_NO_CRED">
            <summary>
              Looks up a localized string similar to No credentials were found for the specified name..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_NO_SERVICE_PRINCIPLE">
            <summary>
              Looks up a localized string similar to No Service Principle Name.
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_UNAUTHORIZED">
            <summary>
              Looks up a localized string similar to The operation is forbidden by local security policy..
            </summary>
        </member>
        <member name="P:DDTek.Common.CommonStrings.UT_GSS_UNAVAILABLE">
            <summary>
              Looks up a localized string similar to The operation is unavailable..
            </summary>
        </member>
        <member name="F:DDInt.Common.CommonTimestampEscape.m_value">
            Time/date/timestamp value.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.#ctor(DDInt.Parser.BaseSQLTreeNode)">
             Constructor.
            
             TimestampEscape
                 ::= _LeftBrace _TS _StringLiteral ...
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.validateValue">
            Validate the time/date/timestamp value, since the parser only
            recognizes a string literal.  The contents of the string literal
            were not checked.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getYear">
             Returns the year (yyyy) value for the yyyy-mm-dd or
             yyyy-mm-dd hh:mm:ss[.f...] escape formats; null, otherwise.
            
             @return the year value for ODBC 'd' and 'ts' escapes; null,
             otherwise.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getMonth">
             Returns the month (mm) value from the yyyy-mm-dd or
             yyyy-mm-dd hh:mm:ss[.f...] escape formats; null, otherwise.
            
             @return the month value for ODBC 'd' and 'ts' escapes; null,
             otherwise.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getDay">
             Returns the day (dd) value from the yyyy-mm-dd or
             yyyy-mm-dd hh:mm:ss[.f...] escape formats; null, otherwise.
            
             @return the day value for ODBC 'd' and 'ts' escapes; null,
             otherwise.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getHour">
             Returns the hour (hh) value from the hh:mm:ss[.f...] or
             yyyy-mm-dd hh:mm:ss[.f...] escape formats; null, otherwise.
            
             @return the hour value for ODBC 't' and 'ts' escapes; null,
             otherwise.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getMinutes">
             Returns the minutes (mm) value from the hh:mm:ss[.f...] or
             yyyy-mm-dd hh:mm:ss[.f...] escape formats; null, otherwise.
            
             @return the minutes value for ODBC 't' and 'ts' escapes; null,
             otherwise.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getSeconds">
             Returns the seconds (ss) value from the hh:mm:ss[.f...] or
             yyyy-mm-dd hh:mm:ss[.f...] escape formats; null, otherwise.
            
             @return the seconds value for ODBC 't' and 'ts' escapes; null,
             otherwise.
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Common.CommonTimestampEscape.getSecondsFraction" -->
        <member name="M:DDInt.Common.CommonTimestampEscape.getTimestamp">
             Returns the timestamp value in the ODBC format
             (yyyy-mm-dd hh:mm:ss[.f...]).
            
             @return the timestamp value in the ODBC format.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getTime">
             Returns the time value in the ODBC format (hh:mm:ss[.f...]).
            
             @return the time value in the ODBC format.
        </member>
        <member name="M:DDInt.Common.CommonTimestampEscape.getDate">
             Returns the date value in the ODBC format (yyyy-mm-dd).
            
             @return the date value in the ODBC format.
        </member>
        <member name="T:DDInt.Common.CommonTrace">
            <summary>
            The Connect for .NET Provider supports tracing through the CommonTrace class.
            The provider can trace all of its method calls and the returns from those
            method calls to a trace file specified by the user.
            </summary>
        </member>
        <member name="M:DDInt.Common.CommonTrace.SetEnableTrace(System.Int32)">
            <summary>
            The EnableTrace() property enables tracing. The default is 0 (disabled).
            </summary>
        </member>
        <member name="M:DDInt.Common.CommonTrace.DumpFootprints">
            <summary>
            The DumpFootprints() method displays the footprint of all source files
            in a data provider.
            </summary>
        </member>
        <member name="P:DDInt.Common.CommonTrace.TraceFile">
            <summary>
            The TraceFile property gets or sets the name of the trace output file.
            </summary>
        </member>
        <member name="M:DDInt.Common.CommonUtility.BytesToString(System.Byte[],System.Int32)">
             This method accepts a byte array and constructs a string which
             represents the contents of the byte array. For instance, a byte
             array containing 0x6162 (two bytes) is returned as the string
             "6162" (four characters).
            
             @param bytes The array which contains the bytes representing
             the UCS2 characters.
            
             @param len The number of "relevant" bytes in the array.
        </member>
        <member name="M:DDInt.Common.CommonUtility.ByteToHex(System.Byte)">
             Used to convert a single byte into a string which contains
             its hexadecimal representation.
            
             @param b The value of the byte whose hexadecimal representation is to
             be constructed.
        </member>
        <member name="M:DDInt.Common.CommonUtility.GetEncryptString(System.String)">
            <summary>
            Method to Encrypt string to Hex data.
            </summary>
            <param name="stringToEncrypt">string data to be encrypted.</param>
            <returns>Encrypted Srting ( Hex format )</returns>
        </member>
        <member name="M:DDInt.Common.CommonUtility.GetDecryptString(System.String)">
            <summary>
            Method to decrypt hex string to string data.
            </summary>
            <param name="stringtoDecrypt">string to be decrypted.</param>
            <returns>Decrypted Srting</returns>
        </member>
        <member name="M:DDInt.Common.CommonUtility.CombinePaths(System.String[])">
            <summary>
            Method to combine passed path array to a single path.
            </summary>
            <param name="paths"> Array of paths to combine.</param>
            <returns>Combined Path.</returns>
        </member>
        <member name="T:DDInt.License.LicFile">
            <summary>
            Summary description for LicenseFile.
            </summary>
        </member>
        <member name="T:DDInt.License.LicProvider">
            <summary>
            Class that contains per provider info.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleBulkCopyOptions">
            <summary>
            Bitwise flag that specifies one or more options to use with an instance of OracleBulkCopy.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleBulkCopy">
            <summary> Lets you efficiently bulk load a SQL Server table with data from another source.
            </summary>
            
            <remarks> Microsoft SQL Server includes a popular command-prompt utility named bcp for
            moving data from one table to another, whether on a single server or between servers. The
            OracleBulkCopy class lets you write managed code solutions that provide similar functionality.
            There are other ways to load data into a SQL Server table (INSERT statements, for example),
            but OracleBulkCopy offers a significant performance advantage over them.
            
            <para>The OracleBulkCopy class can be used to write data only to SQL Server tables. However, the
            data source is not limited to SQL Server; any data source can be used, as long as the data
            can be loaded to a DataTable instance or read with a IDataReader instance.
            </para>
            </remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.#ctor(DDTek.Oracle.OracleConnection)">
            <summary> Initializes a new instance of the OracleBulkCopy class using the specified
            open instance of OracleConnection. 
            </summary>
            
            <param name="connection"> The already open OracleConnection instance that will be used
            to perform the bulk copy operation.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.#ctor(System.String)">
            <summary> Initializes and opens a new instance of OracleConnection based on the
            supplied connectionString. The constructor uses the OracleConnection to initialize
            a new instance of the OracleBulkCopy class.
            </summary>
            
            <param name="connectionString"> The string defining the connection that will be opened
            for use by the OracleBulkCopy instance.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.#ctor(System.String,DDTek.Oracle.OracleBulkCopyOptions)">
            <summary> Initializes and opens a new instance of OracleConnection based on the
            supplied connectionString. The constructor uses that OracleConnection to initialize
            a new instance of the OracleBulkCopy class. The OracleConnection instance behaves
            according to options supplied in the copyOptions parameter.
            </summary>
            
            <param name="connectionString"> The string defining the connection that will be opened
            for use by the OracleBulkCopy instance.
            </param>
            
            <param name="copyOptions"> A combination of values from the OracleBulkCopyOptions
            enumeration that determines which data source rows are copied to the destination table.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.#ctor(DDTek.Oracle.OracleConnection,DDTek.Oracle.OracleBulkCopyOptions,DDTek.Oracle.OracleTransaction)">
            <summary> Initializes a new instance of the OracleBulkCopy class using the supplied
            existing open instance of OracleConnection. The OracleBulkCopy instance behaves
            according to options supplied in the copyOptions parameter. If a non-null OracleTransaction
            is supplied, the copy operations will be performed within that transaction.
            </summary>
            
            <param name="connection"> The already open OracleConnection instance that will be used
            to perform the bulk copy.
            </param>
            
            <param name="copyOptions"> A combination of values from the OracleBulkCopyOptions
            enumeration that determines which data source rows are copied to the destination table.
            </param>
            
            <param name="externalTransaction"> An existing OracleTransaction instance under which
            the bulk copy will occur.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.Dispose(System.Boolean)">
            <summary> Releases the unmanaged resources and optionally releases the managed resources.
            </summary>
            
            <param name="disposing"> true to release both managed and unmanaged resources; false to
            release only unmanaged resources.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.Close">
            <summary> Closes the OracleBulkCopy instance.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.WriteToServer(System.Data.IDataReader)">
            <summary> Copies all rows in the supplied IDataReader to a destination table specified
            by the DestinationTableName property of the OracleBulkCopy object.
            </summary>
            
            <param name="reader"> A IDataReader whose rows will be copied to the destination table.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.WriteToServer(System.Data.DataRow[])">
            <summary> Copies all rows from the supplied DataRow array to a destination table
            specified by the DestinationTableName property of the OracleBulkCopy object.
            </summary>
            
            <param name="rows"> An array of DataRow objects that will be copied to the destination table.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.WriteToServer(System.Data.DataTable)">
            <summary> Copies all rows in the supplied DataTable to a destination table specified
            by the DestinationTableName property of the OracleBulkCopy object.
            </summary>
            
            <param name="table"> A DataTable whose rows will be copied to the destination table.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)">
            <summary> Copies only rows that match the supplied row state in the supplied DataTable
            to a destination table specified by the DestinationTableName property of the
            OracleBulkCopy object.
            </summary>
            
            <param name="table"> A DataTable whose rows will be copied to the destination table.
            </param>
            
            <param name="rowState"> A value from the DataRowState enumeration. Only rows matching
            the row state are copied to the destination.
            </param>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopy.BatchSize">
            <summary> Number of rows in each batch. At the end of each batch, the rows in the batch
            are sent to the server.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopy.BulkCopyTimeout">
            <summary> Number of seconds for the operation to complete before it times out. 
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopy.ColumnMappings">
             <summary> Returns a collection of OracleBulkCopyColumnMapping items. Column
             mappings define the relationships between columns in the data source and columns
             in the destination.
             </summary>
             
             <remarks> If the data source and the destination table have the same number of
             columns, and the ordinal position of each source column within the data source matches
             the ordinal position of the corresponding destination column, the ColumnMappings
             collection is unnecessary. However, if the column counts differ, or the ordinal positions
             are not consistent, you must use ColumnMappings to make sure that data is copied into
             the correct columns.
            
             <para> During the execution of a bulk copy operation, this collection can be accessed,
             but it cannot be changed. Any attempt to change it will throw an InvalidOperationException.
             </para>
             </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopy.DestinationTableName">
            <summary> Name of the destination table on the server. 
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopy.NotifyAfter">
            <summary> Defines the number of rows to be processed before generating a notification
            event.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleBulkCopyColumnMapping">
            <summary> Defines the mapping between a column in a OracleBulkCopy instance's data source
            and a column in the instance's destination table.
            </summary>
            
            <remarks> Column mappings define the mapping between data source and the target table.
            
            <para> If mappings are not defined—that is, the ColumnMappings collection is empty—the
            columns are mapped implicitly based on ordinal position. For this to work, source
            and target schemas must match. If they do not, an InvalidOperationException is thrown.
            </para>
            
            <para> If the ColumnMappings collection is not empty, not every column present in the data
            source has to be specified. Those not mapped by the collection are ignored.
            </para>
            
            <para> You can refer to source and target columns by either name or ordinal. You can mix
            by-name and by-ordinal column references in the same mappings collection.
            </para>
            </remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMapping.#ctor">
            <summary> Default constructor that initializes a new OracleBulkCopyColumnMapping
            object.
            </summary>
            
            <remarks> If you use this constructor, you must then define the source for the mapping
            using the SourceColumn property or the SourceOrdinal property, and define the destination
            for the mapping using the DestinationColumn property or the DestinationOrdinal property.
            </remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMapping.#ctor(System.Int32,System.Int32)">
            <summary> Creates a new column mapping, using column ordinals to refer to source and
            destination columns.
            </summary>
            
            <param name="sourceOrdinal"> The ordinal position of the source column within the data
            source.
            </param>
            
            <param name="destinationOrdinal"> The ordinal position of the destination column within
            the destination table.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMapping.#ctor(System.Int32,System.String)">
            <summary> Creates a new column mapping, using a column ordinal to refer to the source
            column and a column name for the target column.
            </summary>
            
            <param name="sourceOrdinal"> The ordinal position of the source column within the data
            source.
            </param>
            
            <param name="destinationColumn"> The name of the destination column within the destination
            table.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMapping.#ctor(System.String,System.Int32)">
            <summary> Creates a new column mapping, using a column name to refer to the source column
            and a column ordinal for the target column.
            </summary>
            
            <param name="sourceColumn"> The name of the source column within the data source.
            </param>
            
            <param name="destinationOrdinal"> The ordinal position of the destination column within
            the destination table.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMapping.#ctor(System.String,System.String)">
            <summary> Creates a new column mapping, using column names to refer to source and
            destination columns.
            </summary>
            
            <param name="sourceColumn"> The name of the source column within the data source.
            </param>
            
            <param name="destinationColumn"> The name of the destination column within the
            destination table.
            </param>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopyColumnMapping.DestinationColumn">
            <summary> Name of the column being mapped in the destination database table.
            </summary>
            
            <remarks> The DestinationColumn and DestinationOrdinal properties are mutually
            exclusive. The last value set takes precedence.
            </remarks>
            
            <returns> The string value of the DestinationColumn property.
            </returns>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopyColumnMapping.DestinationOrdinal">
            <summary> Ordinal value of the destination column within the destination table.
            </summary>
            
            <remarks> The DestinationColumn and DestinationOrdinal properties are mutually
            exclusive. The last value set takes precedence.
            </remarks>
            
            <returns> The integer value of the DestinationOrdinal property, or -1 if the
            property has not been set.
            </returns>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopyColumnMapping.SourceColumn">
            <summary> Name of the column being mapped in the data source.
            </summary>
            
            <remarks> The SourceColumn and SourceOrdinal properties are mutually
            exclusive. The last value set takes precedence
            </remarks>
            
            <returns> The string value of the SourceColumn property.
            </returns>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopyColumnMapping.SourceOrdinal">
            <summary> The ordinal position of the source column within the data source.
            </summary>
            
            <remarks> The SourceColumn and SourceOrdinal properties are mutually
            exclusive. The last value set takes precedence
            </remarks>
            
            <returns> The integer value of the SourceOrdinal property.
            </returns>
        </member>
        <member name="T:DDTek.Oracle.OracleBulkCopyColumnMappingCollection">
            <summary> Collection of OracleBulkCopyColumnMapping objects that inherits from CollectionBase.
            </summary>
            
            <remarks> Column mappings define the mapping between data source and the target table.
            
            <para>If mappings are not defined—that is, the ColumnMappings collection is empty—the
            columns are mapped implicitly based on ordinal position. For this to work, source
            and target schemas must match. If they do not, an InvalidOperationException is thrown.
            </para>
            
            <para>If the ColumnMappings collection is not empty, not every column present in the data
            source has to be specified. Those not mapped by the collection are ignored.
            </para>
            
            <para>You can refer to source and target columns by either name or ordinal. You can mix
            by-name and by-ordinal column references in the same mappings collection.
            </para>
            </remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Add(DDTek.Oracle.OracleBulkCopyColumnMapping)">
            <summary> Adds the specified mapping to the OracleBulkCopyColumnMappingCollection.
            </summary>
            
            <param name="bulkCopyColumnMapping">
            The OracleBulkCopyColumnMapping object that describes the mapping to be added to the
            collection.
            </param>
            
            <returns> A OracleBulkCopyColumnMapping object.
            </returns>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
            <summary> Creates a new OracleBulkCopyColumnMapping and adds it to the collection,
            using ordinals to specify both source and destination columns.
            </summary>
            
            <remarks> Mappings in a collection must be uniform: either all integer/integer pairs, all
            string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to
            add a mapping that is different from others already in the collection, an
            InvalidOperationException is thrown.
            </remarks>
            
            <param name="sourceOrdinal"> The ordinal position of the source column within the data source.
            </param>
            
            <param name="destinationOrdinal"> The ordinal position of the destination column within the
            destination table.
            </param>
            
            <returns> A OracleBulkCopyColumnMapping object.
            </returns>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
            <summary> Creates a new OracleBulkCopyColumnMapping and adds it to the collection,
            using an ordinal for the source column and a string for the destination column.
            </summary>
            
            <remarks> Mappings in a collection must be uniform: either all integer/integer pairs, all
            string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to
            add a mapping that is different from others already in the collection, an
            InvalidOperationException is thrown.
            </remarks>
            
            <param name="sourceOrdinal"> The ordinal position of the source column within the data source.
            </param>
            
            <param name="destinationColumn"> The name of the destination column within the destination table.
            </param>
            
            <returns> A OracleBulkCopyColumnMapping object.
            </returns>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
            <summary> Creates a new OracleBulkCopyColumnMapping and adds it to the collection,
            using a column name to describe the source column and an ordinal to specify the
            destination column.
            </summary>
            
            <remarks> Mappings in a collection must be uniform: either all integer/integer pairs, all
            string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to
            add a mapping that is different from others already in the collection, an
            InvalidOperationException is thrown.
            </remarks>
            
            <param name="sourceColumn"> The name of the source column within the data source.
            </param>
            
            <param name="destinationOrdinal"> The ordinal position of the destination column within
            the destination table.
            </param>
            
            <returns> A OracleBulkCopyColumnMapping object.
            </returns>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Add(System.String,System.String)">
            <summary> Creates a new OracleBulkCopyColumnMapping and adds it to the collection,
            using column names to specify both source and destination columns.
            </summary>
            
            <remarks> Mappings in a collection must be uniform: either all integer/integer pairs, all
            string/string pairs, all integer/string pairs, or all string/integer pairs. If you try to
            add a mapping that is different from others already in the collection, an
            InvalidOperationException is thrown.
            </remarks>
            
            <param name="sourceColumn"> The name of the source column within the data source.
            </param>
            
            <param name="destinationColumn"> The name of the destination column within the destination
            table.
            </param>
            
            <returns> A OracleBulkCopyColumnMapping object.
            </returns>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Clear">
            <summary> Clears the contents of the collection.
            </summary>
            
            <remarks> The Clear method is most commonly used when you use a single OracleBulkCopy 
            instance to process more than one bulk copy operation. If you create column mappings 
            for one bulk copy operation, you must clear the OracleBulkCopyColumnMappingCollection 
            after the WriteToServer method and before processing the next bulk copy.
            
            <para> Performing several bulk copies using the same OracleBulkCopy instance will usually
            be more efficient from a performance point of view than using a separate OracleBulkCopy
            for each operation.
            </para>
            </remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Contains(DDTek.Oracle.OracleBulkCopyColumnMapping)">
            <summary> Gets a value indicating whether a specified OracleBulkCopyColumnMapping
            object exists in the collection.
            </summary>
            
            <param name="value"> A valid OracleBulkCopyColumnMapping object.
            </param>
            
            <returns> true if the specified mapping exists in the collection; otherwise false.
            </returns>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.CopyTo(DDTek.Oracle.OracleBulkCopyColumnMapping[],System.Int32)">
            <summary> Copies the elements of the OracleBulkCopyColumnMappingCollection to an
            array of OracleBulkCopyColumnMapping items, starting at a particular index.
            </summary>
            
            <param name="array"> The one-dimensional OracleBulkCopyColumnMapping array that is
            the destination of the elements copied from OracleBulkCopyColumnMappingCollection.
            The array must have zero-based indexing. 
            </param>
            
            <param name="index"> The zero-based index in array at which copying begins.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.IndexOf(DDTek.Oracle.OracleBulkCopyColumnMapping)">
            <summary>Gets the index of the specified OracleBulkCopyColumnMapping object.
            </summary>
            
            <param name="value"> The OracleBulkCopyColumnMapping object for which to search.
            </param>
            
            <returns> The zero-based index of the column mapping, or -1 if the column mapping
            is not found in the collection.
            </returns>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Insert(System.Int32,DDTek.Oracle.OracleBulkCopyColumnMapping)">
            <summary> Insert a new OracleBulkCopyColumnMapping at the index specified.
            </summary>
            
            <param name="index"> Integer value of the location within the OracleBulkCopyColumnMappingCollection
            at which to insert the new OracleBulkCopyColumnMapping.
            </param>
            
            <param name="value"> OracleBulkCopyColumnMapping object to be inserted in the collection.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Remove(DDTek.Oracle.OracleBulkCopyColumnMapping)">
            <summary> Removes the specified OracleBulkCopyColumnMapping element from the
            OracleBulkCopyColumnMappingCollection.
            </summary>
            
            <param name="value"> OracleBulkCopyColumnMapping object to be removed from the
            collection.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
             <summary> Removes the mapping at the specified index from the collection.
             </summary>
             
             <remarks> The RemoveAt method is most commonly used when you use a single
             OracleBulkCopy instance to process more than one bulk copy operation. If you
             create column mappings for one bulk copy operation, you must remove mappings
             that no longer apply after the WriteToServer method is called and before 
             defining mapping for the next bulk copy. You can clear the entire collection 
             by using the Clear method, or remove mappings individually using the Remove 
             method or the RemoveAt method.
            
             <para> Performing several bulk copies using the same OracleBulkCopy instance
             will usually be more efficient from a performance point of view than using 
             a separate OracleBulkCopy for each operation.
             </para>
             </remarks>
             
             <param name="index"> The zero-based index of the OracleBulkCopyColumnMapping
             object to be removed from the collection.
             </param>
        </member>
        <member name="P:DDTek.Oracle.OracleBulkCopyColumnMappingCollection.Item(System.Int32)">
            <summary> Gets the OracleBulkCopyColumnMapping object at the specified index.
            </summary>
            
            <param name="index"> The zero-based index of the OracleBulkCopyColumnMapping
            to find.
            </param>
            
            <returns> A OracleBulkCopyColumnMapping object.
            </returns>
        </member>
        <member name="T:DDTek.Oracle.OracleColumn">
            <summary>
            Summary description for OracleColumn.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleColumn.GetDecimal">
            <summary>
            Returns the column value as a decimal.  Provider can override
            to allow returning columns other numeric columns as decimal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleColumn.GetDouble">
            <summary>
            Returns the column value as a double.  Provider can override
            to allow returning columns other numeric columns as double.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleColumn.GetFloat">
            <summary>
            Returns the column value as a float.  Provider can override
            to allow returning columns other numeric columns as float.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleColumn.GetInt64">
            <summary>
            Returns the column value as a long.  Provider can override
            to allow returning columns other numeric columns as long.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleColumn.GetInt32">
            <summary>
            Returns the column value as a int.  Provider can override
            to allow returning columns other numeric columns as int.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleColumn.GetInt16">
            <summary>
            Returns the column value as a short.  Provider can override
            to allow returning columns other numeric columns as short.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DDTek.Oracle.OracleColumnCollection">
            <summary>
            Summary description for OracleColumnCollection.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleColumnInfoCache">
            <summary>
            Summary description for OracleColumnInfoCache.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleStatementCacheBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleCommand">
            <summary>
            Initializes a new instance of the OracleCommand class.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.#ctor">
            <summary>
            Initializes a new instance of the OracleCommand class.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.#ctor(System.String)">
            <summary>
            Gets or sets the text command to run
            against the data source.
            </summary>
            <param name="commandText">The SQL statement or stored procedure to execute. 
            The default value is an empty string ("").</param>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.#ctor(System.String,DDTek.Oracle.OracleConnection)">
            <summary>
            Gets or sets the OracleConnection 
            used by this instance of the OracleCommand.
            </summary>
            <param name="commandText">The SQL statement or stored procedure to execute. 
            The default value is an empty string ("").</param>
            <param name="connection">The name of the current connection.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.#ctor(System.String,DDTek.Oracle.OracleConnection,DDTek.Oracle.OracleTransaction)">
            <summary>
            Gets or sets the OracleConnection used by this instance of the
            OracleCommand.
            </summary>
            <param name="commandText">The SQL statement or stored procedure to execute. 
            The default value is an empty string ("").</param>
            <param name="connection">The name of the current connection.</param>
            <param name="transaction">The OracleTransaction in which the OracleCommand executes.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.Cancel">
            <summary>
            Attempts to cancel the execution of an 
            IDbCommand.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.ExecuteNonQuery">
            <summary>
            Executes a SQL statement against 
            an OracleConnection object, and returns the number 
            of rows affected. This method is intended for commands that do not return 
            results.
            </summary>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.ExecuteScalar">
            <summary>
            Executes the query, and returns the 
            first row of the resultset that the query returns. Any additional rows 
            or columns are ignored.
            </summary>
            <returns>The first column of the first row in the resultset.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.Prepare">
            <summary>
            Creates a prepared or compiled version 
            of the command on the data source.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.CreateParameter">
            <summary>
            Creates a new instance of an OracleParameter object.
            </summary>
            <returns>An OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.ExecuteReader">
            <overloads>
            Sends the CommandText to the Connection, and builds an OracleDataReader 
            using one of the CommandBehavior values.
            </overloads>
            <returns>An OracleDataReader object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Sends the CommandText to the Connection, and builds an OracleDataReader 
            using one of the CommandBehavior values.
            </summary>
            <param name="behavior">One of the System.Data.CommandBehavior values.</param>
            <returns>An OracleDataReader object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommand.System#ICloneable#Clone">
            <summary>
            Creates a new instance of an OracleCommand class with the same value 
            as an existing instance.
            </summary>
            <returns>An OracleCommand object.</returns>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.UpdatedRowSource">
            <summary>
            Gets or sets how command results are applied 
            to the DataRow, when used by the Update method of 
            a DbDataAdapter.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.CommandText">
            <summary>
            Gets or sets the text command to run
            against the data source.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.AddRowid">
            <summary>Adds the ROWID as part of the select list.</summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.BindByName">
            <summary>
            Toggles binding behavior for stored procedures to be binding by name
            or the default behavior of binding by ordinal.  This property only influences
            commands of type stored procedure.   
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.ArrayBindCount">
            <summary>
            Specifies the number of rows of parameters 
            that will be used. The application must set this 
            property before executing a command that uses parameter 
            array binding. The count must equal the length of each 
            of the arrays that is set for each parameter value.
            <para>
            When set to 0 (the default), the application will 
            not use parameter array binding.
            </para>
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.ArrayBindStatus">
            <summary>
            Returns an array of row status values. This property can be
            used to check status after executing a command that used array
            binding. This property will return null when array binding is
            not used.  
            <para>
            Oracle's array binding is done as a single atomic 
            operation. Either all rows are successful or all rows will fail.
            When an array bind execution fails, the first row in the parameter
            array that caused the failure will be marked with the best appropriate
            status.  All other status will be marked as failed.
            </para>
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.CommandTimeout">
            <summary>
            Gets or sets the wait time before
            terminating the attempt to execute a command and 
            generating an error.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.CommandType">
            <summary>
            Indicates or specifies how the CommandText
            property is interpreted.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.Parameters">
            <summary>
            Gets the OracleParameterCollection.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.Connection">
            <summary>
            Gets or sets the OracleConnection 
            used by this instance of the OracleCommand.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.Transaction">
            <summary>
            Gets or sets the OracleTransaction 
            within which the OracleCommand executes.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.RowSetSize">
            <summary>
            Limits the number of rows returned by any query 
            on this Command object to the value specified at execute time. When set
            to 0 (the default), the data provider does not limit the number of rows returned.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommand.RowSetFetchSize">
            <summary>
            Specify the number of rows to retrieve in a single round trip to the server.  The default (0)
            indicates the number will be computed based on the Fetch Array Size connection option.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleRowStatus">
            <summary>
            Indicates the status of each row after an array bind operation. 
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleRowStatus.OK">
            <summary>
            The operation succeeded. All entries are marked as OK.</summary>
        </member>
        <member name="F:DDTek.Oracle.OracleRowStatus.Failed">
            <summary>
            The operation failed. The data provider assigns this value to all status
                entries except the row that caused the failure.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleRowStatus.SchemaViolation">
            <summary>
            When an operation fails, the data provider assigns this value to the row that
            caused the failure.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.#ctor">
            <summary>
            Initializes a new instance of the OracleCommandBuilder class.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.#ctor(DDTek.Oracle.OracleDataAdapter)">
            <summary>
            Initializes a new instance of the OracleCommandBuilder class.
            </summary>
            <param name="adapter">The OracleDataAdapter object 
            associated with this OracleCommandBuilder. </param>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.QuoteIdentifier(System.String)">
            <summary>
            Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.
            </summary>
            <param name="unquotedIdentifier">The original unquoted identifier.</param>
            <returns>The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.UnquoteIdentifier(System.String)">
            <summary>
            Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier. 
            </summary>
            <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
            <returns>The unquoted identifier, with embedded quotes properly un-escaped.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.GetDeleteCommand">
            <summary>
            Gets the automatically-generated 
            OracleCommand object required to perform Deletes on the Oracle database.
            </summary>
            <returns>The automatically-generated OracleCommand object required to 
            perform Deletes on the Oracle database.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
            <summary>
            Gets the automatically-generated OracleCommand object required to perform Deletes on the Oracle database.
            </summary>
            <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if possible. 
            If false, generate @p1, @p2, and so on.</param>
            <returns>The automatically generated OracleCommand object required to 
            perform Deletes on the Oracle database.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.GetInsertCommand">
            <summary>
            Gets the automatically-generated 
            OracleCommand object required to perform Inserts on the Oracle database
            </summary>
            <returns>The automatically-generated OracleCommand object required to 
            perform Inserts on the Oracle database.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
            <summary>
            Gets the automatically-generated OracleCommand object required to perform Inserts on the database.
            </summary>
            <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if possible. If false, generate @p1, @p2, and so on.</param>
            <returns>The automatically-generated OracleCommand object required to perform Inserts.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.GetUpdateCommand">
            <summary>
            Gets the automatically-generated 
            OracleCommand object required to perform Updates on the Oracle database
            </summary>
            <returns>The automatically-generated OracleCommand object required to 
            perform Updates on the Oracle database.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
            <summary>
            Gets the automatically-generated OracleCommand object required to perform updates on the database.
            </summary>
            <param name="useColumnsForParameterNames">If true, generate parameter names matching column names, if possible. If false, generate @p1, @p2, and so on.</param>
            <returns>The automatically-generated OracleCommand object required to perform updates.</returns>
            <remarks>The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. </remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleCommandBuilder.DeriveParameters(DDTek.Oracle.OracleCommand)">
            <summary>
            Retrieves parameter information 
            from the stored procedure specified in the OracleCommand 
            and populates the OracleCommand object's OracleParameters collection. 
            </summary>
            <param name="command">The OracleCommand referencing the 
            stored procedure from which the parameter information is to be derived. 
            The derived parameters are added to the OracleCommand object's 
            OracleParameters collection. 
            </param>
        </member>
        <member name="P:DDTek.Oracle.OracleCommandBuilder.QuotePrefix">
            <summary>
            Prefix character for quoted identifiers.  This is limited to double quote.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommandBuilder.QuoteSuffix">
            <summary>
            Suffix character for quoted identifiers.  This is limited to double quote.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommandBuilder.CatalogLocation">
            <summary>
            Sets or gets the CatalogLocation for an instance of the DbCommandBuilder class. 
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommandBuilder.CatalogSeparator">
            <summary>
            Sets or gets a string used as the catalog separator for an instance of the DbCommandBuilder class.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommandBuilder.SchemaSeparator">
            <summary>
            Gets or sets the character to be used for the separator between the schema identifier and any other identifiers. 
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommandBuilder.DataAdapter">
            <summary>
            Gets or sets the OracleDataAdapter object for which 
            this OracleCommandBuilder object will generate SQL statements.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleCommandBuilder.AllowUpdateWithoutKey">
            <summary>
            Allows UPDATE or DELETE
            operations to continue for tables that have no key. Normally,
            these operations are not allowed for tables with no key.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleInfoMessageEventHandler">
            <summary>
            Passes as an input to the 
            OracleInfoMessageEventHandler and contains information relevant to a warning
            generated by the Oracle server.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleCloseBehavior">
            <summary>
            Controls the close behavior of an open connection. By default the connection is always
            returned to the pool. If set to DoNotPool, the connection is disqualified from the pool,
            disposed of and its resources are cleaned up. The connection pool replaces the disqualified
            connection to guarantee minimum pool size boundaries are enforced.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleConnection">
            <summary>
            Represents an open connection to an Oracle
            database.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.#ctor">
            <summary>
            Initializes a new instance of OracleConnection.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of OracleConnection.
            </summary>
            <param name="connectionString">The Oracle connection string that includes settings, such as the server name, needed to establish the initial connection. 
            The default value is an empty string ("").</param>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.BeginTransaction">
            <summary>
            Begins a transaction at the Oracle database.
            </summary>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a transaction at the Oracle database with the specified 
            IsolationLevel.
            </summary>
            <param name="level">The transaction isolation level for this connection.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.CreateCommand">
            <summary>
            Creates and returns an 
            OracleCommand object associated with 
            the OracleConnection.
            </summary>
            <returns>An OracleCommand object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.Open">
            <summary>
            Opens a database connection with the settings 
            specified by the ConnectionString property of the 
            OracleConnection object.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.OpenWithNewPassword(System.String)">
            <summary>
            Opens a connection to the database while changing the password.
            </summary>
            <param name="newPassword"></param>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.Close">
            <summary>
            Closes the connection to the database.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.Close(DDTek.Oracle.OracleCloseBehavior)">
            <summary>
            Close the connection, returning the connection to the pool if connection pooling is active.
            </summary>
            <param name="behavior">
            Default ensures the connection is returned to the pool. DoNotPool disqualifies the connection
            from the pool, ensuring a fresh connection is returned to the pool.
            </param>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.EnlistTransaction(System.Transactions.Transaction)">
            <summary>
            Enlists in the specified transaction as a distributed transaction. This method is supported on Progress DataDirect 
            Connect <em>for</em> ADO.NET data providers installed on a Server license.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.GetSchema">
            <summary>
            Returns schema information for the data source of this OracleConnection.
            </summary>
            <returns>A DataTable that contains schema information.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.GetSchema(System.String)">
            <summary>
            Returns schema information for the data source of this OracleConnection using the specified string for the schema name.
            </summary>
            <param name="collectionName">Specifies the name of the schema to return.</param>
            <returns>A DataTable that contains schema information.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.GetSchema(System.String,System.String[])">
            <summary>
            Returns schema information for the data source of this OracleConnection using 
            the specified string for the schema name and the specified string array for the restriction values.
            </summary>
            <param name="collectionName">Specifies the name of the schema to return.</param>
            <param name="restrictionValues">A set of restriction values for the requested schema.</param>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.System#ICloneable#Clone">
            <summary>
            Creates a new instance of a OracleConnection class with the same value 
            as an existing instance.
            </summary>
            <returns>An OracleConnection object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.SetOEMLicenseInfo(System.String,System.String)">
            <summary>
            The SetOEMLicenseInfo method is for OEM customers only.
            Refer to the <em>Progress DataDirect Connect for ADO.NET Distribution Guide</em>.
            </summary>
            <param name="licFileName">Refer to the <em>Progress DataDirect Connect for ADO.NET Distribution Guide</em>.</param>
            <param name="licFilePassword">Refer to the <em>Progress DataDirect Connect for ADO.NET Distribution Guide</em>.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.GetAvailableNetServiceNames(System.String)">
            <summary>
            Returns a list of all net service names in the specified
            tnsnames.ora file. If the tnsFileName is set to null, then
            the location of the tnsnames.ora file obtained using the 
            registry. The returned string collection is useful when
            initializing controls to build the connection string. 
            </summary>
            <param name="tnsFileName">A list of all net service names in the specified tnsnames.ora file.</param>
            <returns>A string collection that contains all net service names in the specified tnsnames.ora file.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.ClearAllPools">
            <summary>
            Empties the connection pool.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnection.ClearPool(DDTek.Oracle.OracleConnection)">
            <summary>
            Empties the connection pool associated with the specified connection.
            </summary>
            <param name="connection">The OracleConnection to be cleared from the pool.</param>
            <remarks>The ClearPool method clears the connection pool that is associated with connection. 
            If additional connections associated with the connection pool
            are in use at the time of the call, 
            they are discarded when Close is called on them.</remarks>
        </member>
        <member name="E:DDTek.Oracle.OracleConnection.InfoMessage">
            <summary>
            Provides data for the InfoMessage event.
            This event handler receives an argument of type OracleInfoMessageEventArgs
            containing data relevant to this event. Clients that want to process 
            warnings and informational messages sent by the database server should
            create an OracleInfoMessageEventHandler delegate to listen to this event.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.ConnectionString">
            <summary>
            Gets or sets the string used to open a database.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.ConnectionTimeout">
            <summary>
            Gets the time to wait while trying to establish a connection, before terminating the attempt and generating an error.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.Database">
            <summary>
            Gets the name of the current database or the database to be used after a connection is opened.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.ServerVersion">
            <summary>
            Returns a string containing the version of the 
            Oracle server to which the client is connected.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.State">
            <summary>
            Gets the current state of the connection.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.Port">
            <summary>
            Returns the value specified for the 
            Port connection string option. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.Host">
            <summary>
            Returns the value specified for the Host 
            connection string option, or the value specified 
            in the tnsnames.ora file, if it was used during connection. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.SID">
            <summary>
            Returns the value specified for the SID in the connection 
            string option, or the value specified 
            in the tnsnames.ora file, if it was used during connection. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.ServiceName">
            <summary>
            Returns the value specified for the Service Name connection string option. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.TNSNamesFile">
            <summary>
            Returns the location of the tnsnames.ora 
            file if the file was used to connect. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.ServerName">
            <summary>
            Returns the name of the entry in the
            tnsnames.ora file that was used to connect. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.DataSource">
            <summary>
            Gets the name of the Oracle server to which to connect.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.FetchArraySize">
            <summary>
            Returns the value specified for the Fetch
            Array Size connection string option. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.DatabaseCharacterSetName">
            <summary>
            Returns the IANA name for the
            database character set. This method returns the empty string if
            connection state is closed.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.NationalCharacterSetName">
            <summary>
            Returns the 
            national character set. This method returns the empty string if
            connection state is closed.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.CursorDescriptionCache">
            <summary>
            Reflects the value of the
            Cursor Description Cache connection string option. That connection option
            controls whether or not the cursor description cache is enabled. By
            default it is enabled. The cache is used to reduce the number of round
            trips made to the server when executing SELECT statements. Read only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.CurrentUser">
            <summary>
            Gets or Sets the current user.  Property is used to control impersonation of user
            specified in connection string.  Default value is empty string.  Property can only
            be set when the connection is not open.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.CurrentPassword">
            <summary>
            Gets or Sets the current password.  Property is used to control impersonation of user
            specified in connection string.  Default value is empty string.  Property can only
            be set when the connection is not open.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnection.CurrentUserAffinityTimeout">
            <summary>
            Gets or sets the affinity timeout associated with the CurrentUser property. The
            value is expressed in milliseconds. The property helps the connection pool avoid
            performing unneccessary reauthentication. If CurrentUser is specified, Open will
            occur more quickly if the connection pool contains a physical connection that
            matches the specified CurrentUser. Increasing the CurrentUserAffinityTimeout can
            increase the chances that the connection pool will contain a physical connection
            that matches the desired CurrentUser. However, when set too high, the connection
            pool might have to create new connections, which is more performance-expensive
            than reauthenticating an existing connection.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleConnectionStringBuilder">
            <summary>
            Provides a way to create and manage the contents of connection 
            strings used by the OracleConnection class.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the OracleConnectionStringBuilder class.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OracleConnectionStringBuilder class.
            The connection string provides the data for the instance's connection
            information.
            </summary>
            <param name="connectionString">The basis for the object's internal connection information. Parsed into name/value pairs. 
            Invalid key names raise a KeyNotFoundException.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleConnectionStringBuilder.Clear">
            <summary>
            Clears the contents of the OracleConnectionStringBuilder instance.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleConnectionStringBuilder.ContainsKey(System.String)">
            <summary>
            Determines whether an element in the OracleConnectionStringBuilder  
            contains a specific key.
            </summary>
            <param name="keyword">The key to locate in the ConnectionStringBuilder.</param>
            <returns>True if the OracleConnectionStringBuilder contains an element that has 
            the specified key; otherwise, False. </returns>
            <remarks>The OracleConnectionStringBuilder contains a fixed-size 
            collection of key/value pairs. This means that the ContainsKey method only determines 
            whether a particular key name is valid.</remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleConnectionStringBuilder.Remove(System.String)">
            <summary>
            Removes the entry with the specified key from the 
            OracleConnectionStringBuilder instance.
            </summary>
            <param name="keyword">The key of the key/value pair to be removed 
            from the connection string in this OracleConnectionStringBuilder instance.</param>
            <returns>True if the key existed within the connection string and was removed, False if the key did not exist</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleConnectionStringBuilder.ShouldSerialize(System.String)">
            <summary>
            Indicates whether the specified key exists in this 
            OracleConnectionStringBuilder instance.
            </summary>
            <param name="keyword">True if the OracleConnectionStringBuilder contains an element that has 
            the specified key; otherwise, False. </param>
            <returns>True if the OracleConnectionStringBuilder contains an element that has 
            the specified key; otherwise, False. </returns>
            <remarks>The OracleConnectionStringBuilder contains a fixed-size 
            collection of key/value pairs. This means that the ShouldSerialize method only determines 
            whether a particular key name is valid.</remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
            <summary>
            Retrieves a value corresponding 
            to the supplied key from this OracleConnectionStringBuilder.
            </summary>
            <param name="keyword">The key of the item to retrieve.</param>
            <param name="value">The value corresponding to keyword.</param>
            <returns>True if keyword was found within the connection string; otherwise, False.</returns>
            <remarks>Calling TryGetValue with a nonexistent key places the value null 
            (or, in Visual Basic, the value Nothing) in the value parameter. </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.Keys">
            <summary>
            Gets an ICollection that contains the keys in the DbConnectionStringBuilder.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.IsFixedSize">
            <summary>
            Overridden. Gets a value that indicates whether 
            the OracleConnectionStringBuilder has a fixed size.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.AccountingInfo">
            <summary>
            This option can be used to set the CLIENT_INFO column in the V$SESSION table.  
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.AlternateServers">
            <summary>
            Gets or sets a list of alternate database servers to which 
            the data provider will try to connect if the primary 
            database server is unavailable. Specifying a value for this 
            property enables connection failover for the data provider. 
            </summary>
            <remarks>
            <para>This property corresponds to the Alternate Servers connection string option.</para>
            <para>The value you specify must be in the form of a string 
            that defines connection information for each alternate server.
            For the Oracle data provider, you must specify the port number and the name or the IP address of each alternate server. </para>
            <para>The string has the format:</para> 
            <para><code>(Host=hostvalue;Port=portvalue[;...])</code></para>
            
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ApplicationName">
            <summary>
            This option can be used to set the PROGRAM column in the V$SESSION table.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ArraySendSize">
            <summary>
            Specifies the Array Send Size which controls the size of arrays used to when performancing 
            array binding, in particular during bulk load operations.  The value is specifed in kilobytes.
            The default is 4096 (4 MB).
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.AuthenticationMethod">
            <summary>
            Specifies the authentication method to use when logging in to the DBMS.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.BatchUpdateBehavior">
            <summary>
            Determines how the provider uses internal optimization during batch update operations.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.BulkLoadProtocol">
            <summary>
            Determines the protocol used during bulk load operations.  "Auto" implies the provider will use the
            bulk load protocol when possible, but will use array binding in scenarios where the bulk load  
            protocol is not possible.  "Bulk" implies the provider will use bulk load protocol or fail
            if it is not possible.  "Standard" implies the provider will use array binding for bulk loading.
            "Auto" is the default.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.CertificateStoreLocation">
            <summary>
            Specifies the location of the X.509 certificate store used for client authentication.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ClientHostName">
            <summary>
            This option can be used to set the MACHINE column in the V$SESSION table.  
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ClientUser">
            <summary>
            This option can be used to set the OSUSER column in the V$SESSION table.  
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.CodePageOverride">
            <summary>
            The code page to be used by the provider to convert character data. The specified code page overrides the default
            database code page or column collation. All character data that is returned from or written to the database is 
            converted using the specified code page. This option has no effect on how the provider converts character data to
            the national character set.
            By default, the provider automatically determines which code page to use to convert character data. Use this property
            only if you need to change the driver’s default behavior.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.CommitBehavior">
            <summary>
            Gets or sets the asynchronous commit behavior.  Valid values are: ServerDefault,
            WaitImmediate, WaitBatch, NoWaitImmediate and NoWaitBatch.  This option is operative
            on Oracle 10gR2 servers or later.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ConnectionPoolBehavior">
            <summary>
            Specifies the connection pool algorithm used by the pooling mechanism.
            When set to LeastRecentlyUsed (the default), the pooling mechanism organizes connections in the pool using a queue processing technique.
            When set to MostRecentlyUsed, pooling mechanism organizes connections in the pool using a stack technique.
            When set to MostFrequentlyUsed, the pooling mechanism keeps track of how many times a connection has been used from the pool and provides the connection with the highest count when a connection is requested.
            When set to LeastFrequentlyUsed, the pooling mechanism keeps track of how many times a connection has been used from the pool and provides the connection with the lowest count when a connection is requested.
            The value is ignored when Reauthentication Enabled=True.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ConnectionReset">
             <summary>
             Gets or sets a Boolean value that pecifies whether a connection that is removed from 
             the connection pool for reuse by an application will have its 
             state reset to the initial configuration settings of the connection. 
              
             </summary>
             <remarks><para>This property corresponds to the Connection Reset connection string option.</para>
             <para>When set to False (the initial default), the data provider does not 
            reset the state of the connection.</para>
             <para>
             Resetting the state impacts performance because the new connection must issue additional 
             commands to the server, for example, resetting the current database to the value 
             specified at connect time.</para></remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ConnectionRetryCount">
            <summary>
            Gets or sets the number of times the data provider tries to connect 
            to the primary server, and, if specified, the alternate servers after 
            the initial unsuccessful attempt. 
            
            </summary>
            <remarks><para>This property corresponds to the Connection Retry Count connection string option.</para>
            <para>The value can be any integer from 0 to 65535. </para>
            
            <para>When set to 0 (the initial default), the data provider does not 
            try to reconnect after the initial unsuccessful attempt. </para>
            <para>If a connection is not established during the retry attempts, the data provider returns an error that 
            is generated by the last server to which it attempted to connect.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ConnectionRetryDelay">
            <summary>
            Gets or sets the number of seconds the data provider waits after 
            the initial unsuccessful connection attempt before retrying 
            a connection to the primary server, and, if specified, 
            the alternate servers. 
            </summary>
            <remarks><para>This property corresponds to the Connection Retry Delay connection string option.</para> 
            <para>The value can be any integer from 0 to 65535. </para>
            <para>The initial default is 3 (seconds). When set to 0, 
            there is no delay between retrying the connection. </para>
            <para>NOTE: This property has no effect unless the ConnectionRetryCount property is set to an integer greater than 0. </para>
            <para>This property and the ConnectionRetryCount property, 
            which specifies the number of times the data provider attempts to connect 
            after the initial unsuccessful attempt, can be used in conjunction with 
            connection failover.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ConnectionTimeout">
            <summary>
            Gets or sets the number of seconds after which the attempted 
            connection to the Oracle server will fail if not yet connected. If connection failover is enabled, this option applies to each connection attempt. 
            </summary>
            <remarks>This property corresponds to the Connection Timeout connection string 
            option.
            <para>When set to 0, the data provider never times out on a connection attempt. 
            The initial default is 30 seconds. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.CredentialsCache">
            <summary>
            The location of the credentials cache used by the GSS Client.  It may be neccessary to specify the
            credentials cache manually if the caches is not in its default location.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.CursorDescriptionCache">
            <summary>
            Gets or sets a Boolean value that specifies whether to reuse cached result set description 
            information when the Oracle data provider is requested 
            to execute a Select statement that exactly matches a previously
            executed Select statement. 
            </summary>
            <remarks><para>This property corresponds to the Cursor Description Cache connection string property.</para>
            <para>When set to true (the initial default), the cached result set description information is reused. </para>
            <para>Caching the column descriptions allows the data provider to optimize 
            the execution of subsequent executions of the same statement, reducing the 
            number of network round trips required. In this case, the option should be set 
            to true. If the application does not execute the same Select statement repeatedly, this option should be set to false. 
            Otherwise, performance is degraded because memory is used unnecessarily.</para>
             <para>NOTES: </para>
            <ul>
            <li>If the application does not execute the same SQL statements
            repeatedly, set the value to False. In this case, setting 
            Cursor Description Cache to True uses memory unnecessarily.</li>
            <li>If the column definition of a table changes between two 
            executions of the same Select statement, the data provider may 
            behave unpredictably. We recommend that you set this option 
            to False if you expect your database table definitions 
            to change while your application is accessing them. 
            Alternatively, you can simply restart your application 
            if the table definitions change. </li>
            </ul>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.DataSource">
            <summary>
            Gets or sets a net service name in the tnsnames.ora file. 
            If the TNSNames File connection string option is not specified,
            the path is taken from the Oracle section of the Registry. 
            
            </summary>
            <remarks><para>This property corresponds to the Data Source connection string option.</para>
            <para>The initial default is an empty string. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.EnableXA">
            <summary>
            The option provides a workaround for tools such as LightSwitch that presume the underlying provider 
            is able to promote a local transaction to a fully distributed transaction on an as-needed basis, 
            something the provider cannot currently do. Use the value False to employ the workaround.
            </summary>
            <remarks><para>This property enables or disables the XA support on client side.</para>
            <para>The initial default is an true. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.EnableServerResultCache">
            <summary>
            Determines whether the provider will add a hint to the SQL statement to 
            enable a server side resultSet cache.  The default is false. 
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.EnableTrace">
             <summary>
             Gets or sets a Boolean value that specifies whether tracing is enabled. The initial default is False.
             </summary>
             <remarks>During debugging, sensitive data can be read, even if it is stored as a private or internal variable, and access is limited to the same assembly. To maintain security, trace logs 
             show passwords as five asterisks (*****).
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.EncryptionMethod">
            <summary>
            Defines the hows the provider encrypts data between the provider and the data source.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.Enlist">
            <summary>
            Gets or sets a Boolean value that specifies whether the data provider automatically attempts 
            to enlist the connection in creating the thread’s current 
            transaction context.
            </summary>
            <remarks>This property corresponds to the Enlist connection string option.
            <para>The initial default is False.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.FetchArraySize">
            <summary>
            Gets or sets the number of bytes of data the connection uses 
            to fetch multiple rows. 
            </summary>
            <remarks>This property corresponds to the Fetch Array Size connection string option.
            <para>The value can be any integer from 1 to 2147483648.
            The initial default is 64000.</para>
            <para>To improve performance with a large number of records, 
            increase the value of this property. Larger values increase 
            throughput by reducing the number 
            of times the connection fetches data across the network.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.FloatingPointParameterBehavior">
            <summary>
            This option determines what native data type the provider uses when
            sending floating point parameter values to the server. The option
            is ignored for pre-10g servers.
            This option determines what native data type the provider uses when
            sending floating point parameter values to the server. For pre-10g
            servers, floating point parameter values are always sent as NUMBER
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.GssClient">
            <summary>
            Gets or Sets the path to a GSS compliant DLL.  This option needs to be specified for 
            Kerberos authentication when using a third party KDC.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.Host">
            <summary>
            Gets or sets either the name or the IP address of the Oracle server 
            to which you want to connect. 
            </summary>
            <example>If your network supports
            named servers, you can specify a server name such as <code>OracleAppServer</code>. 
            Or, you can specify an IP address such as <code>122.23.15.12</code>. 
            </example>
            <remarks><para>This property corresponds to the Host connection string option.</para>
            <para>The initial default is <code>localhost</code>. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.HostNameInCertificate">
            <summary>
            Defines the host name in the certificate used as part of the SSL Server Certificate validation
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.InitialCommandTimeout">
            <summary>
            This option can be used to override the default command timeout of 30 seconds.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.InitializationString">
            <summary>
            Gets or sets one PL/SQL statement that will be issued immediately 
            after connecting to the database. 
            </summary>
            <example>To set the date format on every connection using an Alter Session statement:
            
            <para><code>Initialization String=ALTER SESSION SET DATEFORMAT xxx </code></para>
            </example>
            <remarks>This property corresponds to the Initialization String connection string option.
            <para>The initial default is an empty string.</para>
            <para>Special characters, such as the Equals (=) character, can be 
            used in the value of the Initialization String connection string option. To escape special characters, surround the value in parentheses. </para>
            <para>NOTE: If the statement fails to execute for any reason, the connection 
            to the Oracle server fails. The data provider throws an exception that contains the errors 
            returned from the Oracle server.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.Kerberos4b16">
            <summary>
            The value is used to specify the unknown Oracle protocol byte in the step #4 Kerberos authentication handshake (cf. Kerberos4b offset 16).
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.LicensePath">
            <summary>
            Gets or sets the fully qualified path to the DDTek.lic license file. 
            The license file is installed by default in the product installation 
            directory, for example, <code>C:\install_dir\DDTek.lic</code>.
            </summary>
            <remarks><para>This property corresponds to the License Path connection string option.</para>
            <para>When set to an empty string (the initial default), 
            the data provider looks for the license file in the 
            application’s current directory. If the license file is not 
            found, the data provider checks for keys placed in the registry 
            during the installation process; then, the data provider looks
            for the license key in the installation directory. 
            If the license key is still not found, the data provider 
            fails to connect.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.LoadBalanceTimeout">
            <summary>
            Gets or sets the number of seconds to keep connections in a 
            connection pool. The Min Pool Size property 
            can cause some connections to ignore this value.
            </summary>
            <remarks><para>This property corresponds to the Load Balance Timeout connection string option. </para>
            <para>The value can be any integer from 0 to 65535. 
            When set to 0 (the initial default), the connections have the maximum timeout.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.LoadBalancing">
            <summary>
            Gets or sets a Boolean value that determines whether the data provider uses client load balancing 
            in its attempts to connect to primary and alternate database servers. 
            The list of alternate servers is specified by the AlternateServers property. 
            <para>When set to True, the data provider attempts to connect to the 
            database servers in random order. </para> 
            <para>When set to False (the initial default), client load balancing 
            is not used and the data provider connects to each server based on its sequential order (primary server first, 
            then, alternate servers in the order they are specified). </para>
            </summary>
            <remarks><para>This property corresponds to the Load Balancing connection string option.</para>
            <para>NOTE: This property has no effect unless alternate servers are 
            defined for Alternate Servers. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.MaxLOBChunkSize">
            <summary>
            Gets or sets the size of LOB data the provider reads from or writes to the server at a time.
            </summary>
            <remarks><para>This property corresponds to the Max LOB Chunk Size connection string option. </para>
            <para>The value can be any integer greater than or equal to 32768 (32k).</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.MaxPoolSize">
             <summary>
             Gets or sets the maximum number of connections within a single pool. When the maximum number is reached, no additional connections can be added to the connection pool. 
             The value can be any integer from 1 to 65535. 
             </summary>
             <remarks><para>This property corresponds to the Max Pool Size connection string 
             option.</para>
             <para>The initial default is 100. </para>
             </remarks>
            
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.MaxPoolSizeBehavior">
            <summary>
            When set to HardCap (the default), the pooling mechanism will not allow more than MaxPoolSize
            connections to be created. When set to SoftCap, if MaxPoolSize connections are in use and another
            connection is requested, a new connection will be created. However, the pooling mechanism will
            not allow more than MaxPoolSize connections to be pooled.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.MaxStatementCacheSize">
             <summary>
             Gets or sets the maximum number of statements that can be held in the statement cache.
             Setting the cache size to 0 will disable statement caching.
             </summary>
             <remarks><para>This property corresponds to the Max Statement Cache Size connection string 
             option.</para>
             <para>The initial default is 10. </para>
             </remarks>
            
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.MinPoolSize">
            <summary>
            Gets or sets the minimum number of connections are opened and 
            placed in a connection pool when it is created. The connection 
            pool retains this number of connections, even when some 
            connections have exceeded their Connection Lifetime value.
            </summary>
            <remarks><para>This property corresponds to the Min Pool Size connection string 
            option.</para>
            <para>The value can be any integer from 0 to 65535. </para>
            
            <para>When set to 0 (the initial default), no additional connections are placed in the connection pool when it is created. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.NumberAsDouble">
            <summary>
            Gets or sets a Boolean value that determines whether the Oracle NUMBER 
            data type with no precision and no scale is mapped to DOUBLE. 
            </summary>
            <remarks><para>This property corresponds to the Number As Double connection 
            string option.</para>
            <para>When set to False (the initial default), the Oracle NUMBER 
            data type with no precision and no scale is not mapped to DOUBLE.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.PacketBufferSize">
            <summary>
            Gets or sets the number of bytes used for the buffer used to read 
            packets from the network socket that is communicating with the 
            Oracle database. 
            </summary>
            <remarks><para>This property corresponds to the Packet Buffer Size connection string option.</para>
            <para>The value can be any integer from 1 to 2147483648. 
            The initial default is 16000.</para>
            <para>Increasing the buffer size often improves 
            performance for applications that have large result sets. 
            The packet buffer size should be the same as or smaller 
            than the size set for Fetch Array Size. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ParameterMode">
            <summary>
            Gets or sets the parameter mode,  The parameter mode controls the parameter marker format
            and the whether parameters are bound ordinally or by name.
            </summary>
            <remarks>This property corresponds to the Parameter Mode connection string option.</remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.Password">
            <summary>
            Gets or sets a case-insensitive password used to connect to your 
            Oracle database.
            </summary>
            <remarks>This property corresponds to the Password connection string option.</remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.PersistSecurityInfo">
            <summary>
            Gets or sets a Boolean value that specifies whether to display secure information in clear text 
            in the ConnectionString property of the Connection object. 
            
            </summary>
            <remarks>This property corresponds to the Persist Security Info 
            connection string option.
            <para>When set to true, the value of the Password connection string 
            option is displayed in clear text. </para>
            <para>When set to false (the initial default), the data provider 
            does not display secure information in clear text.</para></remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.Pooling">
            <summary>
            Gets or sets a Boolean value that specifies whether connections are pooled. 
            </summary>
            <remarks><para>This property corresponds to the Pooling connection string option.</para>
            <para>When set to true (the initial default), 
            connection pooling is enabled. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.Port">
            <summary>
            Gets or sets the TCP port of the Oracle listener running on 
            the Oracle database. 
            </summary>
            <remarks><para>This property corresponds to the Port connection string option.</para>
            <para>The initial default is 1521.</para> 
            <para>Do not combine Data Source with Host, Port, Server Type, 
            Service Name, Alternate Servers, or SID in a connection string. 
            Supplying multiple terms for the Oracle server causes 
            the data provider to throw an exception.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ProcedureDescriptionCache">
            <summary>
            Gets or sets a Boolean value that determines whether the stored procedure information is cached. 
            </summary>
            <remarks><para>This property corresponds to the Procedure Description Cache connection string option.</para>
            <para>When set to False, the stored procedure information is not cached. 
            Applications that change stored procedure definitions during 
            runtime should use this setting to disable this cache. </para>
            <para>When set to True (the initial default), the Oracle data provider 
            caches stored procedure information it obtains from the server 
            to efficiently support REF CURSOR parameter.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ProgramID">
            <summary>
            This option can be used to set the PROCESS column in the V$SESSION table.  
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ReauthenticationEnabled">
            <summary>
            Gets or sets a Boolean value that specifies whether reauthentication is enabled.  Reauthentication is
            controlled through the CurrentUser property on the connection class.
            <para>When set to true, reauthentication is enabled. </para>
            <para>When set to false (the initial default), reauthentication is disabled.</para>
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.RefCursorMode">
            <summary>
            The ref cursor mode indicates whether the user must explicity indicate ref cursor parameters.
            </summary>
            <remarks>This property corresponds to the Ref Cursor Mode connection string option.</remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SchemaCollectionTimeout">
            <summary>
            Gets or sets the number of seconds after which the attempted 
            schema collection operation to the Oracle server will fail if not yet completed. 
            </summary>
            <remarks>This property corresponds to the Schema Collection Timeout connection string 
            option.
            <para>When set to 0, the data provider never times out on a schema collection operation attempt. 
            The initial default is 120 seconds. </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SchemaOptions">
            <summary>
            Bit flags that can be used control the amount of schema information returned by the GetSchema method.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ServerType">
             <summary>
             Gets or sets a value that specifies whether the connection is established using a 
             shared or dedicated server process. 
             </summary>
            <remarks><para>This property corresponds to the Server Type connection string option.</para>
             <para>When set to Shared, the server process to be used is retrieved 
             from a pool. </para>
              
             <para>When set to Dedicated, a server process is created to service 
             only that connection. </para> 
            
             <para>When set to an empty string (the initial default), the data provider does not specify an option. The server uses its default 
             for Shared or Dedicated processes.</para>
             <para>Use the Shared value when a server must 
             handle a large number of clients. In this case, the socket connection between the client and 
             server is made to a dispatcher process on the server. This 
             setting allows there to be fewer processes than the number of 
             connections, reducing the need for server resources; however, 
             communication is slower. </para>
             
             <para>When set to Dedicated and the connection ends, so does the 
             process. The socket connection is made directly between the 
             application and the dedicated server process.  
             This value can provide significant performance improvement, 
             but the server resource penalty is significant. Use this value:</para>
             <ul>
             <li>In a batch environment with low numbers of clients.</li>
             <li>If your Oracle DBMS is running on a Windows server.</li>
             <li>If your Oracle server has excess CPU and memory available 
             when operating at maximum load.</li>
             <li>If your application requires maximum performance at the 
             expense of using more Oracle server resources.</li>
             </ul>
             <para>Do not combine Data Source with Host, Port, Server Type, 
             Service Name, Alternate Servers, or SID in a connection string. 
             Supplying multiple terms for the Oracle server causes 
             the data provider to throw an exception.
             </para>
             </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ServiceName">
             <summary>
             Gets or sets the database service name that specifies the database 
             used for the connection. 
             The service name is a string that is 
             the global database name—a name that comprises the database 
             name and domain name. For example: 
             
             <para><code>sales.us.acme.com </code></para>
             </summary>
             <remarks><para>This property corresponds to the Service Name connection string option.</para>
             <para>The Service Name property is useful to specify connections to 
             an Oracle Real Application Clusters (RAC) system rather than 
             a specific Oracle instance, because the nodes in a RAC system 
             share a common service name. </para>
             <para> Do not combine Data Source with Host, Port, Server Type, 
             Service Name, Alternate Servers, or SID in a connection string. 
             Supplying multiple terms for the Oracle server causes 
             the data provider to throw an exception.
             </para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SessionDataUnit">
            <summary>
            The session data unit (SDU) that will be requested when connecting to the
            server.  The SDU is essentially equivalent to the maximum packet size.  The actual SDU
            that will get used is negotiated with the server.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SID">
            <summary>
            Gets or sets the Oracle System Identifier that refers to the 
            instance of the Oracle database software running on the server. 
            </summary>
            <remarks><para>This property corresponds to the SID connection string option.</para>
            <para>The initial default is ORCL, which is the Oracle default SID 
            when installing the Oracle database software. </para>
            <para>Do not combine Data Source with Host, Port, Server Type, 
            Service Name, Alternate Servers, or SID in a connection string. 
            Supplying multiple terms for the Oracle server causes 
            the data provider to throw an exception.</para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ShowVSCollections">
            <summary>
            By default the provider does not expose the collections specific for Visual Studio integration.
            Turning on this option will cause the provider to return the VS collections in the list of collections.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SocketReceiveBufferSize">
            <summary>
            Sets the socket receive buffer size.  The default (0) implies the provider should use
            pre-set optimal value.  -1 implies the provider should use the OS default.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SocketSendBufferSize">
            <summary>
            Sets the socket send buffer size.  The default (0) implies the provider should use the
            pre-set optimal value.  -1 implies the provider should use the OS default.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.StatementCacheMode">
            <summary>
            Gets or sets the statement cache mode,  The statement cache mode controls the behavior of the statement
            cache.  Statements can be cached automatically or only cached when a command is explicitly marked.
            </summary>
            <remarks>This property corresponds to the Statement Cache Mode connection string option.</remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SupportLinks">
            <summary>
            Determines whether the driver supports Oracle linked servers, which means a mapping has 
            been defined in one Oracle server to another Oracle server. If set to true, the driver 
            supports Oracle linked servers. When Oracle linked servers are supported, the driver 
            does not support distributed transactions. If set to false (the default), the driver 
            does not support Oracle linked servers. In addition, the driver supports distributed 
            transactions. In most cases, using the default (false) provides the best performance.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.SynchronizeConnection">
            <summary>
            Specifies whether synchronization on the connection is required.  Typically, this is not required.  This is normally
            only needed if a connection is being shared across multiple threads.  The default is false. 
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.TCPNoDelay">
            <summary>
            Specifies the TCP_NO_DELAY Socket property which reduces network traffic by causing the socket to
            buffer packets
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ThrottleCollectionsData">
            <summary>
            Gets or sets a Boolean value that specifies whether a provider returns very large
            collection meta data.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.TNSNamesFile">
            <summary>
            <para>Gets or sets the entire path, including the file name, to the 
            tnsnames.ora file, for example: </para>
            <para><code>"Server Name=Accounting;Password=Tiger;TNSNames File=path/TNSNames.Ora;User ID=scott" </code></para>
            </summary>
            <remarks><para>This property corresponds to the TNSNames File connection string option.</para>
            <para>If set to an empty string (the initial default), the path to the 
            tnsnames.ora file is not specified.</para>
            <para>In a tnsnames.ora file, connection information for Oracle services is associated with 
            an alias or Oracle net service name. Using the TNSNamesFile 
            property lets you construct a shorter connection string 
            because the connection information is in the tnsnames.ora file. 
            To specify multiple tnsnames.ora file locations, separate the 
            names with a comma and enclose the locations in quotes, for example:</para>
            <para><code>TNSNames File="F:\server2\oracle\tnsnames.ora, C:\oracle\product\10.1.0\db_1\network\admin\tnsnames.ora"</code></para>
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.TraceFile">
            <summary>
            <para>Gets or sets the path and name of the trace file.</para>
            <para>The initial default is \OracleTrace.txt. 
            If the trace file does not exist, the data provider creates it.</para>
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.TransactionTimeout">
            <summary>
            Controls the length of time the provider will wait when committing or rolling back a transaction.  
            0 implies the provider should not timeout.  Any positive integer represents the number of seconds
            the provider should wait before timing out.  -1, the default, implies the the provider will use
            the connection timeout setting.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.UseCurrentSchema">
            <summary>
            Indicates whether the schema collections should automatically restrict using the current schema when 
            the schema restriction is omitted.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.UserID">
            <summary>
            Gets or sets the default user name used to connect to your Oracle 
            database.
            </summary>
            <remarks>This property corresponds to the User ID connection string option.</remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.UserIDPrivilege">
            <summary>
            Specifies the role to use when logging in with administrative privileges
            </summary>
            <remarks>This property corresponds to the User ID Privilege connection string option.</remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.ValidateServerCertificate">
            <summary>
            Specifies whether the server certificate is verified as valid according to a Certificate Authority.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleConnectionStringBuilder.WorkArounds">
            <summary>
            This property is reserved. Enter values only when directed by Progress DataDirect technical support.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:DDTek.Oracle.OracleConnectionStringBuilder.WireProtocolMode" -->
        <!-- Badly formed XML comment ignored for member "P:DDTek.Oracle.OracleConnectionStringBuilder.WireProtocolVersion" -->
        <member name="T:DDTek.Oracle.OracleDataSourceEnumerator">
            <summary>
            This class lists the net service names in the tnsnames.ora file.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleDataSourceEnumerator.GetDataSources">
            <summary>
            Retrieves a DataTable containing information about all visible Oracle instances.
            </summary>
            <returns>Returns a DataTable containing information about the visible Oracle instances. </returns>
        </member>
        <member name="P:DDTek.Oracle.OracleDataSourceEnumerator.Instance">
            <summary>
            Gets an instance of the OracleDataSourceEnumerator, which can be 
            used to retrieve information about available Oracle instances.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleMetaDataCollectionNames">
            <summary>
            Provides a list of constants for the well-known MetaDataCollections: DataSourceInformation, DataTypes, MetaDataCollections, ReservedWords, and Restrictions.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.Columns">
            <summary>
            A constant for use with the GetSchema method that represents the Columns collection.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.ForeignKeys">
            <summary>
            A constant for use with the GetSchema method that represents the ForeignKeys collection.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.Indexes">
            <summary>
            A constant for use with the GetSchema method that represents the Indexes collection.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.PrimaryKeys">
            <summary>
            A constant for use with the GetSchema method that represents the PrimaryKeys collection.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.ProcedureParameters">
            <summary>
            Returns information about the parameters and return codes of procedures.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.Procedures">
            <summary>
            A constant for use with the GetSchema method that represents the Procedures collection.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.Schemata">
            <summary>
            Returns the schema objects that are owned by a given user.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.TablePrivileges">
            <summary>
            Identifies the privileges on tables defined in the catalog that are available to or granted by a given user.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.Tables">
            <summary>
            A constant for use with the GetSchema method that represents the Tables collection.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleMetaDataCollectionNames.Views">
            <summary>
            A constant for use with the GetSchema method that represents the Views collection.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleConnectionOptions">
            <summary>
            Summary description for OracleConnectionOptions.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleCounters">
            <summary>
            Summary description for OracleCounters.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleDataAdapter">
            <summary>
            The OracleDataAdapter object represents a set of data commands 
            and a connection to an Oracle database that are used to fill the 
            DataSet and update the Oracle database.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.#ctor">
            <summary>
            Initializes a new instance of the OracleDataAdapter class. 
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.#ctor(DDTek.Oracle.OracleCommand)">
            <summary>
            Initializes a new instance of the OracleDataAdapter class. 
            </summary>
            <param name="selectCommand">Gets or sets a SQL statement used to select
            records in the Oracle database.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the OracleDataAdapter class. 
            </summary>
            <param name="selectCommandText">A SQL 
            statement used to select records in the Oracle database.</param>
            <param name="selectConnectionString">The connection string.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.#ctor(System.String,DDTek.Oracle.OracleConnection)">
            <summary>
            Initializes a new instance of the OracleDataAdapter class. 
            </summary>
            <param name="selectCommandText">A SQL 
            statement used to select records in the Oracle database.</param>
            <param name="selectConnection">The open connection to the Oracle database.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Represents the method that will handle the RowUpdated event of an OracleDataAdapter.
            </summary>
            <param name="dataRow">The DataRow to send through an Update.</param>
            <param name="command">The OracleCommand to execute when performing the Update.</param>
            <param name="statementType">The data type of the SQL statement to execute.</param>
            <param name="tableMapping">The DataTableMapping sent through the Update.</param>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Occurs during an Update before a command is executed against the Oracle database.
            </summary>
            <param name="dataRow">The DataRow to send through an Update.</param>
            <param name="command">The OracleCommand to execute when performing the Update.</param>
            <param name="statementType">The data type of the SQL statement to execute.</param>
            <param name="tableMapping">The DataTableMapping sent through the Update.</param>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
            <summary>
            Occurs during an Update before a command is executed against the Oracle database.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:DDTek.Oracle.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
            <summary>
            Represents the method that will handle the RowUpdated event of an OracleDataAdapter.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:DDTek.Oracle.OracleDataAdapter.SelectCommand">
            <summary>
            Gets or sets a SQL statement used to select
            records in the Oracle database.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataAdapter.InsertCommand">
            <summary>
            Gets or sets a SQL statement that is used 
            to insert new records into the Oracle database.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataAdapter.UpdateCommand">
            <summary>
            Gets or sets a SQL statement that is used to
            update records in the Oracle database.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataAdapter.DeleteCommand">
            <summary>
            Gets or sets a SQL statement that is used for
            deleting records from the Oracle datasource.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataAdapter.UpdateBatchSize">
            <summary>
            Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.
            </summary>
        </member>
        <member name="E:DDTek.Oracle.OracleDataAdapter.RowUpdating">
            <summary>
            Occurs during an Update before a command
            is executed against the Oracle database.
            </summary>
        </member>
        <member name="E:DDTek.Oracle.OracleDataAdapter.RowUpdated">
            <summary>
            Represents the method that 
            will handle the RowUpdated event of an OracleDataAdapter.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleRowUpdatingEventHandler">
            <summary>
            Represents the method that 
            will handle the RowUpdated event of an OracleDataAdapter.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleRowUpdatedEventHandler">
            <summary>
            Represents the method that 
            will handle the RowUpdated event of an OracleDataAdapter.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleRowUpdatingEventArgs">
            <summary>
            Provides data for the RowUpdating 
            event of the Oracle data provider.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDTek.Oracle.OracleRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" -->
        <member name="P:DDTek.Oracle.OracleRowUpdatingEventArgs.Command">
            <summary>
            Represents an SQL statement or stored procedure to execute against an Oracle database.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleRowUpdatedEventArgs">
            <summary>
            Provides data for the RowUpdated 
            event of the Oracle data provider.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Provides data for the RowUpdated 
            event of the Oracle data provider.
            </summary>
            <param name="row">The DataRow to send through an Update.</param>
            <param name="command">The OracleCommand to execute when performing the Update.</param>
            <param name="statementType">The data type of the SQL statement to execute.</param>
            <param name="tableMapping">The DataTableMapping sent through the Update.</param>
        </member>
        <member name="P:DDTek.Oracle.OracleRowUpdatedEventArgs.Command">
            <summary>
            Gets or sets the OracleCommand executed when an UPDATE is called.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleDataReader">
            <summary>
            Allows you to retrieve a read-only stream of rows
            from a database. The OracleDataReader does not cache data in memory, which 
            makes it a good choice when you must retrieve large amounts of data. Because  
            only one row is in memory at any given time, system overhead is reduced.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.Close">
            <summary>
            Closes the DataReader. 
            Always call the Close method when you finish using the OracleDataReader.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.Read">
            <summary>
            Advances the OracleDataReader to the 
            next result.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.NextResult">
            <summary>
            Advances the OracleDataReader object 
            to the next result.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetSchemaTable">
            <summary>
            The GetSchemaTable() method returns a DataTable that describes the 
            column metadata of the provider's DataReader.
            </summary>
            <returns>A DataTable that describes the column metadata.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetName(System.Int32)">
            <summary>
            Gets the column name of the specified
            column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the column.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the name of the source
            data type.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the source data type.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the Type that is the data type 
            of the object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The Type that is the data type of the object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetEnumerator">
            <summary>
            Returns an IEnumerator that can be used 
            to iterate through the rows in the data reader.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the rows in the data reader.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetOrdinal(System.String)">
            <summary>
            Gets the column ordinal, given the name of the column.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetValue(System.Int32)">
            <summary>
            Gets value of a column at a specified 
            ordinal, returning the value in the column's native format.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value to return.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetValues(System.Object[])">
            <summary>
            Gets all of the attribute columns in the 
            current row.
            </summary>
            <param name="values">An array of type Object into which to copy the 
            attribute columns.</param>
            <returns>The number of instances of Object in the array.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column
            as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Boolean that is the value of the column.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a
            byte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a byte.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified
            column offset into the buffer as an array. It starts at the given buffer
            offset.
            </summary>
            <returns>The actual number of bytes read.</returns>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index 
            within the field where the read operation is to begin.</param>
            <param name="buffer">The buffer into which to read the 
            stream of bytes.</param>
            <param name="bufferOffset">The index where buffer 
            is to begin the write operation.</param>
            <param name="length">The number of bytes to read.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetChar(System.Int32)">
            <summary>
            Gets the value of a specified column
            as a character.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a character.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters into
            the buffer as an array, starting from the specified buffer offset of the
            specified column offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the row 
            where the read operation is to begin.</param>
            <param name="buffer">The buffer into which to copy data.</param>
            <param name="bufferOffset">The index where buffer 
            is to begin the write operation.</param>
            <param name="length">The number of characters to read.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetGuid(System.Int32)">
            <summary>
            Gets the value of a specified column
            as a GUID (globally-unique identifier).
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a GUID.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetInt16(System.Int32)">
            <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
            <returns>The value of the specified column as a 16-bit signed integer</returns>
            <param name="i">The zero-based column ordinal.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the value of the specified column
            as a 32-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a 32-bit signed integer.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetInt64(System.Int32)">
            <summary>
            Gets the value of a specified column
            as a 64-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a 64-bit signed integer.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetFloat(System.Int32)">
            <summary>
            Gets the value of a specified 
            column as a single-precision, floating-point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a single-precision 
            floating-point number.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetDouble(System.Int32)">
            <summary>
            Gets the value of a specified column as a double-precision
            floating-point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a 
            double-precision floating-point number.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetString(System.Int32)">
            <summary>
            Gets the value of a specified 
            column as a string.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a string.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the value of a specified column as a Decimal object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a decimal object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the value of a specified 
            column as a DateTime object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a DateTime object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleDataReader.IsDBNull(System.Int32)">
            <summary>
            Gets a value that indicates whether 
            the column contains missing values.
            </summary>
            <param name="i">The zero-based cardinal ordinal.</param>
            <returns>true if the specified column value is equivalent to DBNull; 
            otherwise, false.</returns>
        </member>
        <member name="P:DDTek.Oracle.OracleDataReader.IsClosed">
            <summary>
            Indicates whether the OracleDataReader 
            is closed.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataReader.RecordsAffected">
            <summary>
            Gets the number of rows 
            changed, inserted, or deleted by executing a SQL statement.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataReader.HasRows">
            <summary>
            Gets a value indicating whether the OracleDataReader has one or
            more rows.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataReader.FieldCount">
            <summary>
            Gets the number of columns in the 
            current row.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleDataReader.Depth">
            <summary>
            Gets a value that shows how deeply 
            the current row is nested.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.Close">
            <summary>
            Closes the DataReader. 
            Always call the Close method when you finish using the OracleDataReader.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.Read">
            <summary>
            Advances the OracleDataReader to the 
            next result.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.NextResult">
            <summary>
            Advances the OracleDataReader object 
            to the next result.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetSchemaTable">
            <summary>
            The GetSchemaTable() method returns a DataTable that describes the 
            column metadata of the provider's DataReader.
            </summary>
            <returns>A DataTable that describes the column metadata.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetName(System.Int32)">
            <summary>
            Gets the column name of the specified
            column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the column.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Gets the name of the source
            data type.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the source data type.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the Type that is the data type 
            of the object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The Type that is the data type of the object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetOrdinal(System.String)">
            <summary>
            Gets the column ordinal, given the name of the column.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetValue(System.Int32)">
            <summary>
            Gets value of a column at a specified 
            ordinal, returning the value in the column's native format.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value to return.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetValues(System.Object[])">
            <summary>
            Gets all of the attribute columns in the 
            current row.
            </summary>
            <param name="values">An array of type Object into which to copy the 
            attribute columns.</param>
            <returns>The number of instances of Object in the array.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column
            as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>A Boolean that is the value of the column.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetByte(System.Int32)">
            <summary>
            Gets the value of the specified column as a
            byte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a byte.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified
            column offset into the buffer as an array. It starts at the given buffer
            offset.
            </summary>
            <returns>The actual number of bytes read.</returns>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index 
            within the field where the read operation is to begin.</param>
            <param name="buffer">The buffer into which to read the 
            stream of bytes.</param>
            <param name="bufferOffset">The index where buffer 
            is to begin the write operation.</param>
            <param name="length">The number of bytes to read.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetChar(System.Int32)">
            <summary>
            Gets the value of a specified column
            as a character.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a character.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters into
            the buffer as an array, starting from the specified buffer offset of the
            specified column offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the row 
            where the read operation is to begin.</param>
            <param name="buffer">The buffer into which to copy data.</param>
            <param name="bufferOffset">The index where buffer 
            is to begin the write operation.</param>
            <param name="length">The number of characters to read.</param>
            <returns>The actual number of characters read.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetGuid(System.Int32)">
            <summary>
            Gets the value of a specified column
            as a GUID (globally-unique identifier).
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a GUID.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetInt16(System.Int32)">
            <summary>Gets the value of the specified column as a 16-bit signed integer.</summary>
            <returns>The value of the specified column as a 16-bit signed integer</returns>
            <param name="i">The zero-based column ordinal.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the value of the specified column
            as a 32-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a 32-bit signed integer.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetInt64(System.Int32)">
            <summary>
            Gets the value of a specified column
            as a 64-bit signed integer.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a 64-bit signed integer.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetFloat(System.Int32)">
            <summary>
            Gets the value of a specified 
            column as a single-precision, floating-point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a single-precision 
            floating-point number.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetDouble(System.Int32)">
            <summary>
            Gets the value of a specified column as a double-precision
            floating-point number.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a 
            double-precision floating-point number.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetString(System.Int32)">
            <summary>
            Gets the value of a specified 
            column as a string.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a string.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the value of a specified column as a Decimal object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a decimal object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the value of a specified 
            column as a DateTime object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a DateTime object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleSynchronizedDataReader.IsDBNull(System.Int32)">
            <summary>
            Gets a value that indicates whether 
            the column contains missing values.
            </summary>
            <param name="i">The zero-based cardinal ordinal.</param>
            <returns>true if the specified column value is equivalent to DBNull; 
            otherwise, false.</returns>
        </member>
        <member name="P:DDTek.Oracle.OracleSynchronizedDataReader.IsClosed">
            <summary>
            Indicates whether the OracleDataReader 
            is closed.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleSynchronizedDataReader.RecordsAffected">
            <summary>
            Gets the number of rows 
            changed, inserted, or deleted by executing a SQL statement.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleSynchronizedDataReader.HasRows">
            <summary>
            Gets a value indicating whether the OracleDataReader has one or
            more rows.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleSynchronizedDataReader.FieldCount">
            <summary>
            Gets the number of columns in the 
            current row.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleSynchronizedDataReader.Depth">
            <summary>
            Gets a value that shows how deeply 
            the current row is nested.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleDbType">
            <summary>
            Gets or sets the System.Data.DbType of the parameter.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Bfile">
            <summary>
            The data type for an Oracle BFile type.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Blob">
            <summary>
            The data type for an Oracle BLOB data type.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Byte">
            <summary>
            An integral type representing unsigned 8-bit 
            integers with values between 0 and 255.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Char">
            <summary>
            An Oracle CHAR data type that contains a fixed-length character 
            string with a maximum size of 2,000 bytes. This maps to String.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Clob">
            <summary>
            The Oracle CLOB data type.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Date">
            <summary>
            An Oracle DATE data type that 
            contains a fixed-length representation of a date.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Double">
            <summary>
            The data type for a double-precision floating point number.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Float">
            <summary>
            A single-precision floating-point value.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Int16">
            <summary>
            Integer data type representing signed 16-bit integers.  
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Int32">
            <summary>
            Integer data type representing signed 32-bit integers.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Int64">
            <summary>
            Integer data type representing signed 64-bit integers.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Long">
            <summary>
            An Oracle LONG data type.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.LongRaw">
            <summary>
            An Oracle LONGRAW data type that contains variable-length binary data with a maximum 
            size of 2 gigabytes. This maps to an Array of type Byte.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.NChar">
            <summary>
            An Oracle NCHAR data type that contains fixed-length character string to be
            stored in the national character set of the database.  This maps to String.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.NClob">
            <summary>
            An Oracle NCLOB data type that contains character data to be stored in 
            the national character set of the database, with a maximum size of 4 GB 
            when stored in the database.
            NOTE: The national character set of the database determines the size 
            of the value.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Number">
            <summary>
            An Oracle NUMBER data type that contains variable-length numeric data 
            with a maximum precision and scale of 38.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.NVarChar">
            <summary>
            An Oracle NVARCHAR data type that contains a variable-length 
            character string stored in the national character set of the database, 
            with a maximum size of 4,000 bytes (not characters) when stored in the 
            database. 
            NOTE: The national character set of the database determines the size of the value.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.SByte">
            <summary>
            An Integer data type that represents signed 8-bit integers.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Raw">
            <summary>
            An Oracle RAW data type that contains variable-length binary data with a maximum size 
            of 2,000 bytes. This maps to an Array of type Byte.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.RowId">
            <summary>
            The base64 string representation of an Oracle ROWID data type.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.Timestamp">
            <summary>
            Supported when connected to an Oracle 9i or higher server. An Oracle TIMESTAMP that contains date and 
            time (including seconds), and ranges in size from 7 to 11 bytes.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.TimestampLocal">
            <summary>
            Supported when connected to an Oracle 9i or higher server. An Oracle TIMESTAMP WITH LOCAL TIMEZONE that contains date, time, and a reference 
            to the original time zone, and ranges in size from 7 to 11 bytes.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.TimestampWithTZ">
            <summary>
            Supported when connected to an Oracle 9i or higher server. An Oracle TIMESTAMP WITH TIMEZONE that contains date, time, and a 
            specified time zone, and has a fixed size of 13 bytes.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.UInt16">
            <summary>
            Integer data type representing unsigned 16-bit integers.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.UInt32">
            <summary>
            Integer data type representing unsigned 32-bit integers.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.UInt64">
            <summary>
            Integer data type representing unsigned 64-bit integers.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.VarChar">
            <summary>
            Data type used for a variable-length stream of characters.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.XmlType">
            <summary>
            XmlType
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleDbType.RefCursor">
            <summary>
            Ref Cursor
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleError">
            <summary>
            Collects information relevant to errors and warnings 
            generated by the Oracle database server.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleError.Message">
            <summary>
            Returns the error message text from the Oracle
            database server.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleError.Number">
            <summary>
            Returns the error number from the Oracle database server.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleError.ErrorPosition">
            <summary>
            Returns the offset in the SQL statement 
            for which the error applies. If the offset is not applicable to the
            error, 0 is returned. The initial default value is 0.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleError.SQLState">
            <summary>
            Gets the string representation of the SQL State when the Oracle data 
            provider throws an exception. This property is read-only.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleErrorCollection">
            <summary>
            Contains all of the errors generated by the Oracle server.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleErrorCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the OracleError objects 
            from the ErrorCollection to the specified array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination 
            of the elements copied from the ErrorCollection. 
            The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleErrorCollection.GetEnumerator">
            <summary>
            Returns the IEnumerator interface for a given array.
            </summary>
            <returns>The IEnumerator interface for an array.</returns>
        </member>
        <member name="P:DDTek.Oracle.OracleErrorCollection.Count">
            <summary>
            Gets the number of Error objects 
            in the collection.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleErrorCollection.IsSynchronized">
            <summary>
            Gets a value that indicates whether
            access to the ErrorCollection is thread-safe (synchronized).
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleErrorCollection.SyncRoot">
            <summary>
            Gets the object used to synchronize
            access to the data provider's ErrorCollection.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleErrorCollection.Item(System.Int32)">
            <summary>
            Collects information relevant to errors and warnings 
            generated by the database server.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleException">
            <summary>
            Returns the reason code when the 
            Oracle server returns an error.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor that is invoked when the exception is recreated
            using a serialization stream.
            </summary>
            <param name="serializationInfo">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="serializationInfo">Holds all the data needed to serialize or deserialize an object.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:DDTek.Oracle.OracleException.Errors">
            <summary>
            Returns an OracleErrorCollection of one or more
            OracleError objects
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleException.Message">
            <summary>
            Returns the error message for the exception.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleException.Number">
            <summary>
            Returns the numeric value associated with a specific error.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleException.ErrorPosition">
            <summary>
            Returns the offset in the SQL statement 
            for which the error applies. If the offset is not applicable to the
            error, 0 is returned.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleException.SQLState">
            <summary>
            Returns the SQL state associated with the
            current error condition.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleFactory">
            <summary>
            Represents a set of methods for creating instances of 
            the Oracle data provider's implementation of the data source classes.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleFactory.Instance">
            <summary>
            Gets an instance of the OracleFactory. This can be used 
            to retrieve strongly typed data objects.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreateCommand">
            <summary>
            Returns a strongly typed DBCommand instance.
            </summary>
            <returns>A new strongly typed instance of DbCommand.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreatePermission(System.Security.Permissions.PermissionState)">
            <summary>
            Returns a new CodeAccessPermission.
            </summary>
            <param name="state">A member of the PermissionState enumeration.</param>
            <returns>A strongly typed instance of CodeAccessPermission.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreateCommandBuilder">
            <summary>
            Returns a strongly typed DBCommandBuilder instance.
            </summary>
            <returns>A new strongly typed instance of DbCommandBuilder.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreateConnection">
            <summary>
            Returns a strongly typed instance of DbConnection.
            </summary>
            <returns>A new strongly typed instance of DbConnection.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreateDataAdapter">
            <summary>
            Returns a strongly typed DBDataAdapter instance.
            </summary>
            <returns>A new strongly typed instance of DbDataAdapter.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreateConnectionStringBuilder">
            <summary>
            Returns a strongly typed instance of DbConnectionStringBuilder.
            </summary>
            <returns>A new strongly typed instance of DbConnectionStringBuilder.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreateDataSourceEnumerator">
            <summary>
            Returns a new OracleDataSourceEnumerator.
            </summary>
            <returns>An OracleDataSourceEnumerator.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleFactory.CreateParameter">
            <summary>
            Returns a strongly typed DBParameter instance.
            </summary>
            <returns>A new strongly typed instance of DbParameter.</returns>
        </member>
        <member name="T:DDTek.Oracle.OracleInfoMessageEventArgs">
            <summary>
            Provides data for theInfoMessage event.
            The OracleInfoMessageEventArgs object is passed as input 
            to the OracleInfoMessageEventHandler. It contains information relevant to
            a warning generated by the Oracle server.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleInfoMessageEventArgs.Errors">
            <summary>
            Contains all of the errors generated by the Oracle database server.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleInfoMessageEventArgs.Message">
            <summary>
            Gets the full text of the message sent from the database.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleInfoMessageEventArgs.Source">
            <summary>
            Gets the name of the object that generated the error.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleIntArrayEncoding">
            <summary>
            The class is used to encode/decode the byte stream used by Oracle
            for CLOBs is some circumstances.  The encoding uses similar to UTF16,
            but each char is prefixed by a length.  If the most significant byte
            in the character is zero, then length is 1.  If both bytes are needed
            to represent the char, then length is 2.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleInternalParameter">
            <summary>
            Summary description for OracleInternalParameter.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleInternalParameterCollection.CopyBackOutputParams(DDTek.Oracle.OracleSession,DDTek.Oracle.OracleParameterCollection)">
            <summary>
            Copy the output parameter values from the internal parameter objects
            to the user parameter objects.
            </summary>
            <param name="userParams"></param>
        </member>
        <member name="M:DDTek.Oracle.OracleLOB.WriteBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Write out the contigous chunk of bytes.  The contigous chunk is broken
            into 32512 byte chunks as they are written.
            </summary>
            <param name="blobValue"></param>
        </member>
        <member name="T:DDTek.Oracle.OracleParameter">
            <summary>
            Represents a parameter to an OracleCommand.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.#ctor">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.#ctor(System.String,DDTek.Oracle.OracleDbType)">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
            <param name="parameterName">The name of the OracleParameter. 
            The default is an empty string ("").</param>
            <param name="type">Returns the type of the OracleDbType.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
            <param name="parameterName">The name of the OracleParameter. 
            The default is an empty string ("").</param>
            <param name="value">Returns the value of the OracleDbType.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.#ctor(System.String,DDTek.Oracle.OracleDbType,System.Int32)">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
            <param name="parameterName">The name of the OracleParameter. 
            The default is an empty string ("").</param>
            <param name="dbType">The type of the OracleDbType.</param>
            <param name="size">The maximum size, in bytes,
            of the data within the column.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.#ctor(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
            <param name="parameterName">The name of the OracleParameter. 
            The default is an empty string ("").</param>
            <param name="dbType">The type of the OracleDbType.</param>
            <param name="size">The maximum size, in bytes,
            of the data within the column.</param>
            <param name="sourceColumn">The name of the 
            source column that is mapped to the DataSet and used for loading or 
            returning the Value.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.#ctor(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
            <param name="parameterName">The name of the OracleParameter. 
            The default is an empty string ("").</param>
            <param name="dbType">The type of the OracleDbType.</param>
            <param name="size">The maximum size, in bytes,
            of the data within the column.</param>
            <param name="direction">A value that indicates whether the parameter 
            is input-only, output-only, bidirectional, or the return value parameter 
            of a stored procedure.</param>
            <param name="sourceColumn">The name of the 
            source column that is mapped to the DataSet and used for loading or 
            returning the Value.</param>
            <param name="sourceVersion">The DataRowVersion to use when loading Value.</param>
            <param name="sourceColumnNullMapping">The source column NULL mapping.</param>
            <param name="paramValue">The value of the OracleDbType.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.#ctor(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
            <param name="parameterName">The name of the OracleParameter. 
            The default is an empty string ("").</param>
            <param name="dbType">The type of the OracleDbType.</param>
            <param name="size">The maximum size, in bytes,
            of the data within the column.</param>
            <param name="direction">A value that indicates whether the parameter 
            is input-only, output-only, bidirectional, or the return value parameter 
            of a stored procedure.</param>
            <param name="isNullable">A value that indicates whether the parameter accepts null values.</param>
            <param name="precision">The maximum number of digits used to represent the Value property.</param>
            <param name="scale">The number of decimal places to which Value is resolved.</param>
            <param name="sourceColumn">The name of the 
            source column that is mapped to the DataSet and used for loading or 
            returning the Value.</param>
            <param name="sourceVersion">The DataRowVersion to use when loading Value.</param>
            <param name="paramValue">The value of the OracleDbType.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.System#ICloneable#Clone">
            <summary>
            Creates a copy of the instance of the Parameter class.
            </summary>
            <returns>An OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameter.ToString">
            <summary>
            Returns the parameter name as a string representation of the parameter.
            </summary>
            <returns>The parameter name as a string 
            representation of the ParameterName. </returns>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.SourceColumn">
            <summary>
            Gets or sets the name of the source column mapped to the 
            DataSet; also used for loading or returning the Value.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.SourceColumnNullMapping">
            <summary>
            Sets or gets a value which indicates 
            whether the source column is nullable. 
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.SourceVersion">
            <summary>
            Gets or sets the DataRowVersion to 
            use when loading Value.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.DbType">
            <summary>
            Gets or sets the DbType of the parameter.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.OracleDbType">
            <summary>
            Gets or sets the DbType of the parameter.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.Precision">
            <summary>
            Gets or sets the maximum number of 
            digits used to represent the Value property.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.Scale">
            <summary>
            Gets or sets the number of decimal places 
            to which Value is resolved.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.Size">
            <summary>
            Gets or sets the maximum size, in bytes, of the data within the column.
            When the CollectionType is set to PLSQLAssociativeArray, the Size
            property refers to the maximum number of anticipated elements.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.ArrayBindStatus">
            <summary>
            Determines whether any values in the array of OracleParameterStatus entries should be bound as NULL. 
            The OracleParameterStatus enumeration contains the entry 
            NullValue. When this property is not set, then no values are 
            NULL. The length of the array should match the amount 
            specified by the OracleCommand object's ArrayBindCount 
            property. The initial default value is null.
            </summary>
            <remarks>
            To support arguments of type PL/SQL Table, the Oracle data provider 
            populates the array when the parameter is being used to 
            retrieve an array of output values.
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.MaxOutputArrayCount">
            <summary>
            This property will be deprecated in future versions of the provider.
            To specify a parameter of type PL/SQL Associative Array, set the Size
            property to the maximum number of anticipated elements and set the
            CollectionType property to PLSQLAssociativeArray.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameter.CollectionType">
            <summary>
            Specifies the collection type of the parameter. The default is None.
            Specify PLSQLAssociativeArray when parameter is of type PL/SQL
            Associative Array. Setting this property to PLSQLAssociativeArray
            implies the Value of the parameter is an array of values. For output or 
            input/output parameters, the Size property must be set to a maximum
            anticipated number of elements to be returned.
            Specify ReturingIntoArray when using the RETURNING INTO clause with the
            anticipation that multiple rows will be affected.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleParameterStatus">
            <summary>
            Indicates parameter value status when using array binding. 
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleParameterStatus.OK">
            <summary>
            The operation succeeded. All entries are marked as OK.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleParameterStatus.Null">
            <summary>
            The operation failed. The data provider assigns this value to all entries except for the row that caused the failure. The exception thrown for 
            the failed operation reflects the error for the first row to fail.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleCollectionType">
            <summary>
            Type of OracleParameter CollectionType property.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleCollectionType.None">
            <summary>
            No collection is being used with parameter.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleCollectionType.PLSQLAssociativeArray">
            <summary>
            Parameter is of the type PL/SQL Associative Array.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.OracleCollectionType.ReturningIntoArray">
            <summary>
            Parameter is for a RETURNING INTO clause of a INSERT or UPDATE command.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleParameterCollection">
            <summary>
            Collects the parameters that are relevant to an OracleCommand. The class also represents the mapping of the 
            parameters to the columns in a DataSet.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Add(DDTek.Oracle.OracleParameter)">
            <summary>
            Adds the specified OracleParameter to the 
            OracleParameterCollection.
            </summary>
            <param name="parameter">The OracleParameter to add to the collection.</param>
            <returns>The new OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Add(System.String,DDTek.Oracle.OracleDbType)">
            <summary>
            Adds the specified OracleParameter to the 
            OracleParameterCollection.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="type">The Oracle data type of the parameter.</param>
            <returns>The new OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified OracleParameter to the 
            OracleParameterCollection.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The OracleParameter to add to the collection.</param>
            <returns>The new OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Add(System.String,DDTek.Oracle.OracleDbType,System.Int32)">
            <summary>
            Adds the specified OracleParameter to the 
            OracleParameterCollection.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the OracleType values.</param>
            <param name="size">The width of the column.</param>
            <returns>The new OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Add(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.String)">
            <summary>
            Adds the specified OracleParameter to the 
            OracleParameterCollection.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the OracleType values.</param>
            <param name="size">The width of the column.</param>
            <param name="sourceColumn">SourceColumn is a public property that gets or sets the name of the 
            source column that is mapped to the DataSet and used for loading or 
            returning the Value.</param>
            <returns>The new OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Add(System.String,DDTek.Oracle.OracleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Adds the specified OracleParameter to the 
            OracleParameterCollection.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="dbType">One of the OracleType values.</param>
            <param name="size">The width of the column.</param>
            <param name="direction">A value that indicates 
            whether the parameter is input-only, output-only, bidirectional, or 
            the return value parameter of a stored procedure.</param>
            <param name="isNullable">A value that indicates 
            whether the parameter accepts null values.</param>
            <param name="precision">The maximum number of 
            digits used to represent the Value property.</param>
            <param name="scale">The number of decimal places 
            to which Value is resolved.</param>
            <param name="sourceColumn">The name of the 
            source column that is mapped to the DataSet and used for loading or 
            returning the Value.</param>
            <param name="sourceVersion">The DataRowVersion to 
            use when loading Value.</param>
            <param name="paramValue">The value of the OracleDbType.</param>
            <returns>The new OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.AddRange(System.Array)">
            <summary>
            Adds an array of values to the end of the OracleParameterCollection.
            </summary>
            <param name="values">The Array values to add.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.AddRange(DDTek.Oracle.OracleParameter[])">
            <summary>
            Adds elements to the end of the OracleParameterCollection.
            </summary>
            <param name="values">The OracleParameter values to be added.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.AddWithValue(System.String,System.Object)">
            <summary>
            Adds a value to the end of the OracleParameterCollection.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The value to be added.</param>
            <returns>An OracleParameter object.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Contains(DDTek.Oracle.OracleParameter)">
            <summary>
            Gets a value that indicates whether an 
            OracleParameter object exists in the collection.
            </summary>
            <param name="param">The name of the OracleParameter 
            object to find.</param>
            <returns>true if the collection contains the OracleParameter; 
            otherwise, false.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Contains(System.String)">
            <summary>
            Gets a value that indicates whether a 
            OracleParameter object exists in the collection.
            </summary>
            <param name="parameterName">The name of the OracleParameter 
            object to find.</param>
            <returns>true if the collection contains the OracleParameter; 
            otherwise, false.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies OracleParameter objects from 
            the OracleParameterCollection to a specified array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination 
            of the elements copied from the current Array.</param>
            <param name="index">The index in array at which copying begins.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.CopyTo(DDTek.Oracle.OracleParameter[],System.Int32)">
            <summary>
            Copies OracleParameter objects from the OracleParameterCollection to a specified array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from the current Array. </param>
            <param name="index">The index in array at which copying begins.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.GetEnumerator">
            <summary>
            Returns the IEnumerator interface for a given array.
            </summary>
            <returns>The IEnumerator interface for an array.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.IndexOf(System.Object)">
            <summary>
            Gets the location of the OracleParameter object within the collection.
            </summary>
            <param name="value">The name of the OracleParameter object to find.</param>
            <returns>The zero-based location of the OracleParameter in the collection.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.IndexOf(DDTek.Oracle.OracleParameter)">
            <summary>
            Gets the location of the OracleParameter 
            object within the collection.
            </summary>
            <param name="param">The name of the OracleParameter 
            object to find.</param>
            <returns>The zero-based location of the OracleParameter in the collection.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.IndexOf(System.String)">
            <summary>
            Gets the location of the OracleParameter 
            object within the collection.
            </summary>
            <param name="parameterName">The zero-based location of the OracleParameter in the collection.</param>
            <returns>The zero-based location of the OracleParameter in the collection.</returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an OracleParameter object into the collection at a specified index.
            </summary>
            <param name="index">The zero-based index where the parameter is to be inserted within the collection.</param>
            <param name="value">The OracleParameter to add to the collection.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Insert(System.Int32,DDTek.Oracle.OracleParameter)">
            <summary>
            Inserts a OracleParameter object into the collection
            at a specified index.
            </summary>
            <param name="index">The zero-based index where the parameter is 
            to be inserted within the collection.</param>
            <param name="param">The OracleParameter to add to the collection.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Remove(System.Object)">
            <summary>
            Removes the specified OracleParameter from 
            the collection.
            </summary>
            <param name="value">The OracleParameter object to remove from the collection.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.Remove(DDTek.Oracle.OracleParameter)">
            <summary>
            Removes the specified OracleParameter from 
            the collection.
            </summary>
            <param name="param">The OracleParameter object to remove from 
            the collection.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the OracleParameter object from the collection.
            </summary>
            <param name="index">The zero-based index of the OracleParameter object to remove.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.RemoveAt(System.String)">
            <summary>
            Removes the OracleParameter object from the collection.
            </summary>
            <param name="parameterName">The name of the OracleParameter to remove.</param>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.getNthNonReturnValueParameter(System.Int32)">
            <summary>
            Gets the Nth parameter from the collection that is not a return
            value. Our spec allows the user to put the return value in 
            any spot in the collection, so we need to skip it when counting
            parameters for a stored procedure.
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.OracleParameterCollection.getParameterOrdinal(DDTek.Oracle.OracleParameter)">
            <summary>
            Gets the ordinal number (0 based) of the given parameter.
            </summary>
            <param name="userParameter"></param>
            <returns></returns>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.Count">
            <summary>
            Gets the number of OracleParameter objects in the collection.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.IsFixedSize">
            <summary>
            Gets a value that indicates whether the OracleParameterCollection has a fixed size.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.IsSynchronized">
            <summary>
            Gets a value that indicates whether the OracleParameterCollection is thread-safe.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.IsReadOnly">
            <summary>
            Gets a value that indicates whether the OracleParameterCollection is read-only.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.SyncRoot">
            <summary>
            Gets the object used to synchronize access to the OracleParameterCollection.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.Item(System.Int32)">
            <summary>
            Initializes a new 
            instance of the OracleParameter class.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.Item(System.String)">
            <summary>
            Initializes a new 
            instance of the Parameter class.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleParameterCollection.ReturnValueParameter">
            <summary>
            Gets the first Return Value parameter found in the collection.
            If none is found, null is returned.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OraclePermission">
            <summary>
            The OraclePermission class enables the Oracle data provider 
            to ensure that a user has a security level sufficient to access an Oracle 
            database.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OraclePermission.#ctor">
            <summary>
            Enables the Oracle data provider 
            to ensure that a user has a security level sufficient to access an Oracle 
            database.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>
            Enables the Oracle data provider 
            to ensure that a user has a security level sufficient to access an Oracle 
            database.
            </summary>
            <param name="state">One of the System.Security.Permissions.PermissionState values</param>
        </member>
        <member name="M:DDTek.Oracle.OraclePermission.Copy">
            <summary>
            Returns the OraclePermission as an IPermission.
            </summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="T:DDTek.Oracle.OraclePermissionAttribute">
            <summary>
            The OraclePermissionAttribute object initializes a new instance of 
            the OraclePermissionAttribute class with one of the SecurityAction values.
            </summary>
            
        </member>
        <member name="M:DDTek.Oracle.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>
            The SecurityAction property specifies the security actions that can be performed using 
            declarative security.
            </summary>
            <param name="action">One of the System.Security.Permissions.SecurityAction 
            values representing an action that can be performed using declarative security</param>
        </member>
        <member name="M:DDTek.Oracle.OraclePermissionAttribute.CreatePermission">
            <summary>
            The CreatePermission() method returns an OraclePermission object that is 
            configured according to the attribute properties.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DDTek.Oracle.OracleStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.BAD_SERVER_TYPE">
            <summary>
              Looks up a localized string similar to The Server Type option must be either DEDICATED or SHARED..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CANNOT_CHANGE_PWD_WITH_AUTHENTICATION_METHOD">
            <summary>
              Looks up a localized string similar to The specified Authentication Method is incompatible with the change password operation..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CANNOT_CHANGE_PWD_WITH_WIRE_PROTOCOL_VERSION">
            <summary>
              Looks up a localized string similar to The specified Wire Protocol Version is incompatible with the change password
             operation. Only version 8 is supported..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CANNOT_PARSE_ENCODED_TICKET">
            <summary>
              Looks up a localized string similar to Error during part {0} of the processing of the encoded ticket necessary for Kerberos authentication..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CANNOT_USE_LONG_WITH_ARRAY_BIND">
            <summary>
              Looks up a localized string similar to LONG and LONG RAW are not supported when array binding parameter values..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CANNOT_USE_LONG_WITH_SP">
            <summary>
              Looks up a localized string similar to LONG RAW cannot be used as parameter type for output parameters..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CANNOT_USE_OUT_PARMS_WITH_ARRAY_BIND">
            <summary>
              Looks up a localized string similar to Array bind feature is only supported with input parameters..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CANT_CONVERT">
            <summary>
              Looks up a localized string similar to Value can not be converted to requested type..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Category_TNSNamesConnection">
            <summary>
              Looks up a localized string similar to TNSNames Connection.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.COMMUNICATION_LINK_FAILURE">
            <summary>
              Looks up a localized string similar to ORA-03113 Communication link failure.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CONFLICT_ADDRESS">
            <summary>
              Looks up a localized string similar to The Server Name or Data Source connect options cannot be used in same connectiong string that uses the following connect options: Host, Port, SID, Service Name, Server Type or Alternate Servers..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CONFLICT_SID">
            <summary>
              Looks up a localized string similar to The connection string cannot simultaneously specify a SID and a Service Name value..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.CONNECT_FAILOVER_OCCURRED">
            <summary>
              Looks up a localized string similar to The connection attempt has failed over to an alternate server..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.COUNTER_CATEGORY_DESCRIPTION">
            <summary>
              Looks up a localized string similar to Counters for DataDirect Connect for ADO.NET Oracle Data Provider.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.DATA_TYPE_NOT_SUPPORTED">
            <summary>
              Looks up a localized string similar to This column&apos;s data type is not currently supported..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_AccountingInfo">
            <summary>
              Looks up a localized string similar to This option can be used to set the CLIENT_INFO column in the V$SESSION table..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ApplicationName">
            <summary>
              Looks up a localized string similar to This option can be used to set the PROGRAM column in the V$SESSION table..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ArraySendSize">
            <summary>
              Looks up a localized string similar to Specifies the Array Send Size which controls the size of arrays used to when performancing array binding, in particular during bulk load operations. The value is specifed in kilobytes.  The default is 4096 (4 MB)..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_AuthenticationMethod">
            <summary>
              Looks up a localized string similar to Specifies the authentication method to use when logging in to the DBMS..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_BatchUpdateBehavior">
            <summary>
              Looks up a localized string similar to Determines how the provider uses internal optimization during  batch update operations.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_CertificateStoreLocation">
            <summary>
              Looks up a localized string similar to Specifies the location of the X.509 certificate store used for client authentication..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ClientHostName">
            <summary>
              Looks up a localized string similar to This option can be used to set the MACHINE column in the V$SESSION table..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ClientUser">
            <summary>
              Looks up a localized string similar to This option can be used to set the OSUSER column in the V$SESSION table..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_CodePageOverride">
            <summary>
              Looks up a localized string similar to The code page to be used by the provider to convert character data. The specified code page overrides the default database code page or column collation. All character data that is returned from or written to the database is converted using the specified code page. This option has no effect on how the provider converts character data to the national character set. By default, the provider automatically determines which code page to use to convert character data. Use this property only if you need to change  [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_CommitBehavior">
            <summary>
              Looks up a localized string similar to The asynchronous commit behavior.  Valid values are ServerDefault, WaitImmediate, WaitBatch, NoWaitImmediate and NoWaitBatch..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_CursorDescriptionCache">
            <summary>
              Looks up a localized string similar to When true, cached result set description information is used to execute a Select statement that exactly matches a previously executed Select statement..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_DataSource">
            <summary>
              Looks up a localized string similar to An Oracle net service name in a TNSNAMES.ORA file..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_EnableServerResultCache">
            <summary>
              Looks up a localized string similar to Determines whether the provider will add a hint to the SQL statement to enable a server side resultSet cache.  The default is false..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_EnableXA">
            <summary>
              Looks up a localized string similar to The option provides a workaround for tools such as LightSwitch that presume the underlying provider is able to promote a local transaction to a fully distributed transaction on an as-needed basis, something the provider cannot currently do. Use the value False to employ the workaround..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_EncryptionMethod">
            <summary>
              Looks up a localized string similar to Defines the hows the provider encrypts data between the provider and the data source..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_FetchArraySize">
            <summary>
              Looks up a localized string similar to The amount of data (from 1 to 2147483647 bytes)  the connection uses to fetch multiple rows..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_FloatingPointParameterBehavior">
            <summary>
              Looks up a localized string similar to This option determines what native data type the provider uses when sending floating point parameter values to the server. For pre-10g servers, floating point parameter values are always sent as NUMBER..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_Host">
            <summary>
              Looks up a localized string similar to Either the name or the IP address of the Oracle server to which you want to connect..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_InitializationString">
            <summary>
              Looks up a localized string similar to Specifies one statement that will be issued immediately after connecting to the database to manage session settings..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_NumberAsDouble">
            <summary>
              Looks up a localized string similar to When true, the Oracle NUMBER data type with no precision and no scale is mapped to DOUBLE..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_PacketBufferSize">
            <summary>
              Looks up a localized string similar to The number of bytes (from 1 to 2147483647 bytes) used for the buffer used to read packets from the network socket. .
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_Password">
            <summary>
              Looks up a localized string similar to A case-insensitive password used to connect to your Oracle database..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_Port">
            <summary>
              Looks up a localized string similar to The TCP port of the Oracle listener running on the Oracle database..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ProcedureDescriptionCache">
            <summary>
              Looks up a localized string similar to When true, the stored procedure information is cached..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ProgramID">
            <summary>
              Looks up a localized string similar to This option can be used to set the PROCESS column in the V$SESSION table..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_RefCursorMode">
            <summary>
              Looks up a localized string similar to Indicates whether the provider should automatically detect REF CURSORs or the application will explicitliy indicate them in the parameter collection..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ServerType">
            <summary>
              Looks up a localized string similar to When set to Shared, the server process to be used is retrieved from a pool. When set to Dedicated, a server process is created to service only that connection. When set to an empty string (the initial default), the data provider uses the default server type set on the server..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_ServiceName">
            <summary>
              Looks up a localized string similar to The database service name that specifies the database used for the connection..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_SessionDataUnit">
            <summary>
              Looks up a localized string similar to The session data unit (SDU) that will be requested when connecting to the server.  The SDU is essentially equivalent to the maximum packet size.  The actual SDU that will get used is negotiated with the server..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_SID">
            <summary>
              Looks up a localized string similar to The Oracle System Identifier that refers to the instance of the Oracle database software running on the server..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_SupportLinks">
            <summary>
              Looks up a localized string similar to Determines whether the driver supports Oracle linked servers, which means a mapping has been defined in one Oracle server to another Oracle server. If set to true, the driver supports Oracle linked servers. When Oracle linked servers are supported, the driver does not support distributed transactions. If set to false (the default), the driver does not support Oracle linked servers. In addition, the driver supports distributed transactions. In most cases, using the default (false) provides the best performan [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_TNSNamesFile">
            <summary>
              Looks up a localized string similar to The location of TNSNAMES.ORA file..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_UserID">
            <summary>
              Looks up a localized string similar to The default user name used to connect to your Oracle database..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_UserIDPrivilege">
            <summary>
              Looks up a localized string similar to Specifies the role to use when logging in with administrative privileges.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_WireProtocolMode">
            <summary>
              Looks up a localized string similar to When set to 1, operates in normal wire protocol mode without optimizing network traffic for result sets. When set to 2, network traffic is optimized to the Oracle server for result sets containing repeating data..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.Description_WorkArounds">
            <summary>
              Looks up a localized string similar to Use this field only when instructed by Progress DataDirect Technical Support. .
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.GSS_CLIENT_NOT_ROOTED">
            <summary>
              Looks up a localized string similar to The path to GSS Client DLL is required to be a rooted absolute path..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.IMPERSONATION_NOT_ALLOWED">
            <summary>
              Looks up a localized string similar to Impersonation not allowed with current Authentication Method..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.IMPLICIT_REF_CURSOR_MODE">
            <summary>
              Looks up a localized string similar to Parameters cannot be described as RefCursor when in implicit REF CURSOR mode..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.LINKS_ENLIST_CONFLICT">
            <summary>
              Looks up a localized string similar to Support Links and Enlist both cannot both be set to True at the same time..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.MANUAL_ENLISTEMENT_DISABLED">
            <summary>
              Looks up a localized string similar to Support Links must be set to False for EnlistTransaction or EnlistDistributedTransaction methods to function..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.MAX_OUTPUT_ARRAY_COUNT_MISUSE">
            <summary>
              Looks up a localized string similar to Cannot have MaxOutputArrayCount set to a non-zero value and CollectionType set to anything other than None..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.MISSING_REQUIRED_KERBEROS_INFO">
            <summary>
              Looks up a localized string similar to Unable to determine information required for Kerberos authentication: {0}.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.NET8_PROTOCOL_ERROR">
            <summary>
              Looks up a localized string similar to NET8 protocol error.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.NET8_PWDENCRYPTION_ERROR">
            <summary>
              Looks up a localized string similar to NET8 encryption error.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.NO_TCP_ADDRESS_FOUND">
            <summary>
              Looks up a localized string similar to No suitable TCP address was found for the {0} in the TNSNAMES.ORA file..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_BAD_DATA_TYPE">
            <summary>
              Looks up a localized string similar to Specified data type is not a member of the OracleDbType enumeration..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_BAD_ISOLATION_LEVEL">
            <summary>
              Looks up a localized string similar to Cannot set unsupported isolation level.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_BAD_PARAMETER_DIRECTION">
            <summary>
              Looks up a localized string similar to The direction specified for one of the parameters does not match the stored procedure..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_COMMAND_TEXT_NOT_SP">
            <summary>
              Looks up a localized string similar to Specified command text is not a stored procedure..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_COMMAND_TYPE_NOT_SP">
            <summary>
              Looks up a localized string similar to Specified command type is not a stored procedure..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_COMPILATION_ERRORS">
            <summary>
              Looks up a localized string similar to Your stored procedure was created, but it had compilation errors..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_LITERAL_FOR_INPUT_ONLY">
            <summary>
              Looks up a localized string similar to Literal argments are only supported for input only parameters..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_PARAMETER_COUNT_MISMATCH">
            <summary>
              Looks up a localized string similar to The number of parameter markers in the command does not match the number of parameters in the parameter collection..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.ORACLE_SP_PARAMETER_COUNT_MISMATCH">
            <summary>
              Looks up a localized string similar to The specified stored procedure requires more parameters than the user has specified..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.OS_AUTH_NOT_SUPPORTED">
            <summary>
              Looks up a localized string similar to OS Authentication was requested, but is not supported by this Oracle Server..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.OUTPUT_ARRAY_BIND_ONLY_FOR_SP">
            <summary>
              Looks up a localized string similar to The output array binding feature is only supported for stored procedures and functions..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.OVERLOAD_AMBIGOUS">
            <summary>
              Looks up a localized string similar to The specified parameter collection matches multiple overloads for the stored procedure..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.OVERLOAD_NO_LITERALS">
            <summary>
              Looks up a localized string similar to All arguments to an overloaded stored procedure that returns a REF CURSOR must be specifed in the parameter collection..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.OVERLOAD_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Unable to match the specified parameter collection with any of the overloads for the stored procedure..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.OVERLOAD_REQUIRES_BIND_BY_NAME">
            <summary>
              Looks up a localized string similar to Binding parameters by name is required when executing overloaded stored procedures that return REF CURSORs..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.PLSQL_BOOLEAN_TYPE_NOT_SUPPORTED">
            <summary>
              Looks up a localized string similar to Stored procedures or functions that use the PL/SQL BOOLEAN data type as a parameter type or return value type are not supported..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.PLSQL_RECORD_TYPE_NOT_SUPPORTED">
            <summary>
              Looks up a localized string similar to Stored procedures or functions that use the PL/SQL RECORD data type as a parameter type or return value type are not supported..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.PROCEDURE_NOT_FOUND">
            <summary>
              Looks up a localized string similar to Stored procedure was not found..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.REF_CURSOR_MUST_BE_NULL">
            <summary>
              Looks up a localized string similar to The input parameter value for parameters described as RefCursor must be null or DBNull..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.REF_CURSOR_NOT_FOR_SQL">
            <summary>
              Looks up a localized string similar to Parameters may only be described as RefCursor for stored procedures or anonomous PL/SQL blocks..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.RETURNING_INTO_FOR_DML_ONLY">
            <summary>
              Looks up a localized string similar to The ReturningIntoArray collection type may only be used with output parameters for INSERT or UPDATE commands..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.SERVER_ERROR_FOR_KERBEROS">
            <summary>
              Looks up a localized string similar to The Oracle server returned an error during Kerberos authentication. Native error code: {0}.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.SERVER_NAME_NOT_FOUND">
            <summary>
              Looks up a localized string similar to {0} was not found in the TNSNAMES.ORA file..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.SOURCE_NAME">
            <summary>
              Looks up a localized string similar to DataDirect Connect for ADO.NET Oracle Data Provider.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS_GENERIC">
            <summary>
              Looks up a localized string similar to TNS-{0}: TNS:Unknown error.  Consult Oracle documentation.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS_NAMES_ACCESS_ERROR">
            <summary>
              Looks up a localized string similar to Unable to access the TNSNames.ora file: {0}.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12170">
             <summary>
               Looks up a localized string similar to TNS-12170 TNS:Connect timeout occurred
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12203">
             <summary>
               Looks up a localized string similar to TNS-12203 TNS:unable to connect to destination
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12500">
             <summary>
               Looks up a localized string similar to TNS-12500 TNS:listener failed to start a dedicated server process
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12502">
             <summary>
               Looks up a localized string similar to TNS-12502 TNS:listener received no CONNECT_DATA from client
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12504">
             <summary>
               Looks up a localized string similar to TNS-12504 TNS:listener was not given the SID in CONNECT_DATA
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12505">
             <summary>
               Looks up a localized string similar to TNS-12505 TNS:listener could not resolve SID given in connect descriptor
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12509">
             <summary>
               Looks up a localized string similar to TNS-12509 TNS:listener failed to redirect client to service handler
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12510">
             <summary>
               Looks up a localized string similar to TNS-12510 TNS:database temporarily lacks resources to handle the request
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12512">
             <summary>
               Looks up a localized string similar to TNS-12512 TNS:service handler found but it has not registered a redirect address
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12513">
             <summary>
               Looks up a localized string similar to TNS-12513 TNS:service handler found but it has registered for a different protocol
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12514">
             <summary>
               Looks up a localized string similar to TNS-12513 TNS:service handler found but it has registered for a different protocol
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12515">
             <summary>
               Looks up a localized string similar to TNS-12515 TNS:listener could not find a handler for this presentation
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12516">
             <summary>
               Looks up a localized string similar to TNS-12516 TNS:listener could not find available handler with matching protocol stack
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12517">
             <summary>
               Looks up a localized string similar to TNS-12517 TNS:listener could not find service handler supporting direct handoff
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12518">
             <summary>
               Looks up a localized string similar to TNS-12518 TNS:listener could not hand off client connection
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12519">
             <summary>
               Looks up a localized string similar to TNS-12519 TNS:no appropriate service handler found
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS12520">
             <summary>
               Looks up a localized string similar to TNS-12520 TNS:listener could not find available handler for requested type of server
            
            .
             </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TNS542">
            <summary>
              Looks up a localized string similar to TNS-00520 TNS:SSL Handshake failed.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.TTC_NUMERIC_OVERFLOW">
            <summary>
              Looks up a localized string similar to Wire numeric read overflowed.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UID_AND_PWD_REQUIRED">
            <summary>
              Looks up a localized string similar to The User ID and Password both must be specified in the connection string for the effective Authentication Method..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNABLE_TO_PARSE_TNSNAMES_FILE">
            <summary>
              Looks up a localized string similar to Unable to parse the TNSNAMES.ORA file..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_AUTHENTICATION_METHOD">
            <summary>
              Looks up a localized string similar to The value specified for the authentication method was not recognized..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_BATCH_UPDATE_BEHAVIOR">
            <summary>
              Looks up a localized string similar to The value specified for the batch update behavior was not recognized..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_CERTIFICATE_STORE_LOCATION">
            <summary>
              Looks up a localized string similar to The value specified for the certificate store location was not recognized..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_COMMIT_BEHAVIOR">
            <summary>
              Looks up a localized string similar to Unsupported Commit Behavior. Uses are restricted to ServerDefault, WaitImmediate, WaitBatch, NoWaitImmediate and NoWaitBatch..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_ENCRYPTION_METHOD">
            <summary>
              Looks up a localized string similar to The value specified for the encryption method was not recognized..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_ENLIST_BEHAVIOR">
            <summary>
              Looks up a localized string similar to The value specified for Enlist is invalid. Enlist cannot be true when Enable XA is set to false..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_FLOATING_POINT_PARAMETER_BEHAVIOR">
            <summary>
              Looks up a localized string similar to The value specified for Floating Point Parameter Behavior was invalid..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.UNSUPPORTED_USER_ID_PRIVILEGE">
            <summary>
              Looks up a localized string similar to User ID Privilege must be set to either SYSDBA or SYSOPER.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.USER_CANCELED_OPERATION">
            <summary>
              Looks up a localized string similar to ORA-01013: user requested cancel of current operation.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.WIRE_PROTOCOL_VERSION_NOT_SUPPORTED_FOR_AUTHENTICATION_METHOD">
            <summary>
              Looks up a localized string similar to The Wire Protocol Version must be 8 to support for the Authentication Method specified..
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleStrings.WIRE_PROTOCOL_VERSION_NOT_SUPPORTED_FOR_SERVER">
            <summary>
              Looks up a localized string similar to The specified wire protocol version is not supported by the Oracle server..
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleTableNameParser">
            <summary>
            Summary description for OracleTableNameParser.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleTrace">
            <summary>
            Provides a set of methods and properties that help you to trace the execution of your code. 
            The data provider can trace all of its method calls and the returns from those
            method calls to a trace file specified by the user.
            </summary>
            <remarks>
            NOTE: Setting EnableTrace = 1 starts the tracing process. Therefore, 
            you must define the property values for the trace file before 
            setting EnableTrace. Once the trace processing starts, the values 
            of the TraceFile and RecreateTrace properties cannot be changed.
            </remarks>
        </member>
        <member name="M:DDTek.Oracle.OracleTrace.DumpFootprints">
            <summary>
            Displays the footprint of all source files
            in a data provider.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleTrace.EnableTrace">
            <summary>
            When set to 1 or higher, enables tracing. 
            The initial default value is 0. Tracing is disabled.
            </summary>
            <remarks>
            NOTE: Setting EnableTrace = 1 starts the tracing process. Therefore, 
            you must define the property values for the trace file before 
            setting EnableTrace. Once the trace processing starts, the values 
            of the TraceFile and RecreateTrace properties cannot be changed.
            </remarks>
        </member>
        <member name="P:DDTek.Oracle.OracleTrace.TraceFile">
            <summary>
            Specifies the path and name of the trace file. 
            The initial default is \OracleTrace.txt.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleTrace.RecreateTrace">
            <summary>
            Specifies whether to recreate the trace file 
            each time the application restarts. 
            When set to 1, the data provider recreates the trace file 
            each time the application restarts. The initial 
            default value is 0. The trace file is appended.
            <para>
            If you change an environment variable value, you must 
            restart the application for the new value to take effect.
            </para>
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleTransaction">
            <summary>
            Represents the transaction that will be 
            performed on a database using the Oracle 
            data provider.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleTransaction.Commit">
            <summary>
            Completes a transaction. Modifications made during a transaction 
            become a permanent part of the database.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleTransaction.Rollback">
            <summary>
            Cancels modifications made during a transaction, and  
            no changes are made to the database.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.OracleTransaction.Dispose(System.Boolean)">
            <summary>
            Releases all of the resources that it owns. 
            In addition, it calls its parent type's Dispose method, releasing all of the 
            resources owned by the parent's types. By calling the Dispose method multiple times, 
            all resources are released.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleTransaction.Connection">
            <summary>
            Represents an open connection to an Oracle database.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.OracleTransaction.IsolationLevel">
            <summary>
            Defines the isolation level for the entire transaction.
            If the value is changed, the new value is used at execution time.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleUtility">
            <summary>
            OracleUtility is a collection of static functions and constant
            defines that are unique to the Oracle provider.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleVNU">
            <summary>
            Summary description for OracleVNU.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.OracleXAResource">
            <summary>
            Summary description for OracleXAResource.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Sec.MessageDigestSupport">
            <summary>
            Encapsulates the functionality of message digest algorithms such as SHA1 or MD5.
            
            The code for this class was largely obtained from
            http://src.gnu-darwin.org/ports/lang/ml-pnet/work/ml-pnet-0.7.4/mcs-sources/class/Novell.Directory.Ldap/Novell.Directory.Ldap/SupportClass.cs
            
            </summary>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.#ctor(System.String)">
            <summary>
            Creates a message digest using the specified name to set Algorithm property.
            </summary>
            <param name="algorithm">The name of the algorithm to use</param>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.DigestData">
            <summary>
            Computes the hash value for the internal data digest.
            </summary>
            <returns>The array of signed bytes with the resulting hash value</returns>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.DigestData(System.Byte[])">
            <summary>
            Performs and update on the digest with the specified array and then completes the digest
            computation.
            </summary>
            <param name="newData">The array of bytes for final update to the digest</param>
            <returns>An array of signed bytes with the resulting hash value</returns>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.Update(System.Byte[])">
            <summary>
            Updates the digest data with the specified array of bytes by making an append
            operation in the internal array of data.
            </summary>
            <param name="newData">The array of bytes for the update operation</param>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.Update(System.Byte)">
            <summary>
            Updates the digest data with the input byte by calling the method Update with an array.
            </summary>
            <param name="newData">The input byte for the update</param>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the specified count of bytes with the input array of bytes starting at the
            input offset.
            </summary>
            <param name="newData">The array of bytes for the update operation</param>
            <param name="offset">The initial position to start from in the array of bytes</param>
            <param name="count">The number of bytes fot the update</param>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.Reset">
            <summary>
            Resets the digest data to the initial state.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.GetInstance(System.String)">
            <summary>
            Generates a new instance of the MessageDigestSupport class using the specified algorithm
            </summary>
            <param name="algorithm">The name of the algorithm to use</param>
            <returns>A new instance of the MessageDigestSupport class</returns>
        </member>
        <member name="M:DDTek.Oracle.Sec.MessageDigestSupport.EquivalentDigest(System.SByte[],System.SByte[])">
            <summary>
            Compares two arrays of signed bytes evaluating equivalence in digest data
            </summary>
            <param name="firstDigest">An array of signed bytes for comparison</param>
            <param name="secondDigest">An array of signed bytes for comparison</param>
            <returns>True if the input digest arrays are equal</returns>
        </member>
        <member name="P:DDTek.Oracle.Sec.MessageDigestSupport.Algorithm">
            <summary>
            The HashAlgorithm instance that provide the cryptographic hash algorithm
            </summary>
        </member>
        <member name="P:DDTek.Oracle.Sec.MessageDigestSupport.Data">
            <summary>
            The digest data
            </summary>
        </member>
        <member name="P:DDTek.Oracle.Sec.MessageDigestSupport.AlgorithmName">
            <summary>
            The name of the cryptographic hash algorithm used in the instance
            </summary>
        </member>
        <member name="M:DDTek.Oracle.TNS.TnsFile.open(System.String[],System.Int32,System.Int32)">
            <summary>
            Open up file.  Location of file is taken from registry if no path was given.
            </summary>
            <param name="tnsNames"></param>
        </member>
        <member name="M:DDTek.Oracle.TNS.TnsFile.openStream(System.String)">
            <summary>
            Open up file.  Location of file is taken from registry if no path was given.
            </summary>
            <param name="tnsNames"></param>
        </member>
        <member name="M:DDTek.Oracle.TNS.TnsFile.close">
            <summary>
            Close up the reader and stream objects.
            </summary>
        </member>
        <member name="M:DDTek.Oracle.TNS.TnsFile.GetTNSNamesPathFromRegistry">
            <summary>
            Get TNSNAMES.ORA path from using the Oracle section in the registry.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.TNS.TnsFile.getServerSection(System.String)">
            <summary>
            Extract the specified server section from the TNSNAMES.ORA file.
            </summary>
            <param name="serverName"></param>
            <returns></returns>
        </member>
        <member name="T:DDTek.Oracle.TNS.TnsValueInfo">
            <summary>
            TnsValueInfo is a helper class used to parse the TNSNAMES.ORA file.
            Each keyword can have a list of other keyword value pairs.  This object
            is used to represent the value of keyword.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleCommunication">
            <summary>
            Summary description for OracleCommunication.
            </summary>
        </member>
        <member name="P:DDTek.Oracle.Wire.OracleCommunication.Reader">
             When read is buffered, this method returns a new reader based
             on a UtilByteArrayDataProvider object. This object will read
             all available data from depacktizer during receive() and keep
             them in its own buffer for later processing. This effectively
             frees the socket for other requests.
             When read is not buffered, simply returns the original reader.
            
             @return A UtilByteOrderedDataReader object
        </member>
        <member name="F:DDTek.Oracle.Wire.OracleDataConsumer.m_numBytesInPrimaryPacketBuffer">
            This field indicates the number of bytes already written to the primaryBuffer
            array. Note that this is different than the size of that array, which is fixed 2048 bytes
        </member>
        <member name="M:DDTek.Oracle.Wire.OracleDataConsumer.signalStartOfPacket(System.Boolean)">
             This method writes the standard Oracle Net8 8-byte message header.
            
             It overrides the implementation provided by the base class.
            
             This method records the location at which the total message
             length appears in the header. The "signalEndOfPacket" method
             uses this location to fill in the total message length.
        </member>
        <member name="M:DDTek.Oracle.Wire.OracleDataConsumer.signalEndOfPacket(System.Boolean)">
            This method completes the standard Net8 message header by filling
            in the total message length, gets called just before packet is pushed on the wire.
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleDataProvider">
            <summary>
            Summary description for OracleDataProvider.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleNSPTACPacket">
            <summary>
            Summary description for OracleNSPTACPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleNSPTxxPacket">
            <summary>
            Summary description for OracleNSPTxxPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleNSPTCNPacket">
            <summary>
            Summary description for OracleNSPTCNPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleNSPTDAPacket">
            <summary>
            Summary description for OracleNSPTDAPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleNSPTRDPacket">
            <summary>
            Summary description for OracleNSPTRDPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.OracleNSPTRFPacket">
            <summary>
            Summary description for OracleNSPTRFPacket.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_blocks">
            An array that contains the blocks that make up the in memory buffer
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_currentBlockNum">
            This field indicates which block is currently already present.
            This is done to avoid excessive calls to getblock.
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_numAllocatedBlocks">
            This field indicates the number of elements in the above "blocks" array
            which actually reference instances of the UtilTempBufferBlock class
            (as opposed to those which are null references).
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_maxBlocks">
            The maximum number of physical blocks to be contained in the "blocks"
            array.
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_tempByteArray">
            A byte array used to contain data which is subsequently
            read/written from/to the temp buffer.
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_blockSize">
            The size of the in memory buffer blocks
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_blockShift">
            The number of bits to shift the temp buffer offset to get the
            block number
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_tmpFileInfo">
            Filename and path for backing temporary file
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_tmpFile">
            The currently open backing temporary file
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_nextAvail">
            The next available byte in the temp buffer
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_overflowToDisk">
            This field indicates whether this class should utilize the hard
            disk to maintain (overflow for) the temp buffer.
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.m_hitOutOfMemoryError">
            This field indicates whether an out of memory error has been
            encountered (since object construction or truncate(true)) while
            attempting to allocate a new UtilTempBufferBlock object.
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.#ctor">
            Creates a new UtilPagedTempBuffer with the default block size and
            number of physical blocks
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.#ctor(System.Int32)">
             Creates a new UtilPagedTempBuffer with the number of physical blocks
             specified by numPhysicalBlocks and the default block size
            
             @param maxMemory 
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.#ctor(System.Int32,System.Int32)">
             Creates a new UtilPagedTempBuffer with the number of physical blocks
             specified by numPhysicalBlocks and the specified block size
            
             @param numPhysicalBlocks The number of physical blocks that will make
             up the in memory data buffer.
             @param blockSize The size of the physical blocks in KBytes
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.setup(System.Int32,System.Int32)">
             Used by each of the constructors, this method initializes the
             various fields in a newly created UtilPagedTempBuffer object.
            
             @param numPhysicalBlocks The number of physical blocks that will make
             up the in-memory data buffer.
            
             @param blockSize The size of the physical blocks in KBytes.
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.Write(System.Int32,System.Byte[],System.Int32,System.Int32)">
             Writes some or all of the supplied buffer to the temp buffer
            
             @param offset The offset into the temp buffer to start writing to
             @buffer The buffer containing the bytes to write
             @bufferOffset The offset into buffer from which begin reading from
             @length The number of bytes to read from buffer and write to the temp
             buffer
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.Read(System.Int32,System.Byte[],System.Int32,System.Int32)">
             Reads a set of bytes from the temp buffer into the buffer
             supplied
            
             @param offset The offset into the temp buffer to start reading from
             @param buffer The buffer that the bytes read are to be written to
             @param bufferOffset The offset into buffer to start writing the bytes to
             @param length The number of bytes to read from the temp buffer and write
             to the buffer supplied buffer
            
             @return The number of bytes written to the supplied buffer
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.Truncate">
            Clears the contents of the temp buffer and sets the buffer size to zero
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.Close">
            <summary>
            Closes and deletes tempfile used
            </summary>
            <returns></returns>
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.setBlockSize(System.Int32)">
             Set the block size for this temp buffer
            
             @param blockSize The block size to use
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.getBlock(System.Int32,System.Boolean)">
            Fetch the physical memory block to use based on the block number.  Load
            the request logical block into the physical block if necessary
        </member>
        <member name="M:DDTek.Oracle.Wire.OraclePagedTempBuffer.getTempFile">
            Return the current temp file associated with this temp buffer.  Creates
            a new temp file if one does not exist
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.TempBufferBlock.Data">
            The first physical block of the pair
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.TempBufferBlock.BlockNum">
            The number of the virtual block loaded into the first physical block
            of the pair
        </member>
        <member name="F:DDTek.Oracle.Wire.OraclePagedTempBuffer.TempBufferBlock.BlockDirty">
            Indicates whether the data in the first physical block has changed since
            it was last written to disk
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIDataPacket">
            <summary>
            Summary description for TTIDataPacket.
            </summary>
        </member>
        <member name="F:DDTek.Oracle.Wire.TTIANODataPacket.KERB_BUFF_SIZE">
            Defines the initial size of the buffer in which a
            Kerberos request will be constructed.
        </member>
        <member name="F:DDTek.Oracle.Wire.TTIANODataPacket.ANO1">
            The ANO1 packet is used to first sent to the server to see if it supports
            OS Authentication at all. I'm sure it has other uses, but we don't know what
            they are.
        </member>
        <member name="F:DDTek.Oracle.Wire.TTIANODataPacket.ANO2">
            Based on the response from ANO1 we may or may not send the
            ANO2 packet. The ANO2 packet will be used only with Kerberos
            to ask the server for the servicePrincipal
        </member>
        <member name="F:DDTek.Oracle.Wire.TTIANODataPacket.ANO3Triplet">
            The ANO3 packet is the packet we send to the server with our 
            initial security token. For Kerberos we use the servicePricipal
            recieved with ANO2. Note that there are 2 types of this packet. One
            is used for inter-domain communication, the other is used for cross-domain
            communication.
        </member>
        <member name="F:DDTek.Oracle.Wire.TTIANODataPacket.ANO3">
            The ANO3 packet is the packet we send to the server with our 
            initial security token. For Kerberos we use the servicePricipal
            recieved with ANO2
        </member>
        <member name="F:DDTek.Oracle.Wire.TTIANODataPacket.ANO4Triplet">
            After sending ANO4 we get a securityToken back from the server and send our final token
            (response to the server challenge) in the ANO4 packet. Note that there are 2 types of this packet. One
            is used for inter-domain communication, the other is used for cross-domain
            communication.
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIDTYDataPacket">
            <summary>
            Summary description for TTIDTYDataPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUNDataPacket">
            <summary>
            Summary description for TTIFUNDataPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUN_O3LOG">
            <summary>
            Summary description for TTIFUN_O3LOG.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUN_OALL7">
            <summary>
            Summary description for TTIFUN_OALL7.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUN_OCANCEL">
            <summary>
            Summary description for TTIFUN_OCANCEL.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUN_OCLOSE">
            <summary>
            Summary description for TTIFUN_OCLOSE.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUN_ODNY">
            <summary>
            Summary description for TTIFUN_ODNY.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUN_OOPEN">
            <summary>
            Summary description for TTIFUN_OOPEN.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIFUN_OVERSION">
            <summary>
            Summary description for TTIFUN_OVERSION.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIOERDataPacket">
            <summary>
            Summary description for TTIOERDataPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIPRODataPacket">
            <summary>
            Summary description for TTIPRODataPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIRXDDataPacket">
            <summary>
            Summary description for TTIRXDDataPacket.
            </summary>
        </member>
        <member name="T:DDTek.Oracle.Wire.TTIRXHDataPacket">
            <summary>
            Summary description for TTIRXHDataPacket.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DDInt.Parser.BaseSQL" -->
        <member name="F:DDInt.Parser.BaseSQL.SQL_UNKNOWN">
            SQL is of unknown type.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.SQL_DML_SELECT">
            SQL is a SELECT statement.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.SQL_DDL_CREATE_TABLE">
            SQL is a CREATE TABLE statement.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.SQL_DML_CALL">
            SQL is a CALL statement.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.SQL_DML_INSERT_TABLE">
            SQL is a INSERT statement.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.SQL_DML_UPDATE_TABLE">
            SQL is a UPDATE statement.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.SQL_DML_DELETE_TABLE">
            SQL is a DELETE statement.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.SQL_DDL_UNKNOWN_STMT">
            SQL is an unknown DDL statement.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.originalSQL">
            SQL specified by the application.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.m_hasForUpdate">
            True if sql contains a FOR UPDATE [ OF column_name [ ,...n ] ] clause
        </member>
        <member name="F:DDInt.Parser.BaseSQL.hasReadOnly">
            True if sql contains a FOR READ ONLY clause
        </member>
        <member name="F:DDInt.Parser.BaseSQL.escapeTranslator">
            Used to translate ODBC style escapes.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.processLevel">
            Specifices to what level the SQL needs to be processed.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.intoIsOptional">
            True if the "into" in an insert statement is optional
        </member>
        <member name="F:DDInt.Parser.BaseSQL.quote">
            Quote character for string literals and quoted identifiers.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.type">
            One of the SQL_ constants.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.treeRoot">
            Special SQL statement root node.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.createTableColumnSpecificationNodes">
            !!!Change once DB2 has changed interface!!!
            This vector actually just contains a BaseSQLListManipulator.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.selectListManipulator">
            Used to modify the select list.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.hasEscape">
            true if sql contains at least one escape.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.mayHaveParameters">
            A guess as to whether or not the statement contains parameter markers.
            A true indicates that the statement may contain parameter markers.
            A false indicates that the statement does not contain parameter markers.
            False is definitive and true isn't.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.m_isBatch">
            true if contains a batch of SQL statements.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.originalSQLs">
            Batch of BatchSubStatements if in batch mode.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.currentBatch">
            Current batch statment in the interation.
        </member>
        <member name="F:DDInt.Parser.BaseSQL.tableInfo">
            Just holds the object created by BaseSQLParser.  
            
            See the documentation there.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.#ctor(System.String,System.Int32,System.Char,System.Boolean,DDInt.Common.CommonEscapeTranslator,DDInt.Parser.SQLDialect)">
            Constructor for single SQL statement.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.#ctor(System.String,DDInt.Parser.BaseSQL)">
            Constructor for single SQL statement.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.#ctor(DDInt.Parser.BaseSQL,System.Int32)">
            Constructor that copies everything except the processing level
        </member>
        <member name="M:DDInt.Parser.BaseSQL.#ctor(System.Char,System.Boolean,DDInt.Common.CommonEscapeTranslator,DDInt.Parser.SQLDialect)">
            Constructor to prepare for a batch of SQL statements.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.dumpTree">
            Prints the tree to System.out
        </member>
        <member name="M:DDInt.Parser.BaseSQL.processSQL">
            Builds the SQL tree and translates escapes.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.nextBatchStatement">
             Position to the next SQL statement in a batch.
            
             @return - true if moved to next, false if no more statements
        </member>
        <member name="M:DDInt.Parser.BaseSQL.isBatch">
            Returns true if contains a batch of SQL statements.
            If so, next() is used to interate through the batch.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.batchSize">
            Returns number of batch statements being contained
        </member>
        <member name="M:DDInt.Parser.BaseSQL.addToBatch(System.String,System.Int32)">
            Adds a statement to the batch of statements.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.clearBatch">
            Resets batch statement list.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getOriginal">
            Return SQL text originally specified by the application.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getVerb">
             Returns the VERB string.
            
             @return String - the SQL verb associated with original SQL.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getType">
             Get accessor for the "type" field.
            
             @return int - one of the SQL_ constants
        </member>
        <member name="M:DDInt.Parser.BaseSQL.isStatementSuitableForAutoGeneratedKeys">
             Determines if the statement is suitable for the return of auto-generated
             keys. To be suitable, the statement must be a single INSERT.
            
             @return true if statement is suitable for the return of auto-generated
             keys; false, otherwise.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.isCallEscapeStatement">
             Determines if statement is a call escape.
            
             @return true if statement is a call escape; false, otherwise.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getFormatted">
             Returns processed SQL.
            
             @return String - SQL that has (maybe) been massaged for execution
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getUpdateTableSpecification">
             Called to get the table specification for an update statement; that is
             UPDATE or INSERT.
            
             @return String - table name
             @return 'null'- not an update statement, or the table name could not
             be found/parsed.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getUpdateColumnSpecification(System.Int32)">
             Returns the name of the column being updated associated with the
             parameter specified.  If there is no column specification then the
             ordinal position of the parameter in the values list is returned.
            
             Note that most of the implementation of this method was written in
             terms of exisiting primitive-like methods.  Some of the called
             methods may not seem to fit the context of this method, but the
             implementations of the called methods perform the correct mechanics.
             Perhaps the primitive-like method names should change to reflect their
             general use.
            
             @param - int valueListParameterPosition - ordinal position of a
             parameter in a values list for an insert or update statement
            
             @return String - column name or ordinal parameter position
             @return null - if column name does not exist or cound not be found,
             and/or oridinal parameter position could not be located in the values
             list
        </member>
        <member name="M:DDInt.Parser.BaseSQL.buildSQLTree">
             Creates the SQL tree.
            
             @exception SQLException
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getParameterCount">
             Returns the number of parameter markers in a SQL statement using
             the SQLDialect in force
            
             @return int - parameter count
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getParameterCount(DDInt.Parser.SQLDialect)">
             Returns the number of parameter markers in a SQL statement using
             the specified SQLDialect.
            
             @return int - parameter count
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getStatementCount">
            Returns the number of statements recognized in the executing SQL
            
            Warning: whether or not a statement is properly recognized may be
            affected by the presence of native syntax.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.setParameter(System.Int32,System.String)">
             Changes the string value for a parameter marker
            
             @param index - zero based parameter
             @param value - new parameter marker value
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getStringPreceedingParameter(System.Int32)">
             Returns a string containing the string immediately preceeding
             the specified parameter marker. Returns a null object reference if:
                - nothing preceeds the specified parameter marker,
            
             @param index - zero based parameter
        </member>
        <member name="M:DDInt.Parser.BaseSQL.resultType">
             Determines if SQL returns a result set or an update count.
            
             Issues/Bugs:
            
             - Determining SQL type does not take into account that there may
               actually be more than one statement concatenated;
               e.g. "select * from foo select * from bar"
            
             @return bool - true if a select
                               false otherwise
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getCreateTableColumnSpecificationCount">
             Returns the number of columns definitions in a create table statement.
            
             Note this method MUST be called before calling
             get/setCreateTableColumnSpecification.
            
             @return int - number of columns, -1 if not a create table statement.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getCreateTableColumnSpecification(System.Int32)">
             Returns a ArrayList of column specification tokens.
            
             @param index - zero based index;
                            MUST be valid per getCreateTableColumnSpecificationCount
             @return ArrayList - contains tokenize values
        </member>
        <member name="M:DDInt.Parser.BaseSQL.setCreateTableColumnSpecification(System.Int32,System.String)">
             Sets the new column specification.
            
             @param index - zero based index;
                            MUST be valid per getCreateTableColumnSpecificationCount
             @param String - new column specification
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getFirstTopLevelParenExpListCount(DDInt.Parser.BaseSQLTreeNode,System.Collections.ArrayList)">
             Returns the number of list elements in the first top level paren expression.
            
             Note this method MUST be called before calling
             get/setFirstTopLevelParenExpListElement
            
             @param list - empty list that will be subsequently used to pass to
             related methods
            
             @return int - number of columns, -1 if not a create table statement.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getFirstTopLevelParenExpListElement(System.Collections.ArrayList,System.Int32)">
             Returns a vector of list elements in the first top level paren expression tokens.
            
             @param index - zero based index;
                            MUST be valid per getCreateTableColumnSpecificationCount
             @return ArrayList - contains tokenize values
        </member>
        <member name="M:DDInt.Parser.BaseSQL.setFirstTopLevelParenExpListElement(System.Collections.ArrayList,System.Int32,System.String)">
             Sets the new list element in the first top level paren expression.
            
             @param index - zero based index;
                            MUST be valid per getCreateTableColumnSpecificationCount
             @param String - new column specification
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getSelectColumnSpecificationCount">
             Returns the number of column definitions in a SELECT statement.
            
             Note that 1 will be returned if the column spec list is actually empty;
             e.g. "create table foo ()"
            
             Note this method MUST be called before calling
             get/setSelectColumnSpecification.
            
             @return int - number of columns, -1 if not a select statement or ill
             formed select statement
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getSelectColumnSpecification(System.Int32)">
             Returns a ArrayList of select column specification tokens.
            
             @param index - zero based index;
                            MUST be valid per getSelectColumnSpecificationCount
             @return ArrayList - contains tokenize values
        </member>
        <member name="M:DDInt.Parser.BaseSQL.setSelectColumnSpecification(System.Int32,System.String)">
             Sets the new select column specification.
            
             @param index - zero based index;
                            MUST be valid per getCreateTableColumnSpecificationCount
             @param String - new column specification
        </member>
        <member name="M:DDInt.Parser.BaseSQL.selectColumnSpecificationContainsValue(System.Collections.ArrayList,System.String)">
            Returns true if column specification contains a the given string
        </member>
        <member name="M:DDInt.Parser.BaseSQL.selectColumnSpecificationContainsNode(System.Collections.ArrayList,System.Int32)">
            Returns true if column specification contains a the given string
        </member>
        <member name="M:DDInt.Parser.BaseSQL.buildFromParts(System.Collections.ArrayList,System.String)">
        </member>
        <member name="M:DDInt.Parser.BaseSQL.getSingleTableFromSpecification">
            Returns table name if selecting from a single table, otherwise returns null
        </member>
        <member name="M:DDInt.Parser.BaseSQL.lookForSelectNodeType(System.Int32)">
            Returns true if a node of the given type is found in the tree.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasForReadOnly">
            Returns true if the sql contains a FOR READ ONLY clause; false,
            otherwise.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasForReadOnly(System.Boolean)">
            Used by the parser to record the presence of a FOR READ ONLY clause.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasForUpdate">
            Returns true if the sql contains a FOR UPDATE clause; false, otherwise.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasForUpdate(System.Boolean)">
            Used by the parser to record the presence of a FOR UPDATE clause.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasGroupBy">
            Returns true if contains a 'group by'
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasWhereClause">
            Returns true if contains a 'where' clause
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasHaving">
            Returns true if contains a 'having'
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasSetOperation">
            Returns true if contains a set operation; e.g. 'union'
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasOrderBy">
            Returns true if contains a 'order by'
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasAggregateOrParameterInSelectList(System.String[])">
            Returns true if the select list contains an aggregate function.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.hasSelectDistinct">
            Returns true if select is followed by the distinct keyword
        </member>
        <member name="M:DDInt.Parser.BaseSQL.containsParameterMarker(System.String,DDInt.Parser.SQLDialect)">
            		 * Guesses whether or not the statement contains parameter markers.
                     * 
                     * The scan is a guess because it doesn't take into consideration 
                     * delimited strings or comments.
        </member>
        <member name="M:DDInt.Parser.BaseSQL.containsEscape">
            Determines if the statement contains escapes.
        </member>
        <member name="T:DDInt.Parser.BaseSQL.BaseBatchSubStatement">
            Contains a SQL statment and its needed processing level.
        </member>
        <member name="T:DDInt.Parser.BaseSQLEscapeProcessor">
             Finds escapes in the SQL tree, sends them to the escape translator,
             and patches the translations back in.
            
             Note that nested escapes are handled by the escape parser, so they
             are not processed by this class as a separate escape.
        </member>
        <member name="T:DDInt.Parser.BaseSQLTreeTraversalVisitor">
            <summary>
            Summary description for BaseSQLTreeTraversalVisitor.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLEscapeProcessor.translator">
            Used to translate escapes.
        </member>
        <member name="F:DDInt.Parser.BaseSQLEscapeProcessor.escapeNode">
            Escape node that will be replaced with the translation.
        </member>
        <member name="F:DDInt.Parser.BaseSQLEscapeProcessor.whereNode">
            'where' node, if any, associated with the current escape
        </member>
        <member name="M:DDInt.Parser.BaseSQLEscapeProcessor.visit(DDInt.Parser.BaseSQLTreeNode,System.Int32)">
            If an escape node is visited, then translate and replace the escape
            sub-tree.
        </member>
        <member name="M:DDInt.Parser.BaseSQLEscapeProcessor.getWhereClause(DDInt.Parser.BaseSQLTreeNode)">
             Finds and returns the 'where' clause.
            
             Look up through the tree until the 'from' is
             found, then look at 'from' siblings until 'where' is found.
        </member>
        <member name="M:DDInt.Parser.BaseSQLEscapeProcessor.replaceEscape(System.String,System.String)">
            Updates the SQL tree with the translated escape.
        </member>
        <member name="T:DDInt.Parser.BaseSQLFromSpecificationGenerator">
            <summary>
            Summary description for BaseSQLFromSpecificationGenerator.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLFromSpecificationGenerator.objectsInSpecification">
            objects in the FROM specification
        </member>
        <member name="T:DDInt.Parser.BaseSQLListManipulator">
            <summary>
            Summary description for BaseSQLListManipulator.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLListManipulator.listElements">
            Contains the list elements.
            Even indices are index.
            Odd indices are nodes.
        </member>
        <member name="M:DDInt.Parser.BaseSQLListManipulator.setElement(System.Int32,System.String)">
             Sets the list element to the given value.
            
             This is done buy "emptying" this current list value nodes
             (but leaving them intact), creating a sub-tree out of the new value,
             and making this new sub-tree a child of the last node in the 
             original list.
        </member>
        <member name="T:DDInt.Parser.BaseSQLListPartManipulator">
            <summary>
            Summary description for BaseSQLListPartManipulator.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLListPartManipulator.listElementCount">
            Number of list elements.
            For example, there are two elements in the select list:
            select a as x, b as z from foo
        </member>
        <member name="F:DDInt.Parser.BaseSQLListPartManipulator.parenNestingLevel">
            Nesting level of the paren expressions
            For example:  ( A ( B ) )
                          A is at level 0, B is at level 1
        </member>
        <member name="F:DDInt.Parser.BaseSQLListPartManipulator.stopLevel">
            Level at which the LIST_PART is located, used to stop the traversal.
        </member>
        <member name="F:DDInt.Parser.BaseSQLListPartManipulator.selectListReplacement">
            If non-null, replace the select list with this string
        </member>
        <member name="T:DDInt.Parser.BaseSQLNodeLocator">
            <summary>
            Summary description for BaseSQLNodeLocator.
            </summary>
        </member>
        <member name="T:DDInt.Parser.BaseSQLParameterProcessor">
            <summary>
            Summary description for BaseSQLParameterProcessor.
            </summary>
        </member>
        <member name="T:DDInt.Parser.BaseSQLParenExpListManipulator">
            <summary>
            Summary description for BaseSQLParenExpListManipulator.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLParenExpListManipulator.parenNestingLevel">
            Nesting level of the paren expressions
            For example:  ( A ( B ) )
                          A is at level 0, B is at level 1
        </member>
        <member name="F:DDInt.Parser.BaseSQLParenExpListManipulator.listElementCount">
            Number of list elements.
            For example, there are two elements in the column list:
            create table foo (a int, b int)
        </member>
        <!-- Badly formed XML comment ignored for member "T:DDInt.Parser.BaseSQLParser" -->
        <member name="F:DDInt.Parser.BaseSQLParser.sqlProcessor">
             Used to record positions of certain UPDATE/INSERT statemet clauses.
            
             !!!REVISIT!!!
             Instead of recording positions of various clauses in the sqlProcessor,
             create a BaseSQLTreeNode nodes that encapsulate the meaning and search
             for it when processing the semantics of the statement.  For example,
             BaseSQLTreeNode.NODE_TABLE_NAME node could be used to identify an
             UPDATE statement's table.
            
             !!!REVISIT!!!
             Note that current check to see if sqlProcessor is null are no longer
             needed.  In the past replaced clauses were re-parsed (e.g., escape
             translations).  This is still true, but the parse level is always
             PROCESS_PARAMS, so no UPDATE/INSERT clauses are ever parsed.
        </member>
        <member name="F:DDInt.Parser.BaseSQLParser.scanner">
            Lexical analyzer.
        </member>
        <member name="F:DDInt.Parser.BaseSQLParser.nodeSubParse">
            Set by parsing methods to indicate the result of a sub parse
        </member>
        <member name="F:DDInt.Parser.BaseSQLParser.tableInfo">
            Each vector element is an array of two Objects.  The first object,
            element  [0], is the root node of the possibly qualfied table name.  
            The second object, element [1], will be the root node of the correlation 
            name.
            
            tableInfo will be maintained when PROCESS_TABLES is on, and will only
            process table information in the context of a 'FROM' clause.
            
            Note that instead of generic containers with casts, a new class for 
            describing the table, and a new class to contain the new table class 
            could be written.
        </member>
        <member name="F:DDInt.Parser.BaseSQLParser.processLevel">
            Specifices to what level the SQL needs to be parsed.
        </member>
        <member name="F:DDInt.Parser.BaseSQLParser.intoIsOptional">
            True if the "into" in an insert statement is optional
        </member>
        <member name="F:DDInt.Parser.BaseSQLParser.escapeTranslator">
            Used to indicate the type of escape parsing required.
        </member>
        <member name="F:DDInt.Parser.BaseSQLParser.m_sqlDialect">
            Used to indicate the dialect of SQL being parsed.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.#ctor(DDInt.Common.CommonEscapeTranslator,System.Int32,System.Boolean,DDInt.Parser.SQLDialect)">
            Constructor.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.setUp(DDInt.Parser.BaseSQL)">
            Setter of BaseExceptions.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parse(System.String,System.Char)">
             Parses the given SQL statement and returns the root
             node of the representative tree.
            
             @return BaseSQLTreeNode - root of the SQL tree if successfully parsed.
             @deprecated SQLException - fatal exception
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseSQL" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseStatement">
            		 * Parses the Statement non-terminal.
            		 *
            		 * Statement
            		 *     ::= SelectStatement
            		 *         NODE_STATEMENT_ROOT
            		 *         $1
            		 *
            		 *     ::= InsertStatement
            		 *         NODE_STATEMENT_ROOT
            		 *         $1
            		 *
            		 *     ::= UpdateStatement
            		 *         NODE_STATEMENT_ROOT
            		 *         $1
            		 *
            	     *     ::= CreateStatement
            		 *         NODE_STATEMENT_ROOT
            	     *         $1
            		 *
            	     *     ::= DeleteStatement
            	     *         NODE_STATEMENT_ROOT
            	     *         $1
            	     *
            		 *     ::= UnknownStatement
            		 *         NODE_STATEMENT_ROOT
            		 *         $1
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseStatementList">
             Parses the StatementList non-terminal.
            
             StatementList
                 ::= Statement StatementSeparator _EndOfStatementTerminal
                     $1 -> [$2] -> $3
            
                 ::= Statement StatementSeparator StatementList
                     $1 -> [$2] -> $3
            
                 ::= _EndOfStatementTerminal
                     $1
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseStatementSeparator" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseCreateStatement">
             Parses the CreateStatement non-terminal.
            
             CreateStatement
                 ::= _CREATE_TABLE AlmostAnything
                     NODE_CREATE_STATEMENT
                     $1 $2
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseSelectStatement">
             Parses the SelectStatement non-terminal.
            
             SelectStatement
                 ::= QueryExpression OrderByClause ForClause
                     NODE_SELECT_STATEMENT
                     $1 -> [$2] -> [$3]
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseQueryExpression">
             Parses the QueryExpression non-terminal.
            
             QueryExpression
                 ::= _SELECT List FromClause WhereClause GroupByClause HavingClause SetOperation
                     NODE_QUERY_EXP
                     $1 -> $2 -> [$3] -> $4 -> [$5] -> [$6] -> [$7]
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseDeleteStatement">
             Parses the DeleteStatement non-terminal.
            
             DeleteStatement
                 ::= _DELETE _FROM QualifiedName WhereClause
                     NODE_DELETE_STATEMENT
                     $1 -> $2 -> $3 -> $4
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseInsertStatement">
             Parses the InsertStatement non-terminal.
            
             InsertStatement
                 ::= _INSERT _INTO QualifiedName ColumnList _VALUES ParenthesizedExpression
                     NODE_INSERT_STATEMENT
                     $1 -> $2 -> $3 -> [$4] -> $5 -> $6
            
                 ::= _INSERT _INTO QualifiedName ColumnList SubQuery
                     NODE_INSERT_STATEMENT
                     $1 -> $2 -> $3 -> [$4] -> $5
            
                 ::= _INSERT _INTO QualifiedName ColumnList _DEFAULT _VALUES
                     NODE_INSERT_STATEMENT
                     $1 -> $2 -> $3 -> [$4] -> $5 -> $6
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseUpdateStatement">
             Parses the UpdateStatement non-terminal.
            
             UpdateStatement
                 ::= _UPDATE QualifiedName _SET List WhereClause
                     NODE_UPDATE_STATEMENT
                     $1 -> $2 -> $3 -> $4 -> $5
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseQualifiedName">
             Parses the QualifiedName non-terminal.
            
             QualifiedName
                 ::= _IdentifierOrUnknownKeyword(false) [ _Dot ... _IdentifierOrUnknownKeyword(false) ] ...
                     NODE_UNKNOWN
                     $1 -> [ $2 -> ... ]
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseUnknownStatement">
             Parses the UnknownStatement non-terminal.
            
             UnknownStatement
                 ::= UnknownStatementComponents
                     NODE_UNKNOWN_STATEMENT
                     $1
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseUnknownStatementComponents">
             Parses the UnknownStatementComponents non-terminal.
            
             UnknownStatementComponents
                 ::= _EndOfStatementTerminal
                     $1
            
                 ::= _Parameter UnknownStatementComponents
                     $1 -> $2
            
                 ::= Escape UnknownStatementComponents
                     $1 -> $2
            
                 ::= _AnyToken UnknownStatementComponents
                     $1 -> $2
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseList">
             Parses the List non-terminal.
            
             List
                 ::= AlmostAnything(true,false)
                     NODE_LIST_PART
                     $1
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseFromClause" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseWhereClause" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parsePredicate" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parsePredicateType">
             Parses the PredicateType non-terminal.
            
             PredicateType
            		::= ComparisonPredicate
             	::= BetweenPredicate
             	::= InPredicate
             	::= LikePredicate
             	::= ExisitsPredicate
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseComparisonPredicate">
             Parses the ComparisonPredicate non-terminal.
            
              ComparisonPredicate
             	::= ValueExpression CompOp ValueExpression
              
              CompOp
             	::= _Equal
             
             	::= _LessThan
             
             	::= _LessThanOrEqual
             
             	::= _GreaterThan
             
             	::= _GreaterThanEqual
             
             	::= _Unequal
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseBetweenPredicate">
             Parses the BetweenPredicate non-terminal.
            
              BetweenPredicate
             	::= ValueExpression BetweenExpression 
             		 ValueExpression _And ValueExpression 
             
             BetweenExpression
             	::= Not_opt _Between
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseGroupByClause" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseHavingClause" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseForClause" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseSetOperation" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseCorrespondingClause" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseByPart" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseSetOperationLastPart">
             Parses the SetOperationLastPart non-terminal.
            
             SetOperationLastPart
                 ::= QueryExpression
                     NODE_UNKNOWN
                     $1
            
                 ::= AlmostAnything(true,false)
                     NODE_UNKNOWN
                     $1
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseOrderByClause" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseAllPart" -->
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseColumnList" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseSetOperator">
             Parses the SetOperator non-terminal.
            
             SetOperator
                 ::= _UNION
                     $1
            
                 ::= _INTERSECT
                     $1
            
                 ::= _EXCEPT
                     $1
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseAlmostAnything(System.Boolean,System.Boolean,System.Object[])" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseParenthesizedExpression">
             Parses the ParenthesizedExpression non-terminal.
            
             ParenthesizedExpression
                 ::= _LeftParen AlmostAnything(false,true) _RightParen
                     NODE_PAREN_ROOT
                     $1 -> $2 -> $3
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseSubQuery">
             Parses the SubQuery non-terminal.
            
             SubQuery
                 ::= _LeftParen QueryExpression _RightParen
                     NODE_PAREN_ROOT
                     $1 -> $2 -> $3
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseEscape">
             Parses the Escape non-terminal.
            
             Escape
                 ::= CallEscape
                     $1
            
                 ::= FunctionEscape
                     $1
            
                 ::= OuterJoinEscape
                     $1
            
                 ::= TimeEscape
                     $1
            
                 ::= DateEscape
                     $1
            
                 ::= TimestampEscape
                     $1
            
                 ::= EscapeEscape
                     $1
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseTimeEscape">
             Parses the TimeEscape non-terminal.
            
             TimeEscape
                 ::= _LeftBrace _T _StringLiteral _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the TIME escape.
                     NODE_TIME_ESCAPE
                     $1 -> $2 -> 3 -> 4
            
                 ::= _LeftBrace _T RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 -> 3...
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseDateEscape">
             Parses the DateEscape non-terminal.
            
             DateEscape
                 ::= _LeftBrace _D _StringLiteral _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the DATE escape.
                     NODE_DATE_ESCAPE
                     $1 -> $2 -> 3 -> 4
            
                 ::= _LeftBrace _D RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 -> 3...
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseTimestampEscape">
             Parses the TimestampEscape non-terminal.
            
             TimestampEscape
                 ::= _LeftBrace _TS _StringLiteral _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the TIMESTAMP escape.
                     NODE_TIMESTAMP_ESCAPE
                     $1 -> $2 -> 3 -> 4
            
                 ::= _LeftBrace _TS RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 -> 3...
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseEscapeEscape">
             Parses the EscapeEscape non-terminal.
            
             EscapeEscape
                 ::= _LeftBrace _ESCAPE _StringLiteral _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the ESCAPE escape.
                     NODE_ESCAPE_ESCAPE
                     $1 -> $2 -> 3 -> 4
            
                 ::= _LeftBrace _ESCAPE RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 -> 3...
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseRemainingStringLiteralEscape(DDInt.Parser.BaseSQLTreeNode,System.Int32)" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseFunctionEscape">
             Parses the FunctionEscape non-terminal.
            
             FunctionEscape
                 ::= _LeftBrace _FN _ScalarFunctionName EscapeParameterList _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the FUNCTION escapes.
                     NODE_FUNCTION_ESCAPE
                     $1 -> $2 -> $3 -> $4 -> $5
            
                 ::= _LeftBrace _FN RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 -> $3...
            
             Unless full translation is needed, the sub-tree is marked NODE_UNKNOWN,
             since the it will not require further translation work.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseCallEscape">
             Parses the CallEscape non-terminal.
            
             CallEscape
                 ::= _LeftBrace _CALL QualifiedName EscapeParameterList _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the CALL_PROCEDURE escapes.
                     NODE_CALL_PROCEDURE_ESCAPE
                     $1 -> $2 -> $3 -> $4 -> $5
            
                 ::= _LeftBrace _CALL RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 -> $3...
            
                 ::= _LeftBrace _Parameter _EqualOperator _CALL QualifiedName EscapeParameterList _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the CALL_FUNCTION escapes.
                     NODE_CALL_FUNCTION_ESCAPE
                     $1 -> $2 -> $3 -> $4 -> $5 -> $6 -> $7
            
                 ::= _LeftBrace _Parameter _EqualOperator _CALL RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 -> $3 -> $4 -> $5...
            
             Common CallEscape endings are parsed via parseRemainingCallEscape.
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseRemainingCallEscape(DDInt.Parser.BaseSQLTreeNode,System.Int32)" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseOuterJoinEscape">
             Parses the OuterJoinEscape non-terminal.
            
             OuterJoinEscape
                 ::= _LeftBrace _OJ OuterJoin _RightBrace
                     // Reduction only valid if FULL_TRANSLATION_NEEDED
                     // is required for the OUTER_JOIN escapes.
                     NODE_OUTER_JOIN_ESCAPE
                     $1 -> $2 -> $3 -> $4
            
                 ::= _LeftBrace _OJ RestOfEscape
                     NODE_UNKNOWN
                     $1 -> $2 ->3...
            
             Unless full translation is needed, the sub-tree is marked NODE_UNKNOWN,
             since the it will not require further translation work.
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseOuterJoin" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseOuterJoinOrTableReference">
             Parses the OuterJoinOrTableReference non-terminal.
            
             OuterJoinOrTableReference
                 ::= OuterJoin
                     $1
            
                 ::= TableReference
                     $1
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseJoinType(DDInt.Parser.BaseSQLTreeNode)">
             Parses the JoinType non-terminal.
            
             JoinType
                 ::= _LEFT _OUTER _JOIN
                     NODE_LEFT_OUTER_JOIN_OP
                     $1 -> $2 -> $3
            
                 ::= _RIGHT _OUTER _JOIN
                     NODE_RIGHT_OUTER_JOIN_OP
                     $1 -> $2 -> $3
            
                 ::= _FULL _OUTER _JOIN
                     NODE_FULL_OUTER_JOIN_OP
                     $1 -> $2 -> $3
            
             The method updates the type of the node as well.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseTableReference">
             Parses the TableReference non-terminal.
            
             TableReference
                 ::= QualifiedName CorrelationName
                     NODE_TABLE_REFERENCE
                     $1 -> [$2]
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.lookAheadForVerboseJoinOutsideOJEscape">
            Looks ahead for certain join related keywords.
            
            The state of the parser is unaffected by
            this method.
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseCorrelationName" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseSearchCondition">
             Parses the SearchCondition non-terminal.
            
             SearchCondition
                 ::= AlmostAnything(true,false);
                     NODE_SEARCH_CONDITION
                     $1
            
             A search condition is everything up to the next ON keyword or
             until the end of the escape is encountered.
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseEscapeParameterList" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseEscapeParameters">
             Parses the EscapeParameters non-terminal.
            
             EscapeParameters
                 ::= EscapeParameter _Comma EscapeParameters
                     $1 -> $2 -> $3
            
                 ::= EscapeParameter
                     $1
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.parseEscapeParameter">
             Parses the EscapeParameter non-terminal.
            
             EscapeParameter
                 ::= EscapeParameterComponents
                     NODE_ESCAPE_PARAMETER
                     $1
            
             A parameter is everything up to the next comma or right paren.
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseEscapeParameterComponents" -->
        <member name="M:DDInt.Parser.BaseSQLParser.parseRestOfEscape(System.Int32)">
             Parses the RestOfEscape non-terminal.
            
             RestOfEscape
                 ::= _EndOfStatementTerminal
                     $1
            
                 ::= _RightBrace(translationNeeded)
                     $1
            
                 ::= Escape RestOfEscape(translationNeeded)
                     $1 -> $2
            
                 ::= _Parameter RestOfEscape(translationNeeded)
                     $1 -> $2
            
                 ::= _AnyToken RestOfEscape(translationNeeded)
                     $1 -> $2
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.parseParameter" -->
        <member name="M:DDInt.Parser.BaseSQLParser.matchGroupBy">
             Parses the GROUP BY terminals.
            
             _GROUP_BY
                 ::= TOKEN_ID_OR_KEYWORD("group") TOKEN_ID_OR_KEYWORD("by")
                     $1
                     $2
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchHavingTerminal">
             Matches the HAVING terminal.
            
             _HAVING
                 ::= TOKEN_ID_OR_KEYWORD("having")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchOrderByTerminal">
             Matches the ORDER BY terminals.
            
             _ORDER_BY
                 ::= TOKEN_ID_OR_KEYWORD("order") TOKEN_ID_OR_KEYWORD("by")
                     $1
                     $2
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchUnionTerminal">
             Matches the UNION terminals.
            
             _UNION
                 ::= TOKEN_ID_OR_KEYWORD("union")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchIntersectTerminal">
             Matches the INTERSECT terminals.
            
             _INTERSECT
                 ::= TOKEN_ID_OR_KEYWORD("intersect")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchExceptTerminal">
             Matches the EXCEPT terminal.
            
             _EXCEPT
                 ::= TOKEN_ID_OR_KEYWORD("except")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchByTerminal">
             Matches the BY terminal.
            
             _BY
                 ::= TOKEN_ID_OR_KEYWORD("by")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchCreateTable">
             Parses the CREATE TABLE terminals.
            
             _CREATE_TABLE
                 ::= TOKEN_ID_OR_KEYWORD("create") TOKEN_ID_OR_KEYWORD("table")
                     $1
                     $2
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchSelectTerminal">
             Matches the SELECT terminal.
            
             _SELECT
                 ::= TOKEN_ID_OR_KEYWORD("select")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchFromTerminal">
             Matches the FROM terminal.
            
             _FROM
                 ::= TOKEN_ID_OR_KEYWORD("from")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchWhereTerminal">
             Matches the WHERE terminal.
            
             _WHERE
                 ::= TOKEN_ID_OR_KEYWORD("where")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchNotTerminal">
             Matches the NOT terminal.
            
             _WHERE
                 ::= TOKEN_ID_OR_KEYWORD("not")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchNullTerminal">
             Matches the NULL terminal.
            
             _NULL
                 ::= TOKEN_ID_OR_KEYWORD("null")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchExistsTerminal">
             Matches the EXISTS terminal.
            
             _WHERE
                 ::= TOKEN_ID_OR_KEYWORD("exists")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchBetweenTerminal">
             Matches the BETWEEN terminal.
            
             _WHERE
                 ::= TOKEN_ID_OR_KEYWORD("between")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchLikeTerminal">
             Matches the LIKE terminal.
            
             _LIKE
                 ::= TOKEN_ID_OR_KEYWORD("like")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchInTerminal">
             Matches the IN terminal.
            
             _WHERE
                 ::= TOKEN_ID_OR_KEYWORD("in")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchAllTerminal">
             Matches the ALL terminal.
            
             _ALL
                 ::= TOKEN_ID_OR_KEYWORD("all")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchCorrespondingTerminal">
             Matches the CORRESPONDING terminal.
            
             _CORRESPONDING
                 ::= TOKEN_ID_OR_KEYWORD("corresponding")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchInsertTerminal">
             Matches the INSERT terminal.
            
             _INSERT
                 ::= TOKEN_ID_OR_KEYWORD("insert")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchDeleteTerminal">
             Matches the DELETE terminal.
            
             _DELETE
                 ::= TOKEN_ID_OR_KEYWORD("delete")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchSetTerminal">
             Matches the SET terminal.
            
             _SET
                 ::= TOKEN_ID_OR_KEYWORD("set")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchIntoTerminal">
             Matches the INTO terminal.
            
             _INTO
                 ::= TOKEN_ID_OR_KEYWORD("into")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchUpdateTerminal">
             Matches the UPDATE terminal.
            
             _UPDATE
                 ::= TOKEN_ID_OR_KEYWORD("update")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchValuesTerminal">
             Matches the VALUES terminal.
            
             _VALUES
                 ::= TOKEN_ID_OR_KEYWORD("values")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchDefaultTerminal">
             Matches the DEFAULT terminal.
            
             _VALUES
                 ::= TOKEN_ID_OR_KEYWORD("default")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchOnTerminal">
             Matches the ON terminal.
            
             _ON
                 ::= TOKEN_ID_OR_KEYWORD("ON")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchCrossTerminal">
             Matches the CROSS terminal.
            
             _CROSS
                 ::= TOKEN_ID_OR_KEYWORD("CROSS")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchInnerTerminal">
             Matches the INNER terminal.
            
             _CROSS
                 ::= TOKEN_ID_OR_KEYWORD("INNER")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchJoinTerminal">
             Matches the JOIN terminal.
            
             _CROSS
                 ::= TOKEN_ID_OR_KEYWORD("JOIN")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchUsingTerminal">
             Matches the USING terminal.
            
             _CROSS
                 ::= TOKEN_ID_OR_KEYWORD("USING")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchLeftTerminal">
             Matches the LEFT terminal.
            
             _LEFT
                 ::= TOKEN_ID_OR_KEYWORD("left")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchRightTerminal">
             Matches the RIGHT terminal.
            
             _RIGHT
                 ::= TOKEN_ID_OR_KEYWORD("right")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchFullTerminal">
             Matches the FULL terminal.
            
             _FULL
                 ::= TOKEN_ID_OR_KEYWORD("full")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchOuterTerminal">
             Matches the OUTER terminal.
            
             _FULL
                 ::= TOKEN_ID_OR_KEYWORD("OUTER")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchOuterJoinTerminal">
             Matches the OUTER JOIN terminals.
            
             _OUTER _JOIN
                 ::= TOKEN_ID_OR_KEYWORD("outer") TOKEN_ID_OR_KEYWORD("join")
                     $1
                     $2
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchOjTerminal(System.Int32)">
             Matches the OJ terminal.
            
             _OJ
                 ::= TOKEN_ID_OR_KEYWORD("OJ")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchCallTerminal">
             Matches the CALL terminal.
            
             _CALL
                 ::= TOKEN_ID_OR_KEYWORD("CALL")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchExtTerminal">
             Matches the EXT terminal.
            
             _EXT
                 ::= TOKEN_ID_OR_KEYWORD("EXT")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchFnTerminal(System.Int32)">
             Matches the FN terminal.
            
             _FN
                 ::= TOKEN_ID_OR_KEYWORD("FN")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchDTerminal(System.Int32)">
             Matches the D terminal.
            
             _D
                 ::= TOKEN_ID_OR_KEYWORD("D")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchTTerminal(System.Int32)">
            		 * Matches the T terminal.
            		 *
            		 * _T
            		 *     ::= TOKEN_ID_OR_KEYWORD("T")
            		 *         NODE_UNKNOWN
            
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchTsTerminal(System.Int32)">
             Matches the TS terminal.
            
             _TS
                 ::= TOKEN_ID_OR_KEYWORD("TS")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchEscapeTerminal">
             Matches the ESCAPE terminal.
            
             _ESCAPE
                 ::= TOKEN_ID_OR_KEYWORD("ESCAPE")
                     NODE_UNKNOWN
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.matchScalarFunctionNameTerminal" -->
        <member name="M:DDInt.Parser.BaseSQLParser.matchStringLiteralTerminal">
             Matches a string literal terminal.
            
             _StringLiteral
                 ::= TOKEN_STRING_LITERAL
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchIdentifierOrUnknownKeyword(System.Boolean)">
             Matches a delimited identifier, identifier, or keyword terminal.
            
             Parse modifier:
             bool ignoreKeyWords
            
             _IdentifierOrUnknownKeyword
                 ::= TOKEN_DELIMITED_ID
                     NODE_UNKNOWN
            
                 ::= TOKEN_ID_OR_KEYWORD
                     // Reduction only valid if ignoreKeyWords is true and
                     // the current token is any of the ones defined below.
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchUnknownTokenTerminal">
             Matches a unknown_token terminal.
            
             _UnknownToken
                 ::= TOKEN_UNKNOWN
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchTerminal(System.Int32,System.Int32,System.Boolean)">
            Matches a special character terminal.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchSemicolonTerminal">
             Matches the ';' terminal.
            
             _Semicolon
                 ::= TOKEN_SPECIAL_CHAR(";")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchEqualOperatorTerminal">
             Matches the '=' terminal.
            
             _EqualOperator
                 ::= TOKEN_SPECIAL_CHAR("=")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchCommaTerminal">
             Matches the ',' terminal.
            
             _Comma
                 ::= TOKEN_SPECIAL_CHAR(",")
                     NODE_COMMA
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchCompareOpTerminal">
            
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchDotTerminal">
             Matches a '.' terminal.
            
             _Dot
                 ::= TOKEN_SPECIAL_CHAR(".")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchLeftParenTerminal">
             Matches the '(' terminal.
            
             _LeftParen
                 ::= TOKEN_SPECIAL_CHAR("(")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchRightParenTerminal">
             Matches the ')' terminal.
            
             _RightParen
                 ::= TOKEN_SPECIAL_CHAR(")")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchLeftBraceTerminal(System.Int32)">
             Matches the '{' terminal.
            
             _LeftBrace
                 ::= TOKEN_SPECIAL_CHAR("{")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchRightBraceTerminal(System.Int32)">
             Matches the '}' terminal.
            
             _RightBrace
                 ::= TOKEN_SPECIAL_CHAR("}")
                     NODE_UNKNOWN
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchEndOfStatementTerminal">
             Matches the EOS terminal.
            
             _EndOfStatementTerminal
                 ::= TOKEN_END_OF_SQL
                     NODE_UNKNOWN
        </member>
        <!-- Badly formed XML comment ignored for member "M:DDInt.Parser.BaseSQLParser.matchAnyToken" -->
        <member name="M:DDInt.Parser.BaseSQLParser.matchKeywordTerminal(System.String,System.Boolean)">
            Matches any keywork terminal.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchWhiteSpaceOrComment">
            Matches a white_space terminal.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.matchAlmostAnyTokens(System.Int32[])">
             Matches all tokens up to a TOKEN_END_OF_SQL or any TOKEN_SPECIAL_CHAR
             whose value is identified in the specified exceptList.
            
             @return returns true if one or more tokens were matched; false,
             otherwise.
        </member>
        <member name="M:DDInt.Parser.BaseSQLParser.getEscapeTranslationNeeded(System.Int32)">
            Indirection to the escape translator in case one was not provided.
        </member>
        <member name="T:DDInt.Parser.BaseSQLPredicateParamProcessor">
            Extracts parameter metadata identifying information for all predicates
            
            Algorithm :
            
            - Make a pass through the tree gathering all param nodes
            
            - For each parameter node, search back up the tree towards the root 
            looking for nearest predicate ancestor if any - adding such predicates 
            to a list
            
            - For each predicate node, identify the part of the predicate that can 
            be used to describe the parameters contained in the predicate.   Each
            predicate type has specific logic/code for determing this.
            
            - Parameter metadata descriptions can be in two forms.  It can be a 
            sub query which produces a single value.  Or it can be "anything else".
            If its a sub query, then the sub query minus anything past the 'where'
            clause describes the parameter.  If it's not a sub query, then the 
            "anything else" is used as column description in a secondary select
            statement built from the parts of the enclosing select statement.
            
            If its a sub query, construct a new "where 0=1" select statement out
            of the sub query.
            
            If its "anything else" construct select statement the enclosing select
            as the basis, with the "anything else" part as the column definition.
            Again with a "where 0=1" clause. 
        </member>
        <member name="M:DDInt.Parser.BaseSQLPredicateParamProcessor.visit(DDInt.Parser.BaseSQLTreeNode,System.Int32)">
            If an escape node is visited, then translate and replace the escape
            sub-tree.
        </member>
        <member name="T:DDInt.Parser.BaseSQLScanner">
            Tokenizes SQL.
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.sql">
            SQL being tokenized.
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.stringLiteralDelimitor">
            Literal delimitor.
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.delimitedIdentifierDelimitorsBegin">
            Delimited Identifier Delimitor.
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.currentState">
            State object that will process the next char.
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.scanPosition">
            Current scan index in the SQL string.
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.nextToken">
            Token being built
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.cachedToken">
            Cached token always return from getToken method
        </member>
        <member name="F:DDInt.Parser.BaseSQLScanner.currentTokenValue">
            Current token being built.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.setup(System.String,System.Char,System.Char,DDInt.Parser.SQLDialect)">
             Sets up for use.
            
             @param SQL
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.getSQL">
             Returns the original SQL.
            
             @returns SQL
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.getNextToken">
             Returns the next token in the SQL.
            
             @return BaseSQLToken
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.setNextState(System.Int32)">
             Transition to another state.
            
             @param state - state constant
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.isValidFirstCharForIdentifierOrKeyword(DDInt.Parser.SQLDialect,System.Int32)">
             Returns true if the character is a valid first char for an identifier
             or keyword.
            
             @param char - character to test
             @returns bool - true if so, otherwise false.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.isValidCharForIdentifierOrKeyword(System.Int32)">
             Returns true if the character is a valid (middle or end) char for an identifier
             or keyword.
            
             @param char - character to test
             @returns bool - true if so, otherwise false.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.isWhiteSpace(System.Int32)">
             Returns true if the character is white space
            
             @param char - character to test
             @returns bool - true if so, otherwise false.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.isNonCommentRelatedSpecialCharacter(System.Int32)">
             Returns true if the character is a special character not already
             part of other token semantics.
            
             @param char - character to test
             @returns bool - true if so, otherwise false.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.setEndOfToken(System.Int32)">
            Signals that a token has been found and sets its type.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.isValidNativeParameterToken(DDInt.Parser.BaseSQLScanner)">
            This method checks to see if the currently tokenized value violates
            any native parameter name rules.
        </member>
        <member name="T:DDInt.Parser.BaseSQLScanner.BaseSQLScannerState">
            Base class that represents a scanner state.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerStartState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerCompareOpState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerMaybeCOrCPPCommentState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerCCommentState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerMaybeEndOfCCommentState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerMaybeSQLCommentState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerRestOfLineCommentState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerIDOrKeywordState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerDelimitedIDState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerMaybeEndOfDelimitedIDState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerStringLiteralState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerMaybeEndOfStringLiteralState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerUnknownState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLWhiteSpaceState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLBuildingWrapperKeywordState.initialize">
            Called when transitioning to 'this' state
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLBuildingWrapperKeywordState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLAddingWrapperContentsState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerMaybeColonParamState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerColonParamState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="M:DDInt.Parser.BaseSQLScanner.BaseSQLScannerAtParamState.processNextChar(DDInt.Parser.BaseSQLScanner)">
             Processes a character.
            
             May eat the character, add it to the current token,
             and/or cause a state transition.
            
             @param nextChar - (obvious)
             @param scanner - used to add to current token, and/or cause a transition.
        </member>
        <member name="T:DDInt.Parser.BaseSQLStringGenerator">
            <summary>
            Summary description for BaseSQLStringGenerator.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLStringGenerator.findVerbOnly">
            If true then the generator quits after the verb is found.
            If a "create" statement is found then both "create" and the next
            word is returned, otherwise just the first word is returned.
        </member>
        <member name="F:DDInt.Parser.BaseSQLStringGenerator.whereZeroEqualOne">
            If true then the generator generates "where 0 = 1" for 
            "where" clauses
        </member>
        <member name="T:DDInt.Parser.BaseSQLToken">
            <summary>
            Summary description for BaseSQLToken.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLToken.m_value">
            Token string value.
        </member>
        <member name="F:DDInt.Parser.BaseSQLToken.m_type">
            One of the BaseSQLScanner.TOKEN_ constants.
        </member>
        <member name="T:DDInt.Parser.BaseSQLTreeNode">
            <summary>
            Summary description for BaseSQLTreeNode.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_ESCAPE_ROOT">
            sub-tree contains escape, with possibly nested escapes
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_TIME_ESCAPE">
            sub-tree contains time escape
            Example:  {t 'hh:mm:ss'}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_DATE_ESCAPE">
            sub-tree contains time escape
            Example:  {d 'yyyy-mm-dd'}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_TIMESTAMP_ESCAPE">
            sub-tree contains time escape
            Example:  {ts 'yyyy-mm-dd hh:mm:ss.ffffff'}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_FUNCTION_ESCAPE">
            sub-tree contains time escape
            Example:  {fn abs(x)}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_OUTER_JOIN_ESCAPE">
            sub-tree contains outer join escape
            Example:  {oj tab1 LEFT OUTER JOIN tab2 ON cond}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_CALL_PROCEDURE_ESCAPE">
            sub-tree contains call procedure escape
            Example:  {call EMPS_IN_DEPT (parm1, parm2)}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_CALL_FUNCTION_ESCAPE">
            sub-tree contains call function escape
            Example:  {? = call EMPS_IN_DEPT (parm1, parm2)}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_ESCAPE_ESCAPE">
            sub-tree contains escape escape
            {escape 'c'}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_EXTENSION_ESCAPE">
            sub-tree contains extension escape
            {ext RowSetSize 5}
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_ROOT">
            root node of the entire tree
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_STATEMENT_ROOT">
            sub-tree contains a statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_SELECT_STATEMENT">
            sub-tree contains a select statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_INSERT_STATEMENT">
            sub-tree contains a select statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_UPDATE_STATEMENT">
            sub-tree contains a select statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_UNKNOWN_STATEMENT">
            sub-tree contains an unknown statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_PAREN_ROOT">
            sub-tree contains contents of ( )
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_FROM_CLAUSE">
            sub-tree contains the from clause
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_WHERE_CLAUSE">
            sub-tree contains the where clause
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_GROUPBY_CLAUSE">
            sub-tree contains the group by clause
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_SETOP_ROOT">
            sub-tree contains a set operation
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_ORDERBY_CLAUSE">
            sub-tree contains the order by clause
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_HAVING_CLAUSE">
            sub-tree contains the having clause
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_LIST_PART">
            sub-tree contains part of a comma separated list
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_STATEMENT_SEPARATOR">
            sub-tree contains a statement separator.
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_UNKNOWN">
            node has no special semantic meaning
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_ANSI_PARAM">
            node contains a parameter marker
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_COMMA">
            node contains a comma
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_WHITESPACE">
            node contains whitespace
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_COMMENT">
            node contains a comment
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_QUERY_EXP">
            sub-tree contains a query expression
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_TABLE_REFERENCE">
            sub-tree contains table reference
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_ESCAPE_PARAMETER">
            sub-tree contains table reference
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_LEFT_OUTER_JOIN_OP">
            sub-tree contains left outer join escape
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_RIGHT_OUTER_JOIN_OP">
            sub-tree contains right outer join escape
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_FULL_OUTER_JOIN_OP">
            sub-tree contains full outer join escape
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_SEARCH_CONDITION">
            sub-tree contains outer join escape search condition
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_CREATE_TABLE_STATEMENT">
            sub-tree contains a create statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_FOR_CLAUSE">
            sub-tree contains a for clause
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_PREDICATE_ROOT">
            sub-tree contains a predicate
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_PREDICATE_TYPE_ROOT">
            sub-tree contains a predicate type
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_COMPARISON_PREDICATE_ROOT">
            sub-tree contains a predicate type
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_BETWEEN_PREDICATE_ROOT">
            sub-tree contains a predicate type
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_IN_PREDICATE_ROOT">
            sub-tree contains a predicate type
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_LIKE_PREDICATE_ROOT">
            sub-tree contains a predicate type
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_VALUE_EXPRESSION_ROOT">
            sub-tree contains a row value constructor
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_DELETE_STATEMENT">
            sub-tree contains a select statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_AT_PARAM">
            sub-tree contains a select statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.NODE_COLON_PARAM">
            sub-tree contains a select statement
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.m_type">
            One of the type constants defined by this class
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.m_value">
            Value of the node 
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.m_parent">
            Parent
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.m_rightSibling">
            Sibling to the right
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeNode.m_leftMostChild">
            Left-most child
        </member>
        <member name="M:DDInt.Parser.BaseSQLTreeNode.#ctor(System.Int32)">
            Constructor.
        </member>
        <member name="M:DDInt.Parser.BaseSQLTreeNode.#ctor(System.Int32,System.String)">
            Constructor.
        </member>
        <member name="M:DDInt.Parser.BaseSQLTreeNode.setParent(DDInt.Parser.BaseSQLTreeNode)">
            Sets the parent.
        </member>
        <member name="M:DDInt.Parser.BaseSQLTreeNode.getParent">
            Gets the parent.
        </member>
        <member name="M:DDInt.Parser.BaseSQLTreeNode.setNextChild(DDInt.Parser.BaseSQLTreeNode)">
            Set next child
        </member>
        <member name="M:DDInt.Parser.BaseSQLTreeNode.getPrevious">
            Returns the left sibling, or the parent if there is no left sibling.
        </member>
        <member name="T:DDInt.Parser.BaseSQLTreeNodeSearch">
            <summary>
            Summary description for BaseSQLTreeNodeSearch.
            </summary>
        </member>
        <member name="M:DDInt.Parser.BaseSQLTreeNodeSearch.search(DDInt.Parser.BaseSQLTreeNode,System.Int32)">
            objects in the FROM specification
        </member>
        <member name="T:DDInt.Parser.BaseSQLTreeTraverser">
            <summary>
            Summary description for BaseSQLTreeTraverser.
            </summary>
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeTraverser.level">
            Current tree level.
        </member>
        <member name="F:DDInt.Parser.BaseSQLTreeTraverser.visitor">
            Callback for visit action.
        </member>
        <member name="T:DDInt.Parser.BaseSQLTreePreOrderTraverser">
            <summary>
            Summary description for BaseSQLTreePreOrderTraverser.
            </summary>
        </member>
    </members>
</doc>
