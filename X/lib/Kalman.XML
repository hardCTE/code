<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kalman</name>
    </assembly>
    <members>
        <member name="M:Kalman.QQWryLocator.GetCountry(System.Int64,System.Int32,System.String@)">
            <summary>
            Gets the country.
            </summary>
            <param name="endIpOff">The end ip off.</param>
            <param name="countryFlag">The country flag.</param>
            <param name="local">The local.</param>
            <returns>country</returns>
        </member>
        <member name="T:Kalman.Utilities.LunarDateUtil">
            <summary>
            农历日期结构。
            </summary>
            <remarks>
            本结构采用词典法实现：有效区间：1901年1月1日至2100年12月31日。
            </remarks>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.#ctor(System.DateTime)">
            <summary>
            按公历日期构造。
            </summary>
            <param name="date">公历日期。</param>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            按农历日期构造。
            </summary>
            <param name="year">农历年。</param>
            <param name="month">农历月。</param>
            <param name="day">农历日。</param>
            <param name="isLeap">是否农历闰月。</param>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.DateChanged">
            <summary>
            公历日期变化，计算农历日期。
            </summary>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.LunarChanged">
            <summary>
            农历日期变化，计算公历日期。
            </summary>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.GetWorkingDays(System.DateTime)">
            <summary>
            获取到指定日期的工作日天数。
            </summary>
            <param name="day">指定目标日期。</param>
            <returns>
            返回从当前日期开始到指定目标日期间的工作日天数。
            如果指定的目标日期则返回负数。</returns>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.GetWorkingDateAfter(System.Int32)">
            <summary>
            获取指定工作日后的日期。
            </summary>
            <param name="days">工作日数。</param>
            <returns>
            获取指定工作日后的日期。
            如果工作日数为负数，则返回指定工作日之前的日期。
            </returns>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.GetWorkingDateBefore(System.Int32)">
            <summary>
            获取指定工作日前的日期。
            </summary>
            <param name="days">工作日数。</param>
            <returns>
            获取指定工作日前的日期。
            如果工作日数为负数，则返回指定工作日之后的日期。
            </returns>
        </member>
        <member name="M:Kalman.Utilities.LunarDateUtil.GetSolarTeamDays(System.Int32,System.Int32)">
            <summary>
            获取指定年月节气日期表。
            </summary>
            <param name="year">年。</param>
            <param name="month">月。</param>
            <returns>返回日期数集合。</returns>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.Date">
            <summary>
            获取公历日期。
            </summary>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.Year">
            <summary>
            获取农历年。
            </summary>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.Month">
            <summary>
            获取农历月。
            </summary>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.Day">
            <summary>
            获取农历日。
            </summary>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.YearName">
            <summary>
            获取农历年名。
            </summary>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.MonthName">
            <summary>
            获取农历月名。
            </summary>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.DayName">
            <summary>
            获取农历日名。
            </summary>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.SolarName">
            <summary>
            获取节气名。
            </summary>
            <remarks>
            如果当日无节气，则返回空串。
            </remarks>
        </member>
        <member name="P:Kalman.Utilities.LunarDateUtil.IsHoliday">
            <summary>
            获取是否为公休日。
            </summary>
            <remarks>
            公休日包括:每周六,每周日,元旦公休,春节黄金周,五一黄金周,国庆黄金周。<b></b>
            计算黄金周时自动按最均匀补休算法处理,仅供参考。
            </remarks>
        </member>
        <member name="T:Kalman.Utilities.LunarDateUtil.IndependentReversingDays">
            <summary>
            处理跨年的翻转日
            </summary>
        </member>
        <member name="T:Kalman.Utilities.LunarDateUtil.DayArray">
            <summary>
            日期数组
            </summary>
            <remarks>
            日期数组保存多个日期，通过优化的算法
            快速计算日期所在的序号，以及每个序号对应的日期
            </remarks>
        </member>
        <member name="T:Kalman.Utilities.LunarDateUtil.SolarTeamDayArray">
            <summary>
            节气日期数组
            </summary>
        </member>
        <member name="T:Kalman.Utilities.LunarDateUtil.WorkingDayArray">
            <summary>
            工作日数组
            </summary>
        </member>
        <member name="T:Kalman.Utilities.CurrencyUtil">
            <summary>
            金额结构。
            </summary>
            <remarks>
            正确填写票据和结算凭证的基本规定
            <br></br>
            银行、单位和个人填写的各种票据和结算凭证是办理支付结算和现金收付的重要依据，
            直接关系到支付结算的准确、及时和安全。票据和结算凭证是银行、单位和个人凭以记载账
            务的会计凭证，是记载经济业务和明确经济责任的一种书面证明。因此，填写票据和结算凭
            证，必须做到标准化、规范化，要要素齐全、数字正确、字迹清晰、不错漏、不潦草，防止
            涂改。
            <br></br>
            一、中文大写金额数字应用正楷或行书填写，如壹（壹）、贰（贰）、叁、肆（肆）、
            伍（伍）、陆（陆）、柒、捌、玖、拾、佰、仟、万（万）、亿、元、角、分、零、整（
            正）等字样。不得用一、二（两）、三、四、五、六、七、八、九、十、念、毛、另（或0）
            填写，不得自造简化字。如果金额数字书写中使用繁体字，如貳、陸、億、萬、圓的，也
            应受理。
            <br></br>
            二、中文大写金额数字到“元”为止的，在“元”之后，应写“整”（或“正”）字，
            在“角”之后可以不写“整”（或“正”）字。大写金额数字有“分”的，“分”后面不
            写“整”（或“正”）字。
            <br></br>
            三、中文大写金额数字前应标明“人民币”字样，大写金额数字应紧接“人民币”字
            样填写，不得留有空白。大写金额数字前未印“人民币”字样的，应加填“人民币”三字。
            在票据和结算凭证大写金额栏内不得预印固定的“仟、佰、拾、万、仟、伯、拾、元、角、
            分”字样。
            <br></br>
            四、阿拉伯小写金额数字中有“0”时，中文大写应按照汉语语言规律、金额数字构
            成和防止涂改的要求进行书写。举例如下：
            <br></br>
            （一）阿拉伯数字中间有“O”时，中文大写金额要写“零”字。如￥1，409．50，
            应写成人民币壹仟肆佰零玖元伍角。
            <br></br>
            （二）阿拉伯数字中间连续有几个“0”时，中文大写金额中间可以只写一个“零”
            字。如￥6，007．14，应写成人民币陆仟零柒元壹角肆分。
            <br></br>
            （三）阿拉伯金额数字万位或元位是“0”，或者数字中间连续有几个“0”，万位、
            元位也是“0’，但千位、角位不是“0”时，中文大写金额中可以只写一个零字，也可
            以不写“零”字。如￥1，680．32，应写成人民币壹仟陆佰捌拾元零叁角贰分，或者写
            成人民币壹仟陆佰捌拾元叁角贰分；又如￥107，000．53，应写成人民币壹拾万柒仟元
            零伍角叁分，或者写成人民币壹拾万零柒仟元伍角叁分。
            <br></br>
            （四）阿拉伯金额数字角位是“0”，而分位不是“0”时，中文大写金额“元”后
            面应写“零”字。如￥16，409.02，应写成人民币壹万陆仟肆佰零玖元零贰分；又如
            ￥325．04，应写成人民币叁佰贰拾伍元零肆分。
            <br></br>
            五、阿拉伯小写金额数字前面，均应填写入民币符号“￥”（或草写：）。阿拉伯
            小写金额数字要认真填写，不得连写分辨不清。
            <br></br>
            六、票据的出票日期必须使用中文大写。为防止变造票据的出禀日期，在填写月、
            日时，月为壹、贰和壹拾的，日为壹至玖和壹拾、贰拾和叁抬的，应在其前加“零”；
            日为抬壹至拾玖的，应在其前加“壹”。如1月15日，应写成零壹月壹拾伍日。再如
            10月20日，应写成零壹拾月零贰拾日。
            <br></br>
            七、票据出票日期使用小写填写的，银行不予受理。大写日期未按要求规范填写的，
            银行可予受理，但由此造成损失的，由出票入自行承担。
            <br></br>
            本算法遵守以上正确填写票据和结算凭证的基本规定，但尽可能短，即：可以不写“零”的地方一律不写“零”
            <br></br>
            考虑到有可能“人民币”字样已印在纸样上，本函数的返回结果中将不出现
            </remarks>
        </member>
        <member name="M:Kalman.Utilities.CurrencyUtil.#ctor(System.Double)">
            <summary>
            用金额值构造金额结构。
            </summary>
            <param name="currency">货币金额值。</param>
        </member>
        <member name="M:Kalman.Utilities.CurrencyUtil.ToString">
            <summary>
            获取大写金额字符串。
            </summary>
            <returns>返回大写货币金额字符串。</returns>
        </member>
        <member name="M:Kalman.Utilities.CurrencyUtil.ToChineseCurrencyString">
            <summary>
            获取中文大写金额。
            </summary>
            <returns>返回金额大写串。</returns>
        </member>
        <member name="M:Kalman.Utilities.CurrencyUtil.ToChineseCurrencyString(System.Double)">
            <summary>
            获取指定金额值的中文大写金额。
            </summary>
            <param name="value">金额。</param>
            <returns>返回金额大写。</returns>
        </member>
        <member name="P:Kalman.Utilities.CurrencyUtil.Value">
            <summary>
            获取当前金额结构的金额值。
            </summary>
        </member>
        <member name="T:Kalman.Remoting.ClientConfig">
            <summary>
            客户端配置，每个Client对应一个目标Host
            </summary>
        </member>
        <member name="M:Kalman.Remoting.ClientConfig.AddHost(Kalman.Remoting.Host)">
            <summary>
            加入一个Remoting宿主
            </summary>
            <param name="host"></param>
        </member>
        <member name="P:Kalman.Remoting.ClientConfig.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Kalman.Remoting.ClientConfig.DefaultHost">
            <summary>
            默认Remoting宿主
            </summary>
        </member>
        <member name="P:Kalman.Remoting.ClientConfig.LBEnabled">
            <summary>
            获取或设置是否启用负载均衡
            </summary>
        </member>
        <member name="P:Kalman.Remoting.ClientConfig.PollingInterval">
            <summary>
            获取或设置Remoting宿主轮询时间间隔
            </summary>
        </member>
        <member name="P:Kalman.Remoting.ClientConfig.HostCollection">
            <summary>
            Remoting宿主集合
            </summary>
        </member>
        <member name="T:Kalman.Remoting.ChannelType">
            <summary>
            通道类型枚举
            </summary>
        </member>
        <member name="F:Kalman.Remoting.ChannelType.TCP">
            <summary>
            Tcp Channel
            </summary>
        </member>
        <member name="F:Kalman.Remoting.ChannelType.HTTP">
            <summary>
            Http Channel
            </summary>
        </member>
        <member name="F:Kalman.Remoting.ChannelType.IPC">
            <summary>
            Ipc Channel
            </summary>
        </member>
        <member name="T:Kalman.PdmParser.PDObject">
            <summary>
            PowerDesinger物理模型对象基类
            </summary>
        </member>
        <member name="M:Kalman.PdmParser.PDObject.AddUnparsedNode(System.Xml.XmlNode)">
            <summary>
            添加未解析节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:Kalman.PdmParser.PDObject.GetUnparsedNode(System.String)">
            <summary>
            获取未解析节点
            </summary>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.PdmParser.PDObject.GetUnparsedNodeList">
            <summary>
            获取未解析节点列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kalman.PdmParser.PDObject.Model">
            <summary>
            所属模型对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDPackage.Parent">
            <summary>
            父包对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDPackage.ChildrenList">
            <summary>
            子包列表
            </summary>
        </member>
        <member name="T:Kalman.Logging.Targets.ConsoleTarget">
            <summary>
            将日志输出到控制台
            </summary>
        </member>
        <member name="T:Kalman.Logging.ITarget">
            <summary>
            Logger target.
            </summary>
        </member>
        <member name="M:Kalman.Logging.ITarget.LoadConfig(Kalman.Logging.TargetConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <exception cref="T:System.InvalidOperationException">配置已经被加载</exception>
            <exception cref="T:System.ArgumentNullException">参数<c>config</c> 不能为空</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">配置无法正确加载</exception>
        </member>
        <member name="M:Kalman.Logging.ITarget.Write(Kalman.Logging.LogEntry)">
            <summary>
            写日志实体
            </summary>
        </member>
        <member name="P:Kalman.Logging.ITarget.Name">
            <summary>
            获取或设置Target名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.ITarget.Formatter">
            <summary>
            获取或设置格式化器
            </summary>
        </member>
        <member name="M:Kalman.Logging.Targets.ConsoleTarget.LoadConfig(Kalman.Logging.TargetConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <exception cref="T:System.InvalidOperationException">配置已经被加载</exception>
            <exception cref="T:System.ArgumentNullException">参数<c>config</c> 不能为空</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">配置无法正确加载</exception>
        </member>
        <member name="M:Kalman.Logging.Targets.ConsoleTarget.Write(Kalman.Logging.LogEntry)">
            <summary>
            写日志实体
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.ConsoleTarget.Name">
            <summary>
            获取或设置Target名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.ConsoleTarget.Formatter">
            <summary>
            获取或设置格式化器
            </summary>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SOView">
            <summary>
            视图架构对象
            </summary>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SOBase">
            <summary>
            架构对象基类
            </summary>
        </member>
        <member name="M:Kalman.Data.SchemaObject.SOBase.SetValue(System.String,System.Object)">
            <summary>
            设置扩展属性
            若指定属性不存在，则添加该属性，若指定属性已存在，则修改该属性
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Kalman.Data.SchemaObject.SOBase.GetValue(System.String)">
            <summary>
            获取扩展属性
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOBase.Database">
            <summary>
            获取所属数据库对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOBase.Name">
            <summary>
            用来标识对象的名称
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOBase.FullName">
            <summary>
            完整名称，比如"[dbo].[user]"
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOBase.Comment">
            <summary>
            对象的注释信息
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTableViewBase.Database">
            <summary>
            获取所属数据库对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTableViewBase.Parent">
            <summary>
            获取或设置父对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTableViewBase.Owner">
            <summary>
            获取或设置对象所有者
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTableViewBase.ColumnList">
            <summary>
            获取列列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTableViewBase.IndexList">
            <summary>
            获取索引列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTableViewBase.SqlText">
            <summary>
            获取Sql脚本
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOView.FullName">
            <summary>
            获取完整名称
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOView.SchemaName">
            <summary>
            获取或设置所属架构名称，SqlServer2005+特有属性
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOView.ColumnList">
            <summary>
            获取或设置列列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOView.IndexList">
            <summary>
            获取或设置视图列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOView.SqlText">
            <summary>
            获取或设置表Sql脚本
            </summary>
        </member>
        <member name="T:Kalman.Data.Database">
            <summary>
            抽象数据库类
            </summary>
        </member>
        <member name="F:Kalman.Data.Database._DbProviderFactory">
            <summary>
            数据库架构
            </summary>
        </member>
        <member name="M:Kalman.Data.Database.#ctor(System.String)">
            <summary>
            构造函数，默认使用Sql Server数据提供程序
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:Kalman.Data.Database.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            构造函数，指定数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
            <param name="dbProviderFactory"></param>
        </member>
        <member name="M:Kalman.Data.Database.#ctor(System.String,System.String)">
            <summary>
            构造函数，指定数据提供程序固定名称，用于创建数据提供程序工厂实例
            </summary>
            <param name="providerInvariantName">数据提供程序固定名称，用来标志和调用数据提供程序</param>
            <param name="connectionString"></param>
        </member>
        <member name="M:Kalman.Data.Database.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name">数据提供程序名称</param>
            <param name="description">数据提供程序说明</param>
            <param name="invariantName">数据提供程序固定名称，用来标志和调用数据提供程序</param>
            <param name="assemblyQualifiedName">数据提供程序所属程序集的限定名，如</param>
            <param name="connectionString">数据库连接字符串</param>
        </member>
        <member name="M:Kalman.Data.Database.BuildParameterName(System.String)">
            <summary>
            为当前数据库生成一个带前缀的参数名
            </summary>
            <param name="name">不带前缀的参数名</param>
        </member>
        <member name="M:Kalman.Data.Database.GetDataAdapter">
            <summary>
            Get a DbDataAdapter with Standard update behavior.
            </summary>
        </member>
        <member name="M:Kalman.Data.Database.GetParameterValue(System.Data.Common.DbCommand,System.String)">
            <summary>
            获取参数值
            </summary>
            <param name="command">包含参数的DbCommand对象</param>
            <param name="name">参数名称</param>
            <returns>返回当前参数的值</returns>
        </member>
        <member name="M:Kalman.Data.Database.GetSqlStringCommand(System.String)">
            <summary>
            为SQL查询创建一个DbCommand对象实例
            </summary>
        </member>
        <member name="M:Kalman.Data.Database.GetStoredProcCommand(System.String)">
            <summary>
            为指定的存储过程创建一个DbCommand对象实例
            </summary> 
        </member>
        <member name="M:Kalman.Data.Database.GetStoredProcCommand(System.String,System.Object[])">
            <summary>
            为指定的存储过程创建一个DbCommand对象实例
            </summary>   
        </member>
        <member name="M:Kalman.Data.Database.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
            <summary>
            判断DbCommand的参数个数是否与值数组的长度一致
            </summary>
        </member>
        <member name="M:Kalman.Data.Database.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
            <summary>
            Sets the RowUpdated event for the data adapter.
            </summary>
            <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter"/> to set the event.</param>
        </member>
        <member name="M:Kalman.Data.Database.UserParametersStartIndex">
            <summary>
            返回参数的开始索引，默认0
            </summary>
        </member>
        <member name="P:Kalman.Data.Database.DbProviderFactory">
            <summary>
            获取数据提供程序工厂实例
            </summary>
        </member>
        <member name="P:Kalman.Data.Database.DatabaseType">
            <summary>
            获取数据库类型
            </summary>
        </member>
        <member name="P:Kalman.Data.Database.ConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:Kalman.Data.Database.CurrentDatabaseName">
            <summary>
            获取或设置已切换的当前数据库名称
            </summary>
        </member>
        <member name="T:Kalman.Data.Database.ConnectionWrapper">
            <summary>
            包装DbConnection对象的类
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.FirebirdDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            构造函数，指定数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
            <param name="dbProviderFactory"></param>
        </member>
        <member name="M:Kalman.Data.DbProvider.FirebirdDatabase.#ctor(System.String)">
            <summary>
            构造函数，指定数据提供程序固定名称，用于创建数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:Kalman.ConfigHandler">
            <summary>
            Kalman框架组件通用配置处理类，返回配置节XML字符串给具体的组件配置类解析
            </summary>
        </member>
        <member name="T:Kalman.Collections.SynchronizedQueue`1">
            <summary>
            Represents a first-in, first-out synchronized collection of objects.
            </summary>
            <typeparam name="T">Specifies the type of elements in the queue.</typeparam>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.#ctor">
            <summary>
            Initializes a new instance of the Queue class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.#ctor(System.Collections.Generic.ICollection{`0})">
            <summary>
            Initializes a new instance of the Queue class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new Queue.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Queue class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The initial number of elements that the Queue can contain.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.Clear">
            <summary>
            Removes all objects from the Queue.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.Contains(`0)">
            <summary>
            Determines whether an element is in the Queue.
            </summary>
            <param name="item">The object to locate in the Queue. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns><b>true</b> if item is found in the Queue; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the Queue elements to an existing one-dimensional Array, starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from Queue. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.Dequeue">
            <summary>
            Removes and returns the object at the beginning of the Queue.
            </summary>
            <returns>The object that is removed from the beginning of the Queue.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.Enqueue(`0)">
            <summary>
            Adds an object to the end of the Queue.
            </summary>
            <param name="item">The object to add to the Queue. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the Queue.
            </summary>
            <returns>An Queue.Enumerator for the Queue.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.Peek">
            <summary>
            Returns the object at the beginning of the Queue without removing it.
            </summary>
            <returns>The object at the beginning of the Queue.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.ToArray">
            <summary>
            Copies the Queue elements to a new array.
            </summary>
            <returns>A new array containing elements copied from the Queue.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.TrimExcess">
            <summary>
            Sets the capacity to the actual number of elements in the Queue, if that number is less than 90 percent of current capacity.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begin.</param>
        </member>
        <member name="P:Kalman.Collections.SynchronizedQueue`1.Count">
            <summary>
            Gets the number of elements contained in the Queue.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedQueue`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedQueue`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.PagingListModel`1">
            <summary>
            可分页列表MVC模型类
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.ListModel`1">
            <summary>
            列表MVC模型类
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.ModelBase">
            <summary>
            MVC模型基类
            </summary>
        </member>
        <member name="M:Kalman.Web.MVC.Model.ModelBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Web.MVC.Model.ModelBase.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="errCode">错误代码，一般将0作为成功的返回代码</param>
        </member>
        <member name="M:Kalman.Web.MVC.Model.ModelBase.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="errCode">错误代码，一般将0作为成功的返回代码</param>
            <param name="message">返回消息内容</param>
        </member>
        <member name="M:Kalman.Web.MVC.Model.ModelBase.#ctor(System.Int32,System.String,System.String)">
            <summary>
             
            </summary>
            <param name="errCode">错误代码，一般将0作为成功的返回代码</param>
            <param name="message">返回消息内容</param>
            <param name="redirectURL">跳转地址Url</param>
        </member>
        <member name="M:Kalman.Web.MVC.Model.ModelBase.#ctor(System.Int32,System.String,System.String,System.Boolean,Kalman.Web.MVC.Model.HandleMode)">
            <summary>
             
            </summary>
            <param name="errCode">错误代码，一般将0作为成功的返回代码</param>
            <param name="message">返回消息内容</param>
            <param name="redirectURL">跳转地址Url</param>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.ErrCode">
            <summary>
            返回的错误代码：-1失败，0成功，大于0为具体的错误代码
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.Message">
            <summary>
            返回的消息内容
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.RedirectURL">
            <summary>
            跳转（重定向）URL地址
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.ActionOnError">
            <summary>
            服务端发生错误时前端的处理动作：1弹窗（默认），2跳转到错误页面
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.AutoHandle">
            <summary>
            是否自动处理
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.HandleMode">
            <summary>
            客户端处理模式枚举：1弹窗,2刷新，3弹窗并刷新（默认）
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.RequestParams">
            <summary>
            请求参数集合
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.ContentType">
            <summary>
            描述内容类型的字符串，如：text/html
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ModelBase.Data">
            <summary>
            自定义数据
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.ListModel`1.ItemList">
            <summary>
            数据项列表
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.PagingListModel`1.PageIndex">
            <summary>
            分页索引，从1开始
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.PagingListModel`1.PageSize">
            <summary>
            每页记录数
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.PagingListModel`1.Total">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.SqlServerDatabase.ExecuteXmlReader(System.Data.Common.DbCommand)">
            <summary>
            数据库架构对象
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.SqlServerDatabase.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            检索从DbCommand指定存储过程的参数信息，并填充指定DbCommand对象的Parameters集合。
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.SqlServerDatabase.UserParametersStartIndex">
            <summary>
            Returns the starting index for parameters in a command.
            </summary>
            <returns>The starting index for parameters in a command.</returns>
        </member>
        <member name="M:Kalman.Data.DbProvider.SqlServerDatabase.BuildParameterName(System.String)">
            <summary>
            生成一个带前缀的参数名
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.SqlServerDatabase.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
            <summary>
            Sets the RowUpdated event for the data adapter.
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.SqlServerDatabase.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
            <summary>
            Determines if the number of parameters in the command matches the array of parameter values.
            </summary>
            <param name="command">The <see cref="T:System.Data.Common.DbCommand"/> containing the parameters.</param>
            <param name="values">The array of parameter values.</param>
            <returns><see langword="true"/> if the number of parameters and values match; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:Kalman.Data.DbProvider.SqlServerDatabase.DatabaseType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="T:Kalman.Data.DbProvider.OracleDataReaderWrapper">
            <summary>
            对OracleDataReader对象的包装
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.System#IDisposable#Dispose">
            <summary>
            释放OracleDataReader对象实例所使用的所有资源
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.Close">
            <summary>
            关闭OracleDataReader对象
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetSchemaTable">
            <summary>
            返回元数据描述
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.NextResult">
            <summary>
            使OracleDataReader前进到下一个结果
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.Read">
            <summary>
            使OracleDataReader前进到下一条记录
            </summary>
            <returns><see langword="true"/> if there are more rows; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            从指定的列偏移量将字节流作为数组从给定的缓冲区偏移量开始读入缓冲区
            </summary>
            <param name="ordinal">从零开始的列序号</param>
            <param name="dataIndex">行中读取操作开始位置的索引</param>
            <param name="buffer">要向其中复制数据的缓冲区</param>
            <param name="bufferIndex">开始写操作位置的索引.</param>
            <param name="length">要读取的字符数</param>
            <returns>读取的实际字符数</returns>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetChar(System.Int32)">
            <summary>
            获取指定列字符形式的值
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            从指定的列偏移量将字符流作为数组从给定的缓冲区偏移量开始读入缓冲区
            </summary>
            <param name="index">从零开始的列序号</param>
            <param name="dataIndex">行中读取操作开始位置的索引</param>
            <param name="buffer">要向其中复制数据的缓冲区</param>
            <param name="bufferIndex">开始写操作位置的索引.</param>
            <param name="length">要读取的字符数</param>
            <returns>读取的实际字符数</returns>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetData(System.Int32)">
            <summary>
            返回被请求的列序号的 System.Data.Common.DbDataReader 对象
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetDataTypeName(System.Int32)">
            <summary>
            获取源数据类型的名称
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetFieldType(System.Int32)">
            <summary>
            获取是对象的数据类型的 System.Type
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetName(System.Int32)">
            <summary>
            获取指定列的名称
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetOrdinal(System.String)">
            <summary>
            在给定列名称的情况下获取列序号
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetString(System.Int32)">
            <summary>
            获取指定列字符串形式的值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDataReaderWrapper.GetValues(System.Object[])">
            <summary>
            获取当前记录所有集合中的属性字段
            </summary>
        </member>
        <member name="P:Kalman.Data.DbProvider.OracleDataReaderWrapper.Item(System.Int32)">
            <summary>
            获取指定索引所在列的值
            </summary>
            <param name="index">从零开始的索引</param>
        </member>
        <member name="P:Kalman.Data.DbProvider.OracleDataReaderWrapper.Depth">
            <summary>
            获取一个值，该值指示当前行的嵌套深度
            </summary>
        </member>
        <member name="P:Kalman.Data.DbProvider.OracleDataReaderWrapper.IsClosed">
            <summary>
            获取OracleDataReader对象是否关闭
            </summary>
        </member>
        <member name="P:Kalman.Data.DbProvider.OracleDataReaderWrapper.RecordsAffected">
            <summary>
            获取通过执行SQL语句插入、更新、删除的行数
            </summary>
        </member>
        <member name="P:Kalman.Data.DbProvider.OracleDataReaderWrapper.FieldCount">
            <summary>
            返回当前行中的列数
            </summary>
        </member>
        <member name="P:Kalman.Data.DbProvider.OracleDataReaderWrapper.InnerReader">
            <summary>
            获取OracleDataReader的包装实例
            </summary>
        </member>
        <member name="T:Kalman.GetHandler">
            <summary>
            获取实体类成员属性值的方法委托
            </summary>
            <param name="propertyName">成员属性名称</param>
            <returns>返回成员属性对应的值</returns>
        </member>
        <member name="T:Kalman.BindableEntity">
            <summary>
            可绑定数据的实体
            </summary>
        </member>
        <member name="M:Kalman.BindableEntity.GetValue(System.String)">
            <summary>
            获取指定成员属性的值
            </summary>
            <param name="propertyName">成员属性名称</param>
            <returns>返回成员属性对应的值</returns>
        </member>
        <member name="M:Kalman.BindableEntity.SetValue(System.String,System.Object)">
            <summary>
            设置指定成员属性的值
            </summary>
            <param name="propertyName">成员属性名称</param>
            <param name="value">成员属性值</param>
        </member>
        <member name="M:Kalman.BindableEntity.Cast``1(System.Object)">
            <summary>
            类型转换
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="obj">待转换对象</param>
        </member>
        <member name="M:Kalman.BindableEntity.Bind(Kalman.GetHandler)">
            <summary>
            需要在派生类中定义具体的绑定方法
            </summary>
            <param name="get"></param>
        </member>
        <member name="M:Kalman.BindableEntity.Bind(System.Data.IDataReader,System.Boolean)">
            <summary>
            将DataReader对象绑定到实体类
            </summary>
            <param name="dataReader"></param>
            <param name="isClose">绑定操作完成后是否关闭DataReader对象</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.BindableEntity.Bind(System.Data.DataRow)">
            <summary>
            将DataRow对象绑定到实体类
            </summary>
            <param name="dataRow"></param>
        </member>
        <member name="T:Kalman.ServiceModel.WcfErrorHandler">
            <summary>
            自定义错误处理器
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.WcfErrorHandler.HandleError(System.Exception)">
            <summary>
            启用错误相关处理并返回一个值，该值指示调度程序在某些情况下是否中止会话和实例上下文
            </summary>
            <param name="error">处理过程中引发的异常</param>
            <returns>
            如果WCF不应中止会话（如果有一个）和实例上下文（如果实例上下文不是 System.ServiceModel.InstanceContextMode.Single），则为true；否则为 false。默认值为 false。
            </returns>
        </member>
        <!-- 对于成员“M:Kalman.ServiceModel.WcfErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)”忽略有格式错误的 XML 注释 -->
        <member name="T:Kalman.ServiceModel.ErrorInfo">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Kalman.ServiceModel.ErrorInfo.Code">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:Kalman.ServiceModel.ErrorInfo.Reason">
            <summary>
            错误原因
            </summary>
        </member>
        <member name="P:Kalman.ServiceModel.ErrorInfo.TypeName">
            <summary>
            发生异常的类型名称，如FC.xxxService
            </summary>
        </member>
        <member name="P:Kalman.ServiceModel.ErrorInfo.MethodName">
            <summary>
            发生异常的方法名称
            </summary>
        </member>
        <member name="T:Kalman.Security.HashCryto">
            <summary>
            哈希加密算法
            </summary>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash(System.IO.FileStream,Kalman.Security.HashAlgorithmType)">
            <summary>
            计算文件流的哈希值
            </summary>
            <param name="fileStream"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2String(System.IO.FileStream,Kalman.Security.HashAlgorithmType)">
            <summary>
            计算文件流的哈希值并将其转换为字符串
            </summary>
            <param name="fileStream"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2Base64(System.IO.FileStream,Kalman.Security.HashAlgorithmType)">
            <summary>
            计算文件流的哈希值并将其转换为使用Base64编码的字符串
            </summary>
            <param name="fileStream"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash(System.Byte[],Kalman.Security.HashAlgorithmType)">
            <summary>
            计算字节数组的哈希值
            </summary>
            <param name="data"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2String(System.Byte[],Kalman.Security.HashAlgorithmType)">
            <summary>
            计算字节数组的哈希值并将其转换为字符串
            </summary>
            <param name="data"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2Base64(System.Byte[],Kalman.Security.HashAlgorithmType)">
            <summary>
            计算字节数组的哈希值并将其转换为使用Base64编码的字符串
            </summary>
            <param name="data"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash(System.String,Kalman.Security.HashAlgorithmType)">
            <summary>
            计算字符串的哈希值
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash(System.String,Kalman.Security.HashAlgorithmType,System.Text.Encoding)">
            <summary>
            计算字符串的哈希值
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithmType"></param>
            <param name="encoding">指定字符串的编码</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2String(System.String,Kalman.Security.HashAlgorithmType)">
            <summary>
            计算字符串的哈希值并将其转换为字符串
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2String(System.String,Kalman.Security.HashAlgorithmType,System.Text.Encoding)">
            <summary>
            计算字符串的哈希值并将其转换为字符串
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithmType"></param>
            <param name="encoding">指定字符串的编码</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2Base64(System.String,Kalman.Security.HashAlgorithmType)">
            <summary>
            计算字符串的哈希值并将其转换为使用Base64编码的字符串
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.GetHash2Base64(System.String,Kalman.Security.HashAlgorithmType,System.Text.Encoding)">
            <summary>
            计算字符串的哈希值并将其转换为使用Base64编码的字符串
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.HashCryto.CreateHashAlgorithmProvider(Kalman.Security.HashAlgorithmType)">
            <summary>
            创建一个哈希算法提供者实例
            </summary>
            <param name="hashAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Logging.Targets.RemotingTarget.LoadConfig(Kalman.Logging.TargetConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <exception cref="T:System.InvalidOperationException">配置已经被加载</exception>
            <exception cref="T:System.ArgumentNullException">参数<c>config</c> 不能为空</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">配置无法正确加载</exception>
        </member>
        <member name="M:Kalman.Logging.Targets.RemotingTarget.Write(Kalman.Logging.LogEntry)">
            <summary>
            写日志实体
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.RemotingTarget.Name">
            <summary>
            获取或设置Target名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.RemotingTarget.Formatter">
            <summary>
            获取或设置格式化器
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.RemotingTarget.ClientName">
            <summary>
            Remoting ClientName
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.RemotingTarget.AppName">
            <summary>
            应用程序名称（用来区分不同应用程序的写日志路径）
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.DbTarget.ConnectionStringName">
            <summary>
            连接字符串名称，必须配置connectionStrings节
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.DbTarget.CommandText">
            <summary>
            将日志写入数据库的Sql语句
            </summary>
        </member>
        <member name="T:Kalman.Logging.MultiLogger">
            <summary>
            多日志记录器
            </summary>
            <remarks>
            当配置中的命名空间匹配多个日志记录器的时候使用
            </remarks>
        </member>
        <member name="T:Kalman.Logging.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="T:Kalman.Logging.ILogger">
            <summary>
            日志记录器接口
            </summary>
        </member>
        <member name="M:Kalman.Logging.ILogger.LoadConfig(Kalman.Logging.LoggerConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <remarks>
            只能在启动时调用
            </remarks>
            <exception cref="T:System.InvalidOperationException">配置已经被指定</exception>
        </member>
        <member name="M:Kalman.Logging.ILogger.CanLog(System.String)">
            <summary>
            限制日志记录器只能在指定的命名空间记录日志，根据命名空间来判断日志记录器是否能记录日志
            </summary>
            <param name="value">要检测的命名空间</param>
        </member>
        <member name="P:Kalman.Logging.ILogger.MinLevel">
            <summary>
            获取可以被记录日志的最小级别
            </summary>
        </member>
        <member name="P:Kalman.Logging.ILogger.Name">
            <summary>
            获取或设置日志记录器的名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.ILogger.NameSpace">
            <summary>
            获取或设置日志记录器所作用的命名空间
            </summary>
        </member>
        <member name="P:Kalman.Logging.ILogger.Targets">
            <summary>
            Targets
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.#ctor(System.Collections.Generic.ICollection{Kalman.Logging.ITarget})">
            <summary>
            
            </summary>
            <exception cref="T:System.ArgumentNullException">参数<c>targets</c> 不能为空</exception>
        </member>
        <member name="M:Kalman.Logging.Logger.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Trace(System.String)">
            <summary>
            用来跟踪程序的执行情况
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Trace(System.String,System.Exception)">
            <summary>
            用来跟踪程序的执行情况
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Debug(System.String)">
            <summary>
            记录调试信息
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Debug(System.String,System.Exception)">
            <summary>
            记录调试信息
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Info(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Info(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Warning(System.String)">
            <summary>
            记录警告信息
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Warning(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Error(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Error(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Fatal(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.Fatal(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.LoadConfig(Kalman.Logging.LoggerConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <remarks>
            只能在启动时调用
            </remarks>
            <exception cref="T:System.InvalidOperationException">配置已经被指定</exception>
        </member>
        <member name="M:Kalman.Logging.Logger.CanLog(System.String)">
            <summary>
            限制日志记录器只能在指定的命名空间记录日志，根据命名空间来判断日志记录器是否能记录日志
            </summary>
            <param name="value">要检测的命名空间</param>
        </member>
        <member name="M:Kalman.Logging.Logger.CreateEntry(Kalman.Logging.LogLevel,System.String)">
            <summary>
            创建一个日志实体对象
            </summary>
        </member>
        <member name="M:Kalman.Logging.Logger.CreateEntry(Kalman.Logging.LogLevel,System.String,System.Exception)">
            <summary>
            创建一个日志实体对象
            </summary>
        </member>
        <member name="P:Kalman.Logging.Logger.MinLevel">
            <summary>
            获取可以被记录日志的最小级别
            </summary>
        </member>
        <member name="P:Kalman.Logging.Logger.Name">
            <summary>
            获取或设置日志记录器的名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.Logger.NameSpace">
            <summary>
            获取或设置日志记录器所作用的命名空间
            </summary>
        </member>
        <member name="P:Kalman.Logging.Logger.Targets">
            <summary>
            Targets
            </summary>
        </member>
        <member name="P:Kalman.Logging.Logger.SkipCount">
            <summary>
            获取跳过的堆栈帧数
            </summary>
        </member>
        <member name="M:Kalman.Logging.MultiLogger.#ctor(System.Collections.Generic.IEnumerable{Kalman.Logging.ILogger})">
            <summary>
            初始化，合并多个日志记录器的Target
            </summary>
            <param name="loggers">所有匹配的日志记录器</param>
        </member>
        <member name="M:Kalman.Logging.MultiLogger.WriteToTargets(Kalman.Logging.LogEntry,System.Collections.Generic.IEnumerable{Kalman.Logging.ITarget})">
            <summary>
            将日志实体写入到所有Target
            </summary>
            <param name="entry"></param>
            <param name="targets"></param>
        </member>
        <member name="P:Kalman.Logging.MultiLogger.SkipCount">
            <summary>
            获取跳过的堆栈帧数
            </summary>
        </member>
        <member name="T:Kalman.Logging.LoggerConfig">
            <summary>
            日志记录器配置类
            </summary>
        </member>
        <member name="M:Kalman.Logging.LoggerConfig.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggerConfig.Namespace">
            <summary>
            获取或设置日志记录器所作用的命名空间，只支持唯一的通配符（*）
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggerConfig.IsWildCard">
            <summary>
            获取或设置指定命名空间是否包含通配符[*]
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggerConfig.Name">
            <summary>
            获取或设置日志记录器的名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggerConfig.TargetNames">
            <summary>
            获取Target名称集合，配置中用逗号隔开
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggerConfig.ChildConfig">
            <summary>
            子配置
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggerConfig.MinLevel">
            <summary>
            获取可以被记录日志的最小级别
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggerConfig.Targets">
            <summary>
            日志记录器Target列表
            </summary>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SOIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.Parent">
            <summary>
            父对象，所属表或视图
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.IsCluster">
            <summary>
            是否聚簇索引
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.IsPrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.IsUnique">
            <summary>
            是否唯一键
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.IsIdentity">
            <summary>
            该索引列是否标识列（目前只有Access（OleDb）用到）
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.IndexColumnName">
            <summary>
            索引列表（目前只有Access（OleDb）用到）
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.IsFullText">
            <summary>
            是否全文索引（MySQL专用）
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.Columns">
            <summary>
            索引成员列集合
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOIndex.Database">
            <summary>
            获取所属数据库对象
            </summary>
        </member>
        <member name="T:Kalman.Data.DataReaderWrapper">
            <summary>
            DataReader包装器，解决BindableEntity绑定DataReader时，实体属性名称在DataReader中不存在时引发的索引超出范围异常问题
            </summary>
        </member>
        <member name="P:Kalman.Data.DataReaderWrapper.Item(System.String)">
            <summary>
            如果不存在,则返回Null
            </summary>
        </member>
        <member name="T:Kalman.Caching.AbsoluteTime">
            <summary>
            使用绝对时间[UTC]来判断一个缓存项是否过期
            </summary>
        </member>
        <member name="T:Kalman.Caching.ICacheItemExpiration">
            <summary>
            缓存项过期接口，可以基于该接口实现需要的缓存项过期对象
            </summary>
        </member>
        <member name="M:Kalman.Caching.ICacheItemExpiration.HasExpired">
            <summary>
            判断缓存项是否过期
            </summary>
        </member>
        <member name="M:Kalman.Caching.ICacheItemExpiration.Initialize(Kalman.Caching.CacheItem)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Kalman.Caching.AbsoluteTime.#ctor(System.DateTime)">
            <summary>
            创建一个实例并将输入的时间转换为UTC时间，转换后的时间值将用来判断该缓存项是否过期
            </summary>
        </member>
        <member name="M:Kalman.Caching.AbsoluteTime.#ctor(System.TimeSpan)">
            <summary>
            创建一个实例并指定从现在开始的时间间隔，在这个时间间隔后缓存项将过期
            </summary>
        </member>
        <member name="P:Kalman.Caching.AbsoluteTime.AbsoluteExpirationTime">
            <summary>
            获取过期时间
            </summary>
        </member>
        <member name="M:Kalman.Utilities.DatetimeUtil.GetCurrentUnixTime">
            <summary>
            当前系统时间转换为Unix时间戳
            </summary>
            <returns>Unix时间戳</returns>
        </member>
        <member name="M:Kalman.Utilities.DatetimeUtil.GetUnixTime(System.DateTime)">
            <summary>
            系统时间转换为Unix时间戳
            </summary>
            <param name="dt">时间</param>
            <returns>Unix时间戳</returns>
        </member>
        <member name="M:Kalman.Utilities.DatetimeUtil.GetFromUnixTime(System.Int64)">
            <summary>
            Unix时间戳转换为系统时间
            </summary>
            <param name="unixTimeStamp">Unix时间戳</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.DatetimeUtil.GetWeekCNName(System.DateTime)">
            <summary>
            获取指定日期对应的星期中文名，如：星期一
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Remoting.RSHelper">
            <summary>
            Remoting服务端帮助类
            </summary>
        </member>
        <member name="T:Kalman.ILogable">
            <summary>
            需要记录日志的类必须继承该接口
            </summary>
        </member>
        <member name="E:Kalman.ILogable.OnLog">
            <summary>
            日志事件
            </summary>
        </member>
        <member name="M:Kalman.Remoting.RSHelper.Finalize">
            <summary>
            对象销毁时注销已注册的Remoting信道
            </summary>
        </member>
        <member name="T:Kalman.Remoting.HostMonitorService">
            <summary>
            Remoting宿主监控服务类，提供Remoting宿主服务器的一些基本信息和操作，比如：获取当前时间、CPU、内存信息及对本机服务控制等
            该对象在Remoting服务端默认发布，客户端可以通过该服务类来获取Remoting宿主服务器的一些基本信息
            </summary>
        </member>
        <member name="M:Kalman.Remoting.HostMonitorService.GetCurrentDate">
            <summary>
            获取Remoting宿主服务器当前时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kalman.Remoting.Host">
            <summary>
            Remoting宿主实体类
            </summary>
        </member>
        <member name="P:Kalman.Remoting.Host.Name">
            <summary>
            Remoting宿主名称
            </summary>
        </member>
        <member name="P:Kalman.Remoting.Host.Url">
            <summary>
            Remoting宿主地址
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDKey.Package">
            <summary>
            所属包对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDKey.Table">
            <summary>
            所属表对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDKey.PrimaryKey">
            <summary>
            主键Key
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDKey.Cluster">
            <summary>
            聚集对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDKey.ColumnIDList">
            <summary>
            键所拥有的列的ID列表
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDIndex.Package">
            <summary>
            所属包对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDIndex.Table">
            <summary>
            所属表对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDIndex.Unique">
            <summary>
            唯一性索引，一般主键列默认会创建唯一性索引
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDIndex.Cluster">
            <summary>
            聚集对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDIndex.ColumnIDList">
            <summary>
            索引所拥有的列的ID列表
            </summary>
        </member>
        <member name="T:Kalman.Extensions.StreamExt">
            <summary>
            封装了Stream对象相关的一些扩展方法
            </summary>
        </member>
        <member name="M:Kalman.Extensions.StreamExt.ConvertToString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            将字节序列流转换为字符串
            </summary>
            <param name="stream">字节序列流</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SOTable">
            <summary>
            表架构对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTable.FullName">
            <summary>
            获取完整名称
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTable.SchemaName">
            <summary>
            获取或设置所属架构名称，SqlServer2005+特有属性
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTable.ColumnList">
            <summary>
            获取或设置列列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTable.IndexList">
            <summary>
            获取或设置视图列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTable.SqlText">
            <summary>
            获取或设置表Sql脚本
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOTable.PrimaryKeys">
            <summary>
            获取或设置表的主键列
            </summary>
        </member>
        <member name="T:Kalman.AppException">
            <summary>
            自定义应用程序异常
            </summary>
        </member>
        <member name="M:Kalman.AppException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.AppException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="msg">异常消息</param>
        </member>
        <member name="M:Kalman.AppException.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="msg">异常消息</param>
            <param name="errorCode">错误代码</param>
        </member>
        <member name="M:Kalman.AppException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="errorCode">错误代码</param>
            <param name="msg">异常消息</param>
            <param name="inner">内部异常</param>
        </member>
        <member name="M:Kalman.AppException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="msg">异常消息</param>
            <param name="inner">内部异常</param>
        </member>
        <member name="M:Kalman.AppException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">存储对象序列化和反序列化所需的全部数据</param>
            <param name="context">描述给定的序列化流的源和目标，并提供一个由调用方定义的附加上下文</param>
        </member>
        <member name="M:Kalman.AppException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            重载GetObjectData方法
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Kalman.AppException.ErrorCode">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="T:Kalman.Utilities.StringUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.InitialToUpper(System.String)">
            <summary>
            将字符串的首字母转换成大写，后面的字母转换为小写，比如将user或USER转换成User
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.InitialToLower(System.String)">
            <summary>
            将字符串的首字母转换成小写，比如将User转换成user
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.InitialToUpperMulti(System.String)">
            <summary>
            专用方法，将类似aaa_bbb_ccc_ddd的字符串转换为AaaBbbCccDdd
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.ToPascalName(System.String,System.String)">
            <summary>
            将字符串转换为Pascal大小写命名方式，将类似aaa_bbb_ccc_ddd的字符串转换为AaaBbbCccDdd
            </summary>
            <param name="s"></param>
            <param name="separator">分隔字符，默认为下划线</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.ToCamelName(System.String,System.String)">
            <summary>
            将字符串转换为Camel命名方式，将类似aaa_bbb_ccc_ddd的字符串转换为aaaBbbCccDdd
            </summary>
            <param name="s"></param>
            <param name="separator">分隔字符，默认为下划线</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.RemovePrefix(System.String,System.String)">
            <summary>
            移除字符串的前缀，示例：RemovePrefix("aa_bb_cc_xxx","aa_bb_");结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.RemovePrefix(System.String,System.Int32)">
            <summary>
            移除字符串的前缀，默认前缀分隔符是下划线"_"，示例：RemovePrefix("aa_bb_cc_xxx",2);结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.RemovePrefix(System.String,System.String,System.Int32)">
            <summary>
            移除字符串的前缀，示例：RemovePrefix("aa_bb_cc_xxx","_",2);结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="separator">前缀分隔符，一般为下划线"_"</param>
            <param name="level">前缀层次</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.ToSBC(System.String)">
            <summary>
            转全角(SBC case)
            </summary>
            <param name="input">任意字符串</param>
            <returns>全角字符串</returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.ToDBC(System.String)">
            <summary>
            转半角(DBC case)
            </summary>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.CutString(System.String,System.Int32,System.Int32)">
            <summary>
            裁剪字符串，对Substring方法的改良，参数超出范围不抛出异常
            若裁剪起始位置startIndex超出字符串长度，则返回空字符串,若裁剪长度length超出范围，则返回从startIndex开始的全部字符
            </summary>
            <param name="s"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.CutRight(System.String,System.Int32)">
            <summary>
            截断右边多余字符串
            </summary>
            <param name="s">字符串</param>
            <param name="length">保留字符串长度</param>
            <returns>截断后的字符串</returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.CutRight(System.String,System.Int32,System.String)">
            <summary>
            截断右边多余字符串
            </summary>
            <param name="s">字符串</param>
            <param name="length">保留字符串长度</param>
            <param name="suffix">截断部分替代字符</param>
            <returns>截断后的字符串</returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.GetBitLength(System.String)">
            <summary>
            获取字符串字节长度,中文字符算2个字符
            </summary>
            <param name="s">字符串</param>
            <returns>字符串长度</returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.GetByteLength(System.String,System.Text.Encoding)">
            <summary>
            获取字符串长度，字节长度，一个中文字符长度为2
            </summary>
            <param name="s"></param>
            <param name="encoding">字符串编码</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.GetByteLength(System.String)">
            <summary>
            获取字符串长度，字节长度，一个中文字符长度为2
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.GetLeftByteString(System.String,System.Int32)">
            <summary>
            截断右边多余字符串
            </summary>
            <param name="s">字符串</param>
            <param name="byteLength">字节长度</param>
            <returns>处理后的字符串</returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.ToHash(System.String,Kalman.Security.HashAlgorithmType)">
            <summary>
            返回指定加密哈希算法的字符串的副本
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithm">哈希算法</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.IsWhiteSpace(System.String)">
            <summary>
            判断字符串是否都是有空白字符组成，空字符串将返回false
            </summary>
            <returns>如果该字符串都是空白字符，返回<c>true</c> ，否则返回<c>false</c></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.HasWhiteSpace(System.String)">
            <summary>
            判断字符串是否含有空白字符
            </summary>
            <returns>如果该字符串含有空白字符，返回<c>true</c> ，否则返回<c>false</c></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.AppendNewLine(System.String)">
            <summary>
            向字符串结尾附加换行符
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.Reverse(System.String)">
            <summary>
            反转字符串，如：字符串“ABC”，反转后为“CBA”
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.ToHexString(System.String,System.Text.Encoding)">
            <summary>
            将字符串编码成16进制字符串，比如12345->3132333435；张三->D5C5C8FD，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.ToHexString(System.String)">
            <summary>
            将字符串编码成16进制字符串，比如12345->3132333435；张三->D5C5C8FD，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.FromHexString(System.String,System.Text.Encoding)">
            <summary>
            将16进制编码字符串还原成编码前的字符串，比如：D5C5C8FD->张三，3132333435->12345，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.FromHexString(System.String)">
            <summary>
            将16进制编码字符串还原成编码前的字符串，比如：D5C5C8FD->张三，3132333435->12345，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.Base64Encode(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.Base64Encode(System.String,System.Text.Encoding)">
            <summary>
            Base64加密
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.Base64Decode(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.Base64Decode(System.String,System.Text.Encoding)">
            <summary>
            Base64解密
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.HtmlEncode(System.String)">
            <summary>
            对Html文本字符串进行编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.HtmlDecode(System.String)">
            <summary>
            对Html文本字符串进行解码
            </summary>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.RemoveHtml(System.String)">
            <summary>
            移除字符串中所有的HTML标签
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.RemoveHtml(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            移除字符串中在指定集合中所包含的HTML标签，标签名称不区分大小写
            </summary>
            <param name="s"></param>
            <param name="removeTags"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.StringUtil.RemoveUnsafeHtml(System.String)">
            <summary>
            移除字符串不安全的HTML代码，例如"script,iframe"等
            </summary>
        </member>
        <member name="T:Kalman.Utilities.StreamUtil">
            <summary>
            封装了对Stream对象操作的一些方法
            </summary>
        </member>
        <member name="M:Kalman.Utilities.StreamUtil.ConvertToString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            将字节序列流转换为字符串
            </summary>
            <param name="stream">字节序列流</param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Resources.Data">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.CommandNotSqlCommand">
            <summary>
              查找类似 该Command对象必须是SqlCommand类型 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.ConnectionStringNameNotFound">
            <summary>
              查找类似 不能找到名称为[{0}]的连接字符串 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.ConnectionStringNotConfig">
            <summary>
              查找类似 连接字符串没有配置 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.DataProviderNotFound">
            <summary>
              查找类似 找不到名称为[{0}]数据提供程序，请检查配置节system.data-&gt;DbProviderFactories 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.MustInitAtLeastOneCommand">
            <summary>
              查找类似 必须初始化至少一个Command 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.ParameterMatchFailure">
            <summary>
              查找类似 参数值的个数与当前存储过程的参数个数不匹配 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Data.RowUpdateFailed">
            <summary>
              查找类似 无法更新行 的本地化字符串。
            </summary>
        </member>
        <member name="T:Kalman.Extensions.TypeExt">
            <summary>
            数据库相关扩展方法
            </summary>
        </member>
        <member name="M:Kalman.Extensions.TypeExt.ToSqlDbType(System.Data.DbType)">
            <summary>
            获取对应的SqlServer特定数据类型
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.TypeExt.ToDbType(System.Type)">
            <summary>
            获取对应的数据类型
            </summary>
            <param name="type">type由数据库元数据中定义的DataType转换而来</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.TypeExt.ToTypeString(System.Data.DbType)">
            <summary>
            将System.Data.DbType类型转换为对应System.Type类型字符串
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.TypeExt.ToType(System.Data.DbType)">
            <summary>
            将System.Data.DbType类型转换为对应System.Type类型
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.PdmParser.PDTable.Package">
            <summary>
            所属包对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDTable.UserID">
            <summary>
            表所属的用户ID
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDTable.User">
            <summary>
            表所属的用户对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDTable.PrimaryKeyID">
            <summary>
            主键所属的KeyID
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDTable.PKColumnList">
            <summary>
            获取主键列列表
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDTable.ClusterObjectID">
            <summary>
            聚集对象ID（可以是Key和Index对象），一个表只能有一个聚集对象，注意：有些数据库不支持聚集对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDTable.ClusterObjectColumnList">
            <summary>
            获取聚集对象列列表
            </summary>
        </member>
        <member name="T:Kalman.Logging.Formatters.IPartFormatter">
            <summary>
            用于格式化日志实体的部分属性
            </summary>
        </member>
        <member name="T:Kalman.Logging.LoggingConfig">
            <summary>
            日志组件配置
            </summary>
        </member>
        <member name="T:Kalman.ConfigBase">
            <summary>
            配置基类
            </summary>
        </member>
        <member name="M:Kalman.ConfigBase.GetStringAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            获取属性（string类型）
            </summary>
        </member>
        <member name="M:Kalman.ConfigBase.GetStringAttribute(System.Xml.XmlNode,System.String)">
            <summary>
            获取属性（string类型），默认值string.Empty
            </summary>
        </member>
        <member name="M:Kalman.ConfigBase.GetIntAttribute(System.Xml.XmlNode,System.String,System.Int32)">
            <summary>
            获取属性（int类型）
            </summary>
        </member>
        <member name="M:Kalman.ConfigBase.GetBoolAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            获取属性（bool类型）
            </summary>
        </member>
        <member name="M:Kalman.ConfigBase.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            从配置节点获取属性值
            </summary>
            <param name="isMandatory">是否为强制属性</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException"></exception>
        </member>
        <member name="M:Kalman.ConfigBase.GetAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            从配置节点获取属性值
            </summary>
            <param name="node"></param>
            <param name="key"></param>
            <param name="defaultValue">若配置节点键值为key的属性没有配置，则返回一个默认值</param>
            <returns>配置节点键值为key的属性值</returns>
        </member>
        <member name="M:Kalman.ConfigBase.LoadModules``1(System.Xml.XmlNode)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.ConfigBase.XmlNode2NameValueCollection(System.Xml.XmlNode)">
            <summary>
            将配置节点转换成NameValueCollection集合
            </summary>
            <param name="node">配置节点</param>
            <returns></returns>
        </member>
        <member name="P:Kalman.Logging.LoggingConfig.Targets">
            <summary>
            获取或设置Target列表
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggingConfig.Loggers">
            <summary>
            获取或设置日志记录器列表
            </summary>
        </member>
        <member name="P:Kalman.Logging.LoggingConfig.Formatters">
            <summary>
            获取或设置格式化器列表
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogParseFilter.Method">
            <summary>
            方法[0:All,1:Get,2:Post]
            </summary>
        </member>
        <member name="T:Kalman.Extensions.StringExt">
            <summary>
            Html相关的字符串处理方法
            </summary>
            <summary>
            字符串格式化相关的扩展方法
            </summary>
            <summary>
            Stirng类型扩展方法
            注：这里所有方法的实现都封装在StringUtil类中
            </summary>
        </member>
        <member name="M:Kalman.Extensions.StringExt.InitialToUpper(System.String)">
            <summary>
            将字符串的首字母转换成大写，后面的字母转换为小写，比如将user或USER转换成User
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.InitialToLower(System.String)">
            <summary>
            将字符串的首字母转换成小写，比如将User转换成user
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.InitialToUpperMulti(System.String)">
            <summary>
            专用方法，将类似aaa_bbb_ccc_ddd的字符串转换为AaaBbbCccDdd
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.ToPascalName(System.String,System.String)">
            <summary>
            将字符串转换为Pascal大小写命名方式，将类似aaa_bbb_ccc_ddd的字符串转换为AaaBbbCccDdd
            </summary>
            <param name="s"></param>
            <param name="separator">分隔字符，默认为下划线</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.ToCamelName(System.String,System.String)">
            <summary>
            将字符串转换为Camel命名方式，将类似aaa_bbb_ccc_ddd的字符串转换为aaaBbbCccDdd
            </summary>
            <param name="s"></param>
            <param name="separator">分隔字符，默认为下划线</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.RemovePrefix(System.String,System.String)">
            <summary>
            移除字符串的前缀，示例："aa_bb_cc_xxx".RemovePrefix("aa_bb_");结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.RemovePrefix(System.String,System.Int32)">
            <summary>
            移除字符串的前缀，默认前缀分隔符是下划线"_"，示例："aa_bb_cc_xxx".RemovePrefix(2);结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.RemovePrefix(System.String,System.String,System.Int32)">
            <summary>
            移除字符串的前缀，示例："aa_bb_cc_xxx".RemovePrefix("_",2);结果为"cc_xxx";
            </summary>
            <param name="s"></param>
            <param name="separator">前缀分隔符，一般为下划线"_"</param>
            <param name="level">前缀层次</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.HtmlEncode(System.String)">
            <summary>
            对Html文本字符串进行编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.HtmlDecode(System.String)">
            <summary>
            对Html文本字符串进行解码
            </summary>
        </member>
        <member name="M:Kalman.Extensions.StringExt.RemoveHtml(System.String)">
            <summary>
            移除字符串中所有的HTML标签
            </summary>
        </member>
        <member name="M:Kalman.Extensions.StringExt.RemoveHtml(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            移除字符串中在指定集合中所包含的HTML标签，标签名称不区分大小写
            </summary>
            <param name="s"></param>
            <param name="removeTags"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.RemoveUnsafeHtml(System.String)">
            <summary>
            移除字符串不安全的HTML代码，例如"script,iframe"等
            </summary>
        </member>
        <member name="M:Kalman.Extensions.StringExt.ToSBC(System.String)">
            <summary>
            转全角(SBC case)
            </summary>
            <param name="input">任意字符串</param>
            <returns>全角字符串</returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.ToDBC(System.String)">
            <summary>
            转半角(DBC case)
            </summary>
        </member>
        <member name="M:Kalman.Extensions.StringExt.CutString(System.String,System.Int32,System.Int32)">
            <summary>
            裁剪字符串，对Substring方法的改良，参数超出范围不抛出异常
            若裁剪起始位置startIndex超出字符串长度，则返回空字符串,若裁剪长度length超出范围，则返回从startIndex开始的全部字符
            </summary>
            <param name="s"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.ToHash(System.String,Kalman.Security.HashAlgorithmType)">
            <summary>
            返回指定加密哈希算法的字符串的副本
            </summary>
            <param name="s"></param>
            <param name="hashAlgorithm">哈希算法</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.IsWhiteSpace(System.String)">
            <summary>
            判断字符串是否都是有空白字符组成，空字符串将返回false
            </summary>
            <returns>如果该字符串都是空白字符，返回<c>true</c> ，否则返回<c>false</c></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.HasWhiteSpace(System.String)">
            <summary>
            判断字符串是否含有空白字符
            </summary>
            <returns>如果该字符串含有空白字符，返回<c>true</c> ，否则返回<c>false</c></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.AppendNewLine(System.String)">
            <summary>
            向字符串结尾附加换行符
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.Reverse(System.String)">
            <summary>
            反转字符串，如：字符串“ABC”，反转后为“CBA”
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.ToHexString(System.String,System.Text.Encoding)">
            <summary>
            将字符串编码成16进制字符串，比如12345->3132333435；张三->D5C5C8FD，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.ToHexString(System.String)">
            <summary>
            将字符串编码成16进制字符串，比如12345->3132333435；张三->D5C5C8FD，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.FromHexString(System.String,System.Text.Encoding)">
            <summary>
            将16进制编码字符串还原成编码前的字符串，比如：D5C5C8FD->张三，3132333435->12345，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.FromHexString(System.String)">
            <summary>
            将16进制编码字符串还原成编码前的字符串，比如：D5C5C8FD->张三，3132333435->12345，使用当前系统默认编码
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.GetByteLength(System.String,System.Text.Encoding)">
            <summary>
            获取字符串长度，字节长度，一个中文字符长度为2
            </summary>
            <param name="s"></param>
            <param name="encoding">字符串编码</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.GetByteLength(System.String)">
            <summary>
            获取字符串长度，字节长度，一个中文字符长度为2
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.Base64Encode(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.Base64Encode(System.String,System.Text.Encoding)">
            <summary>
            Base64加密
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.Base64Decode(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.StringExt.Base64Decode(System.String,System.Text.Encoding)">
            <summary>
            Base64解密
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SOCommandParameter">
            <summary>
            存储过程参数
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.Parent">
            <summary>
            父对象，所属存储过程
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.NativeType">
            <summary>
            原生类型，数据库定义的类型
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.DataType">
            <summary>
            数据类型，原生类型所对应的.Net Framework所定义的数据类型
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.Direction">
            <summary>
            参数方向
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.Precision">
            <summary>
            精度[字段长度]
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.Scale">
            <summary>
            小数位数
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.Length">
            <summary>
            长度，nchar(10)，char(10)长度都是10，但nchar(10)的Size为20
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommandParameter.Database">
            <summary>
            获取所属数据库对象
            </summary>
        </member>
        <member name="T:Kalman.ServiceModel.WcfServiceBase">
            <summary>
            WCF服务对象基类
            </summary>
        </member>
        <member name="T:Kalman.ServiceModel.IWcfServiceBase">
            <summary>
            WCF服务基础接口
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.IWcfServiceBase.CheckIsOnline">
            <summary>
            校验服务器是否在线
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.WcfServiceBase.CheckIsOnline">
            <summary>
            校验服务器是否在线
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.WcfServiceBase.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            用于向绑定元素传递自定义数据，以支持协定实现。
            </summary>
            <param name="serviceDescription">服务的服务说明</param>
            <param name="serviceHostBase">服务的宿主</param>
            <param name="endpoints">服务终结点</param>
            <param name="bindingParameters">绑定元素可访问的自定义对象</param>
        </member>
        <member name="M:Kalman.ServiceModel.WcfServiceBase.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            用于更改运行时属性值或插入自定义扩展对象（例如错误处理程序、消息或参数拦截器、安全扩展以及其他自定义扩展对象）。
            </summary>
            <param name="serviceDescription">服务说明</param>
            <param name="serviceHostBase">当前正在生成的宿主</param>
        </member>
        <member name="M:Kalman.ServiceModel.WcfServiceBase.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            用于检查服务宿主和服务说明，从而确定服务是否可成功运行。
            </summary>
            <param name="serviceDescription">服务说明</param>
            <param name="serviceHostBase">当前正在构建的服务宿主</param>
        </member>
        <member name="T:Kalman.Security.SymmetricAlgorithmType">
            <summary>
            对称加密算法类型枚举
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.DES">
            <summary>
            数据加密标准，速度较快，适用于加密大量数据的场合，密钥长度固定为64
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.RC2_40">
            <summary>
            RC2加密算法，密钥长度40，用变长密钥对大量数据进行加密，比 DES 快
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.RC2_64">
            <summary>
            RC2加密算法，密钥长度64，用变长密钥对大量数据进行加密，比 DES 快
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.RC2_96">
            <summary>
            RC2加密算法，密钥长度96，用变长密钥对大量数据进行加密，比 DES 快
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.RC2_128">
            <summary>
            RC2加密算法，密钥长度128，用变长密钥对大量数据进行加密，比 DES 快
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.Rijndael_128">
            <summary>
            Rijndael加密算法，密钥长度128
            AES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高，目前 AES 标准的一个实现是 Rijndael 算法； 
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.Rijndael_192">
            <summary>
            Rijndael加密算法，密钥长度192
            AES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高，目前 AES 标准的一个实现是 Rijndael 算法； 
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.Rijndael_256">
            <summary>
            Rijndael加密算法，密钥长度256
            AES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高，目前 AES 标准的一个实现是 Rijndael 算法； 
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.TripleDES_128">
            <summary>
            3DES加密算法，密钥长度128
            3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高； 
            </summary>
        </member>
        <member name="F:Kalman.Security.SymmetricAlgorithmType.TripleDES_192">
            <summary>
            3DES加密算法，密钥长度192
            3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高； 
            </summary>
        </member>
        <member name="T:Kalman.Net.HttpClient">
            <summary>
            HTTP通信客户端组件修正版（解决了.NET HTTP模块与非IIS服务器通信时，使用POST方式提交数据可能出现471异常的问题；
            .NET HTTP模块向服务器POST数据时先验证URL是否有效，然后才提交数据，而非IIS服务器可能被认为是异常）
            </summary>
        </member>
        <member name="M:Kalman.Net.HttpClient.#ctor">
            <summary>
            构造新的HttpClient实例
            </summary>
        </member>
        <member name="M:Kalman.Net.HttpClient.#ctor(System.String)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
        </member>
        <member name="M:Kalman.Net.HttpClient.#ctor(System.String,System.Boolean)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
            <param name="expect100Continue">是否使用100-continue行为（默认为false，对于非IIS服务器向其POST数据时可能会出现471错误，将该参数设置为false可以避免这个问题）</param>
        </member>
        <member name="M:Kalman.Net.HttpClient.#ctor(System.String,System.Boolean,Kalman.Net.HttpClientContext)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
            <param name="expect100Continue">是否使用100-continue行为（默认为false，对于非IIS服务器向其POST数据时可能会出现471错误，将该参数设置为false可以避免这个问题）</param>
            <param name="context">Cookie及Referer</param>
        </member>
        <member name="M:Kalman.Net.HttpClient.#ctor(System.String,System.Boolean,Kalman.Net.HttpClientContext,System.Boolean)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
            <param name="expect100Continue">是否使用100-continue行为（默认为false，对于非IIS服务器向其POST数据时可能会出现471错误，将该参数设置为false可以避免这个问题）</param>
            <param name="context">Cookie及Referer</param>
            <param name="keepContext">是否自动在不同的请求间保留Cookie, Referer</param>
        </member>
        <member name="M:Kalman.Net.HttpClient.AttachFile(System.String,System.String)">
            <summary>
            在请求中添加要上传的文件
            </summary>
            <param name="fileName">要上传的文件路径</param>
            <param name="fieldName">文件字段的名称(相当于&lt;input type=file name=fieldName&gt;)里的fieldName)</param>
        </member>
        <member name="M:Kalman.Net.HttpClient.AttachFile(System.Byte[],System.String,System.String)">
            <summary>
            在请求中添加要上传的文件
            </summary>
            <param name="data">要上传的文件内容</param>
            <param name="fileName">文件名</param>
            <param name="fieldName">文件字段的名称(相当于&lt;input type=file name=fieldName&gt;)里的fieldName)</param>
        </member>
        <member name="M:Kalman.Net.HttpClient.Reset">
            <summary>
            清空PostingData, Files, StartPoint, EndPoint, ResponseHeaders, 并把Verb设置为Get.
            在发出一个包含上述信息的请求后,必须调用此方法或手工设置相应属性以使下一次请求不会受到影响.
            </summary>
        </member>
        <member name="M:Kalman.Net.HttpClient.PostStream(System.Byte[],System.Text.Encoding)">
            <summary>
            将数据以字节流的方式POST到目标地址
            </summary>
            <param name="data">待提交的字节流</param>
            <param name="responseEncoding">目标响应后返回数据的编码</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.PostStream(System.String,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            将数据以字节流的方式POST到目标地址
            </summary>
            <param name="s">待提交的字符串</param>
            <param name="encoding">将字符串转成byte[]的编码</param>
            <param name="responseEncoding">目标响应后返回数据的编码</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.GetResponse">
            <summary>
            发出一次新的请求,并返回获得的回应
            调用此方法永远不会触发StatusUpdate事件.
            </summary>
            <returns>相应的HttpWebResponse</returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.GetStream">
            <summary>
            发出一次新的请求,并返回回应内容的流
            调用此方法永远不会触发StatusUpdate事件.
            </summary>
            <returns>包含回应主体内容的流</returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.GetBytes">
            <summary>
            发出一次新的请求,并以字节数组形式返回回应的内容
            调用此方法会触发StatusUpdate事件
            </summary>
            <returns>包含回应主体内容的字节数组</returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.GetString">
            <summary>
            发出一次新的请求,以Http头,或Html Meta标签,或DefaultEncoding指示的编码信息对回应主体解码
            调用此方法会触发StatusUpdate事件
            </summary>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.GetString(System.Text.Encoding)">
            <summary>
            发出一次新的请求,对回应的主体内容以指定的编码进行解码
            调用此方法会触发StatusUpdate事件
            </summary>
            <param name="encoding">指定的编码</param>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.HeadContentLength">
            <summary>
            发出一次新的Head请求,获取资源的长度
            此请求会忽略PostingData, Files, StartPoint, EndPoint, Verb
            </summary>
            <returns>返回的资源长度</returns>
        </member>
        <member name="M:Kalman.Net.HttpClient.SaveToFile(System.String)">
            <summary>
            发出一次新的请求,把回应的主体内容保存到文件
            调用此方法会触发StatusUpdate事件
            如果指定的文件存在,它会被覆盖
            </summary>
            <param name="fileName">要保存的文件路径</param>
        </member>
        <member name="M:Kalman.Net.HttpClient.SaveToFile(System.String,Kalman.Net.FileExistsAction)">
            <summary>
            发出一次新的请求,把回应的主体内容保存到文件
            调用此方法会触发StatusUpdate事件
            </summary>
            <param name="fileName">要保存的文件路径</param>
            <param name="existsAction">指定的文件存在时的选项</param>
            <returns>是否向目标文件写入了数据</returns>
        </member>
        <member name="P:Kalman.Net.HttpClient.RequestHeaders">
            <summary>
            请求的Header集合
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.KeepContext">
            <summary>
            是否自动在不同的请求间保留Cookie, Referer
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.DefaultLanguage">
            <summary>
            期望的回应的语言
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.DefaultEncoding">
            <summary>
            GetString()如果不能从HTTP头或Meta标签中获取编码信息,则使用此编码来获取字符串
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.RequestEncoding">
            <summary>
            发出请求的数据编码
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.Verb">
            <summary>
            指示发出Get请求还是Post请求
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.Files">
            <summary>
            要上传的文件.如果不为空则自动转为Post请求
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.PostingData">
            <summary>
            要发送的Form表单信息
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.Url">
            <summary>
            获取或设置请求资源的地址
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.ResponseHeaders">
            <summary>
            用于在获取回应后,暂时记录回应的HTTP头
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.Accept">
            <summary>
            获取或设置期望的资源类型
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.UserAgent">
            <summary>
            获取或设置请求中的Http头User-Agent的值
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.Context">
            <summary>
            获取或设置Cookie及Referer
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.StartPoint">
            <summary>
            获取或设置获取内容的起始点,用于断点续传,多线程下载等
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.EndPoint">
            <summary>
            获取或设置获取内容的结束点,用于断点续传,多下程下载等.
            如果为0,表示获取资源从StartPoint开始的剩余内容
            </summary>
        </member>
        <member name="P:Kalman.Net.HttpClient.Timeout">
            <summary>
            请求超时前等待的毫秒数。默认值为 100,000 毫秒（100 秒）
            </summary>
        </member>
        <member name="P:Kalman.Net.StatusUpdateEventArgs.BytesGot">
            <summary>
            已经下载的字节数
            </summary>
        </member>
        <member name="P:Kalman.Net.StatusUpdateEventArgs.BytesTotal">
            <summary>
            资源的总字节数
            </summary>
        </member>
        <member name="T:Kalman.Logging.NullLogger">
            <summary>
            空日志记录器，不记录任何日志
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Trace(System.String)">
            <summary>
            用来跟踪程序的执行情况
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Trace(System.String,System.Exception)">
            <summary>
            用来跟踪程序的执行情况
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Debug(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Debug(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Info(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Info(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Warning(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Warning(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Error(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Error(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Fatal(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.Fatal(System.String,System.Exception)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.LoadConfig(Kalman.Logging.LoggerConfig)">
            <summary>
            加载配置
            </summary>
        </member>
        <member name="M:Kalman.Logging.NullLogger.CanLog(System.String)">
            <summary>
            限制日志记录器只能在指定的命名空间记录日志，根据命名空间来判断日志记录器是否能记录日志
            </summary>
        </member>
        <member name="P:Kalman.Logging.NullLogger.MinLevel">
            <summary>
            获取可以被记录日志的最小级别
            </summary>
        </member>
        <member name="P:Kalman.Logging.NullLogger.Name">
            <summary>
            获取或设置日志记录器的名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.NullLogger.NameSpace">
            <summary>
            获取或设置日志记录器所作用的命名空间
            </summary>
        </member>
        <member name="P:Kalman.Logging.NullLogger.Targets">
            <summary>
            获取日志记录器写入目标集合
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.DB2Database.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            构造函数，指定数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
            <param name="dbProviderFactory"></param>
        </member>
        <member name="M:Kalman.Data.DbProvider.DB2Database.#ctor(System.String)">
            <summary>
            构造函数，指定数据提供程序固定名称，用于创建数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:Kalman.Collections.SynchronizedDictionary`2">
            <summary>
            Represents a syncrhonized collection of keys and values.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the Dictionary class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the Dictionary class that contains elements copied from the specified IDictionary and uses the default equality comparer for the key type.
            </summary>
            <param name="dictionary">The IDictionary whose elements are copied to the new Dictionary.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the Dictionary class that is empty, has the default initial capacity, and uses the specified IEqualityComparer.
            </summary>
            <param name="comparer">The IEqualityComparer implementation to use when comparing keys, or a null reference (Nothing in Visual Basic) to use the default EqualityComparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Dictionary class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.
            </summary>
            <param name="capacity">The initial number of elements that the Dictionary can contain.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the Dictionary class that contains elements copied from the specified IDictionary and uses the specified IEqualityComparer.
            </summary>
            <param name="dictionary">The IDictionary whose elements are copied to the new Dictionary.</param>
            <param name="comparer">The IEqualityComparer implementation to use when comparing keys, or a null reference (Nothing in Visual Basic) to use the default EqualityComparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the Dictionary class that is empty, has the specified initial capacity, and uses the specified IEqualityComparer.
            </summary>
            <param name="capacity">The initial number of elements that the Dictionary can contain.</param>
            <param name="comparer">The IEqualityComparer implementation to use when comparing keys, or a null reference (Nothing in Visual Basic) to use the default EqualityComparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.Clear">
            <summary>
            Removes all keys and values from the Dictionary.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the Dictionary contains the specified key.
            </summary>
            <param name="key">The key to locate in the Dictionary.</param>
            <returns><b>true</b> if the Dictionary contains an element with the specified key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.ContainsValue(`1)">
            <summary>
            Determines whether the Dictionary contains the specified value.
            </summary>
            <param name="value">The value to locate in the Dictionary.</param>
            <returns><b>true</b> if the Dictionary contains an element with the specified value; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the System.Runtime.Serialization.ISerializable interface and returns the data needed to serialize the Dictionary instance.
            </summary>
            <param name="info">A System.Runtime.Serialization.SerializationInfo object that contains the information required to serialize the Dictionary instance.</param>
            <param name="context">A System.Runtime.Serialization.StreamingContext structure that contains the source and destination of the serialized stream associated with the Dictionary instance.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.OnDeserialization(System.Object)">
            <summary>
            Implements the System.Runtime.Serialization.ISerializable interface and raises the deserialization event when the deserialization is complete.
            </summary>
            <param name="sender">The source of the deserialization event.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.Remove(`0)">
            <summary>
            Removes the value with the specified key from the Dictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns><b>true</b> if the element is successfully found and removed; otherwise, <b>false</b>. This method returns <b>false</b> if key is not found in the Dictionary.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <i>value</i> parameter. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if the Dictionary contains an element with the specified key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds the specified value to the ICollection with the specified key.
            </summary>
            <param name="item">The KeyValuePair structure representing the key and value to add to the Dictionary.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the ICollection contains a specific key and value.
            </summary>
            <param name="item">The KeyValuePair structure to locate in the ICollection.</param>
            <returns><b>true</b> if keyValuePair is found in the ICollection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an array of type KeyValuePair, starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional array of type KeyValuePair that is the destination of the KeyValuePair elements copied from the ICollection. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes a key and value from the dictionary.
            </summary>
            <param name="item">The KeyValuePair structure representing the key and value to remove from the Dictionary.</param>
            <returns><b>true</b> if the key and value represented by keyValuePair is successfully found and removed; otherwise, <b>false</b>. This method returns <b>false</b> if keyValuePair is not found in the ICollection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">The object to use as the key.</param>
            <param name="value">The object to use as the value.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the IDictionary.</param>
            <returns><b>true</b> if the IDictionary contains an element with the specified key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
            <returns>An IDictionaryEnumerator for the IDictionary.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an array, starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from ICollection. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.Comparer">
            <summary>
            Gets the IEqualityComparer that is used to determine equality of keys for the dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.Count">
            <summary>
            Gets the number of key/value pairs contained in the Dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException, and a set operation creates a new element with the specified key.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.Keys">
            <summary>
            Gets a collection containing the keys in the Dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.Values">
            <summary>
            Gets a collection containing the values in the Dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the dictionary is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Gets or sets the value with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key, or a null reference (Nothing in Visual Basic) if key is not in the dictionary or key is of a type that is not assignable to the key type TKey of the Dictionary.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedDictionary`2.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.MultiObjectModel`2">
            <summary>
            多对象MVC模型类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Kalman.Web.MVC.Model.MultiObjectModel`2.Item1">
            <summary>
            对象1
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.MultiObjectModel`2.Item2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.MultiObjectModel`3">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
        </member>
        <member name="P:Kalman.Web.MVC.Model.MultiObjectModel`3.Item1">
            <summary>
            对象1
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.MultiObjectModel`3.Item2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.MultiObjectModel`3.Item3">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ToHex(System.Byte)">
            <summary>
            转十六进制
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ToHex(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            转十六进制
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ToBase64String(System.Byte[])">
            <summary>
            将 8 位无符号整数数组转换为它的等效 System.String 表示形式（使用 Base 64 数字编码）
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ToInt(System.Byte[],System.Int32)">
            <summary>
            返回由字节数组中指定位置的八个字节转换来的 32 位有符号整数
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ToInt64(System.Byte[],System.Int32)">
            <summary>
            返回由字节数组中指定位置的八个字节转换来的 64 位有符号整数
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.Decode(System.Byte[],System.Text.Encoding)">
            <summary>
            转换为指定编码字符串
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.Save(System.Byte[],System.String)">
            <summary>
            保存到文件
            </summary>
            <param name="data"></param>
            <param name="path"></param>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ToMemoryStream(System.Byte[])">
            <summary>
            保存到内存流
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ComputeHash(System.Byte[],Kalman.Security.HashAlgorithmType)">
            <summary>
            使用指定哈希算法计算哈希值
            </summary>
            <param name="data"></param>
            <param name="hashEnum"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ByteExt.ComputeHash(System.Byte[])">
            <summary>
            使用默认Hash算法SHA1计算哈希值
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.TransactionScopeConnections">
            <summary>
            	This class manages the connections that will be used when transactions are active
            	as a result of instantiating a <see cref="T:System.Transactions.TransactionScope"/>. When a transaction
            	is active, all database access must be through this single connection unless you want
            	to use a distributed transaction, which is an expensive operation.
            </summary>
        </member>
        <member name="M:Kalman.Data.TransactionScopeConnections.GetConnection(Kalman.Data.Database)">
            <summary>
            	Returns a connection for the current transaction. This will be an existing <see cref="T:System.Data.Common.DbConnection"/>
            	instance or a new one if there is a <see cref="T:System.Transactions.TransactionScope"/> active. Otherwise this method
            	returns null.
            </summary>
            <param name="db"></param>
            <returns>Either a <see cref="T:System.Data.Common.DbConnection"/> instance or null.</returns>
        </member>
        <member name="M:Kalman.Data.TransactionScopeConnections.OnTransactionCompleted(System.Object,System.Transactions.TransactionEventArgs)">
            <summary>
            	This event handler is called whenever a transaction is about to be disposed, which allows
            	us to remove the transaction from our list and dispose the connection instance we created.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Kalman.Utilities.CheckUtil">
            <summary>
            方法参数检查工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentNotNull(System.Object,System.String)">
            <summary>
            检查参数不为空
            </summary>
            <param name="value">待检查的参数值</param>
            <param name="parameterName">参数名称</param>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentNotNullOrEmpty(System.String,System.String)">
            <summary>
            检查一个参数不为Null或者空
            </summary>
            <param name="value">待检查的参数值</param>
            <param name="parameterName">参数名称</param>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentNotNullOrEmptyOrWhitespace(System.String,System.String)">
            <summary>
            检查一个参数不为null或空或空白
            </summary>
            <param name="value">待检查的参数值</param>
            <param name="parameterName">参数名称</param>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentNotNullOrEmptyForGenericCollection``1(System.Collections.Generic.ICollection{``0},System.String)">
            <summary>
            检查集合参数不为null或空
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">待检查的集合</param>
            <param name="parameterName">参数名称</param>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentNotNullOrEmptyForGenericCollection``1(System.Collections.Generic.ICollection{``0},System.String,System.String)">
            <summary>
            检查集合参数不为null或空
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">待检查的集合</param>
            <param name="parameterName">参数名称</param>
            <param name="errorMessage">指定的错误消息</param>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentNotNullOrEmptyForCollection(System.Collections.ICollection,System.String)">
            <summary>
            检查集合参数不为null或空
            </summary>
            <param name="collection">待检查的集合</param>
            <param name="parameterName">参数名称</param>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentNotNullOrEmptyForCollection(System.Collections.ICollection,System.String,System.String)">
            <summary>
            检查集合参数不为null或空
            </summary>
            <param name="collection">待检查的集合</param>
            <param name="parameterName">参数名称</param>
            <param name="errorMessage">指定的错误消息</param>
        </member>
        <member name="M:Kalman.Utilities.CheckUtil.ArgumentTypeIsEnum(System.Type,System.String)">
            <summary>
            检查指定类型的参数是一个枚举类型
            </summary>
            <param name="type">The type argument.</param>
            <param name="parameterName">Name of the parameter.</param>
        </member>
        <member name="T:Kalman.ServiceModel.WcfSelfHost`2">
            <summary>
            一个简单的WCF自托管组件，可以方便的在单元测试和控制台程序中使用，不需要配置也不需要代理类
            </summary>
            <typeparam name="T">契约对应的实现类型</typeparam>
            <typeparam name="I">契约接口类型</typeparam>
        </member>
        <member name="F:Kalman.ServiceModel.WcfSelfHost`2._ENDPOINTURL">
            <summary>
            {protocol}//{host}:{port}
            </summary>
        </member>
        <member name="F:Kalman.ServiceModel.WcfSelfHost`2._portMap">
            <summary>
            string == address
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.WcfSelfHost`2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.WcfSelfHost`2.Dispose(System.Boolean)">
            <summary>
            释放服务宿主资源
            </summary>
            <param name="isDisposing">如果为True则调用Dispose</param>
        </member>
        <member name="M:Kalman.ServiceModel.WcfSelfHost`2.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.WcfSelfHost`2.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="P:Kalman.ServiceModel.WcfSelfHost`2.Client">
            <summary>
            获取服务的客户端代理实例
            </summary>
        </member>
        <member name="T:Kalman.PdmParser.PDModel">
            <summary>
            PowerDesigner物理模型对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDModel.AllPackageList">
            <summary>
            获取该模型所有的包对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDModel.AllTableList">
            <summary>
            获取该模型所有的表对象
            </summary>
        </member>
        <member name="T:Kalman.PdmParser.PDDbms">
            <summary>
            数据库管理系统对象
            </summary>
        </member>
        <member name="T:Kalman.Logging.ExceptionEventArgs">
            <summary>
            日志组件抛出异常的时候使用
            </summary>
        </member>
        <member name="P:Kalman.Logging.ExceptionEventArgs.Exception">
            <summary>
            获取或设置抛出的异常
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.EntityDetailModel`2">
            <summary>
            包含实体及其明细列表的MVC模型对象
            应用场景：比如显示订单及订单明细
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.SingleObjectModel`1">
            <summary>
            单实体MVC模型类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Kalman.Web.MVC.Model.SingleObjectModel`1.Entity">
            <summary>
            实体对象
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.EntityDetailModel`2.ItemList">
            <summary>
            数据项列表
            </summary>
        </member>
        <member name="T:Kalman.Utilities.SignUtil">
            <summary>
            签名工具类，用于计算接口调用时计算接口签名
            </summary>
        </member>
        <member name="M:Kalman.Utilities.SignUtil.#ctor">
            <summary>
            构造函数，初始化签名算法为MD5，编码为UTF-8
            </summary>
        </member>
        <member name="M:Kalman.Utilities.SignUtil.#ctor(System.Text.Encoding)">
            <summary>
            构造函数，初始化签名算法为MD5
            </summary>
            <param name="encoding"></param>
        </member>
        <member name="M:Kalman.Utilities.SignUtil.#ctor(Kalman.Security.HashAlgorithmType)">
            <summary>
            构造函数，初始化编码为UTF-8
            </summary>
        </member>
        <member name="M:Kalman.Utilities.SignUtil.#ctor(Kalman.Security.HashAlgorithmType,System.Text.Encoding)">
            <summary>
            构造函数，需要指定签名算法及编码
            </summary>
        </member>
        <member name="M:Kalman.Utilities.SignUtil.Sign(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            计算签名
            </summary>
            <param name="nvc">该集合保存签名相关参数的值</param>
            <param name="secretKey">签名密钥</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.SignUtil.SignUrl(System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            生成带签名的url
            </summary>
            <param name="baseUrl"></param>
            <param name="urlParams"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.SignUtil.SignUrlInAlphabeticalOrder(System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            生成带签名的url，参数顺序按字母顺序
            </summary>
            <param name="baseUrl"></param>
            <param name="urlParams"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Resources.Common">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Common.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Common.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Common.ArgumentNotEmpty">
            <summary>
              查找类似 参数[{0}]不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Common.ArgumentNotNull">
            <summary>
              查找类似 参数[{0}]不能为Null 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Common.ArgumentNotWhitespace">
            <summary>
              查找类似 参数[{0}]不能为空白字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:Kalman.Resources.Common.TypeConvertFailed">
            <summary>
              查找类似 类型转换失败，原始类型[{0}] -&gt; 目标类型[{1}] 的本地化字符串。
            </summary>
        </member>
        <member name="T:Kalman.RegexValidate">
            <summary>
            基于正则表达式的验证类
            </summary>
        </member>
        <member name="M:Kalman.RegexValidate.IsMatch(System.String,System.String)">
            <summary>
            判断字符串是否与指定正则表达式匹配
            </summary>
            <param name="input">要验证的字符串</param>
            <param name="regularExp">正则表达式</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsUnMinusInt(System.String)">
            <summary>
            验证非负整数（正整数 + 0）
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsPlusInt(System.String)">
            <summary>
            验证正整数
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsUnPlusInt(System.String)">
            <summary>
            验证非正整数（负整数 + 0） 
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsMinusInt(System.String)">
            <summary>
            验证负整数
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsInt(System.String)">
            <summary>
            验证整数
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsUnMinusFloat(System.String)">
            <summary>
            验证非负浮点数（正浮点数 + 0）
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsPlusFloat(System.String)">
            <summary>
            验证正浮点数
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsUnPlusFloat(System.String)">
            <summary>
            验证非正浮点数（负浮点数 + 0）
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsMinusFloat(System.String)">
            <summary>
            验证负浮点数
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsFloat(System.String)">
            <summary>
            验证浮点数
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsLetter(System.String)">
            <summary>
            验证由26个英文字母组成的字符串
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsUpperLetter(System.String)">
            <summary>
            验证由26个英文字母的大写组成的字符串
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsLowerLetter(System.String)">
            <summary>
            验证由26个英文字母的小写组成的字符串
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsNumericOrLetter(System.String)">
            <summary>
            验证由数字和26个英文字母组成的字符串
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsNumericOrLetterOrUnderline(System.String)">
            <summary>
            验证由数字、26个英文字母或者下划线组成的字符串
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsEmail(System.String)">
            <summary>
            验证email地址
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsUrl(System.String)">
            <summary>
            验证URL
            </summary>
            <param name="input">要验证的字符串</param>
            <returns>验证通过返回true</returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsTelephone(System.String)">
            <summary>
            验证电话号码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsImageFormat(System.String)">
            <summary>
            通过文件扩展名验证图像格式
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsIP(System.String)">
            <summary>
            验证IP
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsDate(System.String)">
            <summary>
            验证日期（YYYY-MM-DD）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.RegexValidate.IsDateTime(System.String)">
            <summary>
            验证日期和时间（YYYY-MM-DD HH:MM:SS）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Remoting.RemotingConfig">
            <summary>
            Remoting Config
            </summary>
        </member>
        <member name="P:Kalman.Remoting.RemotingConfig.ServerConfig">
            <summary>
            服务端配置信息
            </summary>
        </member>
        <member name="T:Kalman.PdmParser.PDReference">
            <summary>
            对象之间的关系实体
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.Package">
            <summary>
            获取或设置所属包对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.Cardinality">
            <summary>
            获取或设置基数（如0..n,1..n）
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.UpdateConstraint">
            <summary>
            获取或设置是否强制更新标志
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.DeleteConstraint">
            <summary>
            获取或设置是否强制删除标志
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.ParentTableID">
            <summary>
            获取或设置父表ID
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.ParentTable">
            <summary>
            获取父表对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.ChildTableID">
            <summary>
            获取或设置子表ID
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.ChildTable">
            <summary>
            获取子表对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.ParentKeyID">
            <summary>
            获取或设置父表的键ID
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.ParentKey">
            <summary>
            获取父表的键对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDReference.JoinList">
            <summary>
            用来查找外键字段，ReferenceJoin对象的ChildColumnID为外键列ID
            </summary>
        </member>
        <member name="T:Kalman.Logging.Formatters.MessageFormatter">
            <summary>
            MessageFormatter
            </summary>
        </member>
        <member name="M:Kalman.Extensions.DateTimeExt.ToString(System.DateTime,System.String,System.Globalization.CultureInfo)">
            <summary>
            日期时间转字符串
            </summary>
            <param name="dt"></param>
            <param name="format">
            日期格式,这里只列出部分(
            [ddMMMyy:15Oct12],[D:2012年11月5日],[d:2012-1-5],[F:2007年4月24日 16:30:15],[f:2007年4月24日 16:30],
            [G:2007-4-24 16:30:15],[g:2007-4-24 16:30],[T:16:30:15],[t:16:30],[U:2007年4月24日 8:30:15],[u:2007-04-24 16:30:15Z],
            [M|m:4月24日],[R|r:Tue, 24 Apr 2007 16:30:15 GMT],[Y|y:2007年4月],[O|o:2007-04-24T15:52:19.1562500+08:00],[s:2007-04-24T16:30:15])
            </param>
            <param name="cultureInfo">CultureInfo.InvariantCulture:不依赖区域性，比如要将日期转换为“15Oct12”这种格式时；CultureInfo.CurrentCulture:当前线程使用的区域</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.IDbSchema">
            <summary>
            
            </summary>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetDatabaseList">
            <summary>
            获取数据库列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetTableList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取表列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetTableColumnList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的列列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetTableIndexList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的索引列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetViewList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取视图列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetViewColumnList(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图所拥有的列列表
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetViewIndexList(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图所拥有的索引列表
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetCommandList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取存储过程列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetCommandParameterList(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程参数列表
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetTableSqlText(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表的Sql脚本
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetSchema(System.String)">
            <summary>
            基于DbConnection对象的元数据对象获取方法
            </summary>
            <param name="metaDataCollectionName">元数据集合名</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetSchema(System.String,System.String[])">
            <summary>
            基于DbConnection对象的元数据对象获取方法
            </summary>
            <param name="metaDataCollectionName">元数据集合名</param>
            <param name="restrictions">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.IDbSchema.GetDbType(System.String)">
            <summary>
            获取.Net Framework数据类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.Data.IDbSchema.DbProvider">
            <summary>
            获取或设置数据提供者实例
            </summary>
        </member>
        <member name="T:Kalman.Collections.SynchronizedLinkedList`1">
            <summary>
            Represents a sychronized doubly linked list.
            </summary>
            <typeparam name="T">Specifies the element type of the linked list.</typeparam>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.#ctor">
            <summary>
            Initializes a new instance of the LinkedList class that is empty.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the LinkedList class that contains elements copied from the specified IEnumerable and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The IEnumerable whose elements are copied to the new LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
            <summary>
            Adds the specified new node after the specified existing node in the LinkedList.
            </summary>
            <param name="node">The LinkedListNode after which to insert <i>newNode</i>.</param>
            <param name="newNode">The new LinkedListNode to add to the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
            <summary>
            Adds a new node containing the specified value after the specified existing node in the LinkedList.
            </summary>
            <param name="node">The LinkedListNode after which to insert a new LinkedListNode containing value.</param>
            <param name="value">The value to add to the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
            <summary>
            Adds the specified new node before the specified existing node in the LinkedList.
            </summary>
            <param name="node">The LinkedListNode before which to insert <i>newNode</i>.</param>
            <param name="newNode">new LinkedListNode to add to the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
            <summary>
            Adds a new node containing the specified value before the specified existing node in the LinkedList.
            </summary>
            <param name="node">The LinkedListNode before which to insert a new LinkedListNode containing value.</param>
            <param name="value">The value to add to the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
            <summary>
            Adds the specified new node at the start of the LinkedList.
            </summary>
            <param name="node">new LinkedListNode to add at the start of the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddFirst(`0)">
            <summary>
            Adds a new node containing the specified value at the start of the LinkedList.
            </summary>
            <param name="value">The value to add at the start of the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
            <summary>
            Adds the specified new node at the end of the LinkedList.
            </summary>
            <param name="node">The new LinkedListNode to add at the end of the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.AddLast(`0)">
            <summary>
            Adds a new node containing the specified value at the end of the LinkedList.
            </summary>
            <param name="value">The value to add at the end of the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.Clear">
            <summary>
            Removes all nodes from the LinkedList.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.Contains(`0)">
            <summary>
            Determines whether a value is in the LinkedList.
            </summary>
            <param name="item">The value to locate in the LinkedList. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns><b>true</b> if value is found in the LinkedList; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire LinkedList to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from LinkedList. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.Find(`0)">
            <summary>
            Finds the first node that contains the specified value.
            </summary>
            <param name="value">The value to locate in the LinkedLis.</param>
            <returns>The first LinkedListNode that contains the specified value, if found; otherwise, a null reference (Nothing in Visual Basic).</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.FindLast(`0)">
            <summary>
            Finds the last node that contains the specified value.
            </summary>
            <param name="value">The value to locate in the LinkedList.</param>
            <returns>The last LinkedListNode that contains the specified value, if found; otherwise, a null reference (Nothing in Visual Basic).</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the System.Runtime.Serialization.ISerializable interface and returns the data needed to serialize the Dictionary instance.
            </summary>
            <param name="info">A System.Runtime.Serialization.SerializationInfo object that contains the information required to serialize the Dictionary instance.</param>
            <param name="context">A System.Runtime.Serialization.StreamingContext structure that contains the source and destination of the serialized stream associated with the Dictionary instance.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.OnDeserialization(System.Object)">
            <summary>
            Implements the System.Runtime.Serialization.ISerializable interface and raises the deserialization event when the deserialization is complete.
            </summary>
            <param name="sender">The source of the deserialization event.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
            <summary>
            Removes the specified node from the LinkedList.
            </summary>
            <param name="node">The LinkedListNode to remove from the LinkedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of the specified value from the LinkedList.
            </summary>
            <param name="item">The value to remove from the LinkedList.</param>
            <returns><b>true</b> if the element containing value is successfully removed; otherwise, <b>false</b>. This method also returns <b>false</b> if value was not found in the original LinkedList.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.RemoveFirst">
            <summary>
            Removes the node at the start of the LinkedList.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.RemoveLast">
            <summary>
            Removes the node at the end of the LinkedList.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
            Adds an item at the end of the ICollection.
            </summary>
            <param name="item">The value to add at the end of the ICollection.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedLinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an array, starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from ICollection. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Kalman.Collections.SynchronizedLinkedList`1.Count">
            <summary>
            Gets the number of nodes actually contained in the LinkedList.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedLinkedList`1.First">
            <summary>
            Gets the first node of the LinkedList.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedLinkedList`1.Last">
            <summary>
            Gets the last node of the LinkedList.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedLinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedLinkedList`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedLinkedList`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
        </member>
        <member name="T:Kalman.Utilities.NetUtil">
            <summary>
            网络应用相关工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.NetUtil.TestIpAndPort(System.String,System.Int32,System.String@)">
            <summary>
            测试指定IP的服务器端口是否打开
            </summary>
            <param name="ip">ip地址</param>
            <param name="port">端口</param>
            <param name="errMsg">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.NetUtil.GetClientIP">
            <summary>
            获取客户端IP地址
            </summary>
            <returns>ip地址</returns>
        </member>
        <member name="T:Kalman.Security.SymmetricCryto">
            <summary>
            对称加密算法
            </summary>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.CreateSymmetricAlgorithmProvider(Kalman.Security.SymmetricAlgorithmType)">
            <summary>
            创建一个对称加密算法提供者实例
            </summary>
            <param name="symmetricAlgorithmType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.GetLegalKey">
            <summary>
            生成合法的密钥
            </summary>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.GetLegalIV">
            <summary>
            生成合法的初始化向量
            </summary>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.EncryptString(System.String)">
            <summary>
            加密为字符串
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.EncryptData(System.String)">
            <summary>
            加密为数据
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.EncryptData(System.Byte[])">
            <summary>
            加密为数据
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.EncryptString(System.Byte[])">
            <summary>
            加密为字符串
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.DecryptString(System.String)">
            <summary>
            解密为字符串
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Security.SymmetricCryto.DecryptData(System.String)">
            <summary>
            解密为数据
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.PdmParser.PDProcedure.Package">
            <summary>
            所属包对象
            </summary>
        </member>
        <member name="T:Kalman.Mapping.DataReaderToObjectMapper`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Kalman.Logging.LogManager">
            <summary>
            日志管理类
            </summary>
        </member>
        <member name="M:Kalman.Logging.LogManager.GetLogger(System.String)">
            <summary>
            获取指定名称的日志记录器
            </summary>
        </member>
        <member name="M:Kalman.Logging.LogManager.GetCurrentClassLogger">
            <summary>
            获取日志记录器（为当前类找出匹配的日志记录器）
            </summary>
        </member>
        <member name="M:Kalman.Logging.LogManager.SetProvider(Kalman.Logging.ILogProvider)">
            <summary>
            设置一个日志记录器提供者
            </summary>
            <exception cref="T:System.InvalidOperationException">日志记录器提供者已经被指定</exception>
        </member>
        <member name="M:Kalman.Logging.LogManager.TriggerEvent(System.Object,System.Exception)">
            <summary>
            用于触发异常抛出事件
            </summary>
            <param name="source"></param>
            <param name="exception"></param>
        </member>
        <member name="E:Kalman.Logging.LogManager.ExceptionThrown">
            <summary>
            日志组件异常抛出事件
            </summary>
        </member>
        <member name="T:Kalman.Logging.Formatters.StackTraceFormatter">
            <summary>
            格式化堆栈帧
            </summary>
        </member>
        <member name="P:Kalman.Logging.Formatters.StackTraceFormatter.SkipCount">
            <summary>
            获取或设置跳过的帧数
            </summary>
        </member>
        <member name="P:Kalman.Logging.Formatters.StackTraceFormatter.Count">
            <summary>
            获取或设置包含的帧数
            </summary>
        </member>
        <member name="P:Kalman.Logging.Formatters.StackTraceFormatter.PadLength">
            <summary>
            获取或设置填充字符的长度
            </summary>
        </member>
        <member name="T:Kalman.IocContainer.IocContainerInMemory">
            <summary>
            Simple in Memory container to use for Unit Testing.
            </summary>
        </member>
        <member name="T:Kalman.IocContainer.IIoc">
            <summary>
            Service locator interface used for getting any service instance.
            </summary>
        </member>
        <member name="M:Kalman.IocContainer.IIoc.GetObject``1(System.String)">
            <summary>
            Get a named service  associated with the type.
            </summary>
            <param name="t"></param>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.IocContainer.IIoc.GetObject``1">
            <summary>
            Get object using just the type.
            </summary>
            <param name="t"></param>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.IocContainer.IIoc.Contains``1">
            <summary>
            Determine if the container contains the specified type.
            </summary>
            <param name="t"></param>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.IocContainer.IIoc.AddObject(System.String,System.Object)">
            <summary>
            Add a named service.
            </summary>
            <param name="t"></param>
            <param name="serviceName"></param>
            <param name="obj"></param>
        </member>
        <member name="F:Kalman.IocContainer.IocContainerInMemory.DefaultServiceName">
            <summary>
            The instance name given to the service 
            added as a default service.
            </summary>
        </member>
        <member name="M:Kalman.IocContainer.IocContainerInMemory.#ctor">
            <summary>
            Make this class a singleton.
            </summary>
        </member>
        <member name="M:Kalman.IocContainer.IocContainerInMemory.AddObject(System.String,System.Object)">
            <summary>
            Adds a service to the service to the locator.
            Supports multiple ( instances ) of a specific type.
            This is to support different implementations of specific interface
            for example.
            </summary>
            <param name="t"></param>
            <param name="instanceName"><see cref="!:ServiceNames"/></param>
            <param name="obj"></param>
        </member>
        <member name="M:Kalman.IocContainer.IocContainerInMemory.GetObject``1(System.String)">
            <summary>
            Gets a specific service with name provided.
            </summary>
            <param name="t"></param>
            <param name="serviceName"><see cref="!:ServiceNames"/></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.IocContainer.IocContainerInMemory.GetObject``1">
            <summary>
            Get object using just the type.
            </summary>
            <param name="t"></param>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.IocContainer.IocContainerInMemory.Contains``1">
            <summary>
            Determine if the container contains the specified type.
            </summary>
            <param name="t"></param>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.IISLogParser.LogParser.Clear">
            <summary>
            清除解析结果
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogParser.LogRecordNum">
            <summary>
            日志记录数
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogParser.RecordList">
            <summary>
            获取日志解析结果集
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kalman.Caching.CacheItem">
            <summary>
            This class contains all data important to define an item stored in the cache. It holds both the DEFAULT_KEY and 
            value specified by the user, as well as housekeeping information used internally by this block. It is public, 
            rather than internal, to allow block extenders access to it inside their own implementations of IBackingStore.
            </summary>
        </member>
        <member name="M:Kalman.Caching.CacheItem.#ctor(System.String,System.Object,Kalman.Caching.ICacheItemExpiration[])">
            <summary>
            Initializes a new instance of the <see cref="T:Kalman.Caching.CacheItem"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="expirations">The expirations.</param>
        </member>
        <member name="M:Kalman.Caching.CacheItem.Replace(System.Object,Kalman.Caching.ICacheItemExpiration[])">
            <summary>
            Replaces the internals of the current cache item with the given new values. This is strictly used in the Cache
            class when adding a new item into the cache. By replacing the item's contents, rather than replacing the item
            itself, it allows us to keep a single reference in the cache, simplifying locking.
            </summary>
            <param name="cacheItemData">Value to be stored. May be null.</param>
            <param name="cacheItemExpirations">Param array of ICacheItemExpiration objects. May provide 0 or more of these.</param>
        </member>
        <member name="M:Kalman.Caching.CacheItem.GetExpirations">
            <summary>
            Returns array of <see cref="T:Kalman.Caching.ICacheItemExpiration"/> objects for this instance.
            </summary>
            <returns>
            An array of <see cref="T:Kalman.Caching.ICacheItemExpiration"/> objects.
            </returns>
        </member>
        <member name="M:Kalman.Caching.CacheItem.HasExpired">
            <summary>
            Evaluates all cacheItemExpirations associated with this cache item to determine if it 
            should be considered expired. Evaluation stops as soon as any expiration returns true. 
            </summary>
            <returns>True if item should be considered expired, according to policies
            defined in this item's cacheItemExpirations.</returns>
        </member>
        <member name="M:Kalman.Caching.CacheItem.TouchedByUserAction(System.Boolean)">
            <summary>
            Intended to be used internally only. This method is called whenever a CacheItem is touched through the action of a user. It
            prevents this CacheItem from being expired or scavenged during an in-progress expiration or scavenging process. It has no effect
            on subsequent expiration or scavenging processes.
            </summary>
        </member>
        <member name="M:Kalman.Caching.CacheItem.TouchedByUserAction(System.Boolean,System.DateTime)">
            <summary>
            Intended to be used internally only. This method is called whenever a CacheItem is touched through the action of a user. It
            prevents this CacheItem from being expired or scavenged during an in-progress expiration or scavenging process. It has no effect
            on subsequent expiration or scavenging processes.
            </summary>
        </member>
        <member name="P:Kalman.Caching.CacheItem.WillBeExpired">
            <summary>
            Intended to be used internally only. The value should be true when an item is eligible to be expired.
            </summary>
        </member>
        <member name="P:Kalman.Caching.CacheItem.Value">
            <summary>
            Returns the cached value of this CacheItem
            </summary>
        </member>
        <member name="P:Kalman.Caching.CacheItem.Key">
            <summary>
            Returns the DEFAULT_KEY associated with this CacheItem
            </summary>
        </member>
        <member name="T:Kalman.Web.ResponseFile">
            <summary>
            向客户端输出文件
            </summary>
        </member>
        <member name="M:Kalman.Web.ResponseFile.Export(System.String,System.String)">
            <summary>
            输出文件
            </summary>
            <param name="path">文件物理路径</param>
            <param name="outputFilename"></param>
        </member>
        <member name="P:Kalman.Web.ResponseFile.Charset">
            <summary>
            获取或设置输出流的HTTP字符集，默认"utf-8"
            </summary>
        </member>
        <member name="P:Kalman.Web.ResponseFile.Buffer">
            <summary>
            获取或设置一个值，该值指示是否缓冲输出，并在完成处理整个响应之后将其发送，默认true
            </summary>
        </member>
        <member name="P:Kalman.Web.ResponseFile.ContentType">
            <summary>
            获取或设置输出流的 HTTP MIME 类型，默认"application/octet-stream"
            </summary>
        </member>
        <member name="P:Kalman.Web.ResponseFile.ContentEncoding">
            <summary>
            获取或设置输出流的 HTTP 字符集，默认
            </summary>
        </member>
        <member name="T:Kalman.Utilities.ConvertUtil">
            <summary>
            类型转换工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToByte(System.Object,System.Byte)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToByte(System.String,System.Byte)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToByte(System.Object,System.SByte)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToByte(System.String,System.SByte)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToByte(System.Object,System.Char)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToByte(System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToString(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToString(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToString(System.DateTime,System.String,System.Globalization.CultureInfo)">
            <summary>
            日期时间转字符串
            </summary>
            <param name="dt"></param>
            <param name="format">
            日期格式,这里只列出部分(
            [ddMMMyy:15Oct12],[D:2012年11月5日],[d:2012-1-5],[F:2007年4月24日 16:30:15],[f:2007年4月24日 16:30],
            [G:2007-4-24 16:30:15],[g:2007-4-24 16:30],[T:16:30:15],[t:16:30],[U:2007年4月24日 8:30:15],[u:2007-04-24 16:30:15Z],
            [M|m:4月24日],[R|r:Tue, 24 Apr 2007 16:30:15 GMT],[Y|y:2007年4月],[O|o:2007-04-24T15:52:19.1562500+08:00],[s:2007-04-24T16:30:15])
            </param>
            <param name="cultureInfo">CultureInfo.InvariantCulture:不依赖区域性，比如要将日期转换为“15Oct12”这种格式时；CultureInfo.CurrentCulture:当前线程使用的区域</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToInt32(System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToInt32(System.String,System.Int32)">
            <summary>
            转换为Int32，这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToNullableInt32(System.String)">
            <summary>
            转换为Int32?，这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToInt16(System.Object,System.Int16)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToInt16(System.String,System.Int16)">
            <summary>
            转换为Int16，这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToNullableInt16(System.String)">
            <summary>
            转换为Int16?，这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToInt64(System.Object,System.Int64)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToInt64(System.String,System.Int64)">
            <summary>
            转换为Int64?，这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToNullableInt64(System.String)">
            <summary>
            转换为Int64?，这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToUInt32(System.Object,System.UInt32)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToUInt32(System.String,System.UInt32)">
            <summary>
            转换为UInt32，这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToNullableUInt32(System.String)">
            <summary>
            这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToUInt16(System.Object,System.UInt16)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToUInt16(System.String,System.UInt16)">
            <summary>
            这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToNullableUInt16(System.String)">
            <summary>
            这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToUInt64(System.Object,System.UInt64)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToUInt64(System.String,System.UInt64)">
            <summary>
            这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToNullableUInt64(System.String)">
            <summary>
            这里会将字符串true转换为1，false转换为0
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToDecimal(System.Object,System.Decimal)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToDecimal(System.String,System.Decimal)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToDouble(System.Object,System.Double)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToDouble(System.String,System.Double)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToSingle(System.Object,System.Single)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToSingle(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToDateTime(System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToDateTime(System.Object,System.DateTime)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToBoolean(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToBoolean(System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToObject``1(System.Data.IDataReader)">
            <summary>
            将IDataReader转换成对象实体
            </summary>
            <typeparam name="T">目标对象类型</typeparam>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ConvertUtil.ToList``1(System.Data.IDataReader)">
            <summary>
            将IDataReader转换成对象实体列表
            </summary>
            <typeparam name="T">目标对象类型</typeparam>
            <param name="reader"></param>
        </member>
        <member name="M:Kalman.Extensions.ObjectExt.ToDictionary(System.Object)">
            <summary>
            将对象属性数据保存到字典
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ObjectExt.FromDictionary``1(System.Collections.Generic.Dictionary{System.String,System.Object},``0)">
            <summary>
            从字典中还原对象属性数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="settings"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ObjectExt.CopyTo``1(System.Object,``0)">
            <summary>
            将对象属性数据拷贝到另一个同类型对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="From"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ObjectExt.ConvertType``1(System.Object)">
            <summary>
            类型转换
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.ObjectExt.DeepClone``1(``0)">
            <summary>
            实现对象的深拷贝
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.CachingMechanism">
            <devdoc>
            CachingMechanism provides caching support for stored procedure 
            parameter discovery and caching
            </devdoc>
        </member>
        <member name="M:Kalman.Data.CachingMechanism.CloneParameters(System.Data.IDataParameter[])">
            <devdoc>
            Create and return a copy of the IDataParameter array.
            </devdoc>        
        </member>
        <member name="M:Kalman.Data.CachingMechanism.Clear">
            <devdoc>
            Empties all items from the cache
            </devdoc>
        </member>
        <member name="M:Kalman.Data.CachingMechanism.AddParameterSetToCache(System.String,System.Data.IDbCommand,System.Data.IDataParameter[])">
            <devdoc>
            Add a parameter array to the cache for the command.
            </devdoc>        
        </member>
        <member name="M:Kalman.Data.CachingMechanism.GetCachedParameterSet(System.String,System.Data.IDbCommand)">
            <devdoc>
            Gets a parameter array from the cache for the command. Returns null if no parameters are found.
            </devdoc>        
        </member>
        <member name="M:Kalman.Data.CachingMechanism.IsParameterSetCached(System.String,System.Data.IDbCommand)">
            <devdoc>
            Gets if a given stored procedure on a specific connection string has a cached parameter set
            </devdoc>        
        </member>
        <member name="T:Kalman.Mapping.MapExt">
            <summary>
            EmitMapper扩展类
            </summary>
        </member>
        <member name="T:Kalman.Logging.Formatters.ExceptionFormatter">
            <summary>
            异常信息格式化器
            </summary>
        </member>
        <member name="T:Kalman.IocContainer.Ioc">
            <summary>
            Helper class to get a service object out of the 
            service locator.
            </summary>
        </member>
        <member name="M:Kalman.IocContainer.Ioc.Init(Kalman.IocContainer.IIoc)">
            <summary>
            Sets the object container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Kalman.IocContainer.Ioc.AddObject(System.String,System.Object)">
            <summary>
            Adds the object to the container.
            </summary>
            <param name="objName">Name of the obj.</param>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:Kalman.IocContainer.Ioc.GetObject``1(System.String)">
            <summary>
            Get the service and automatically converts to the appropriate type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Kalman.IocContainer.Ioc.GetObject``1">
            <summary>
            Get the object using just the type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Kalman.IocContainer.Ioc.Contains``1">
            <summary>
            Determine if the container contains the specified type.
            </summary>
            <param name="t"></param>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.QuoteIdentifier(System.String)">
            <summary>
            以正确的目录大小写给定一个不带引号的标识符，返回该标识符的带引号的正确形式，包括正确转义该标识符中嵌入的任何引号。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.ExecuteQuery(Kalman.Data.SchemaObject.SODatabase,System.String)">
            <summary>
            在指定数据库上执行一个查询，返回一个结果集
            </summary>
            <param name="db"></param>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetDatabaseList">
            <summary>
            获取数据库列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetTableList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取表列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetTableColumnList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的列列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetTableIndexList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的索引列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetViewList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取视图列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetViewColumnList(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图所拥有的列列表
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetViewIndexList(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图所拥有的索引列表
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetCommandList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取存储过程列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetCommandParameterList(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程参数列表
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetTableSqlText(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表的Sql脚本
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetSchema(System.String)">
            <summary>
            基于DbConnection对象的元数据对象获取方法
            </summary>
            <param name="metaDataCollectionName">元数据集合名</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetSchema(System.String,System.String[])">
            <summary>
            基于DbConnection对象的元数据对象获取方法
            </summary>
            <param name="metaDataCollectionName">元数据集合名</param>
            <param name="restrictions">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetDbType(System.String)">
            <summary>
            获取.Net Framework数据类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchema.GetType(System.String)">
            <summary>
            获取System.Type类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_Databases">
            <summary>
            [数据库]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_Tables">
            <summary>
            元数据集合名称[表]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_Columns">
            <summary>
            元数据集合名称[列]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_Views">
            <summary>
            元数据集合名称[视图]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_ViewColumns">
            <summary>
            元数据集合名称[视图列]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_Indexes">
            <summary>
            元数据集合名称[索引]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_IndexColumns">
            <summary>
            元数据集合名称[索引列]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_Procedures">
            <summary>
            元数据集合名称[存储过程]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.MetaDataCollectionName_Parameters">
            <summary>
            元数据集合名称[存储过程参数]
            </summary>
        </member>
        <member name="P:Kalman.Data.DbSchema.DbProvider">
            <summary>
            获取或设置数据提供者实例
            </summary>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SQLiteSchema.GetTableSqlText(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表的Sql脚本
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SQLiteSchema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SQLiteSchema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SQLiteSchema.GetDbType(System.String)">
            <summary>
            获取.Net Framework数据类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Command.WinrarHelper">
            <summary>
            利用Winrar的Dos命令行工具rar.exe压缩解压缩的帮助类
            </summary>
        </member>
        <member name="M:Kalman.Command.WinrarHelper.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="rarExePath"></param>
        </member>
        <member name="M:Kalman.Command.WinrarHelper.Zip(System.String,System.String)">
            <summary>
            利用rar.exe压缩文件
            </summary>
            <param name="srcPath">源路径，可以是文件或者文件夹路径</param>
            <param name="targetPath">目标路径，压缩后的压缩文件路径</param>
        </member>
        <member name="M:Kalman.Command.WinrarHelper.Zip(System.String[],System.String)">
            <summary>
            压缩多个文件
            </summary>
            <param name="srcFiles">文件路径集合</param>
            <param name="targetPath"></param>
        </member>
        <member name="M:Kalman.Command.WinrarHelper.Unzip(System.String,System.String)">
            <summary>
            利用rar.exe解压文件（覆盖目标文件）
            </summary>
            <param name="srcPath">要解压缩的压缩文件路径</param>
            <param name="targetPath">解压目标文件夹路径</param>
        </member>
        <member name="M:Kalman.Command.WinrarHelper.Rar(System.String)">
            <summary>
            利用rar.exe压缩解压，执行自定义的压缩解压命令
            </summary>
            <param name="cmdLine">命令行（不包含rar.exe的路径）</param>
        </member>
        <member name="T:Kalman.Command.CmdHelper">
            <summary>
            命令行帮助类
            </summary>
        </member>
        <member name="M:Kalman.Command.CmdHelper.Execute(System.String)">
            <summary>
            调用cmd.exe执行一条命令
            </summary>
            <param name="commandText"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Command.CmdHelper.Execute(System.String[])">
            <summary>
            调用cmd.exe执行多条命令
            </summary>
            <param name="cmdTexts"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Command.CmdHelper.RunApp(System.String)">
            <summary>
            启动外部Windows应用程序，隐藏程序界面
            </summary>
            <param name="appName">应用程序名</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Command.CmdHelper.RunApp(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            启动外部应用程序
            </summary>
            <param name="appName">应用程序名</param>
            <param name="style">应用程序启动时窗口显示样式</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Command.CmdHelper.RunApp(System.String,System.String)">
            <summary>
            启动外部应用程序，隐藏程序界面
            </summary>
            <param name="appName">应用程序名</param>
            <param name="args">参数</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Command.CmdHelper.RunApp(System.String,System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            启动外部应用程序
            </summary>
            <param name="appName">应用程序名</param>
            <param name="args">参数</param>
            <param name="style">应用程序启动时窗口显示样式</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Collections.SynchronizedStack`1">
            <summary>
            Represents a variable size last-in-first-out (LIFO) collection of instances of the same arbitrary type.
            </summary>
            <typeparam name="T">Specifies the type of elements in the stack.</typeparam>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.#ctor">
            <summary>
            Initializes a new instance of the Stack class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the Stack class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Stack class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <param name="capacity">The initial number of elements that the Stack can contain.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.Clear">
            <summary>
            Removes all objects from the Stack.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.Contains(`0)">
            <summary>
            Determines whether an element is in the Stack.
            </summary>
            <param name="item">The object to locate in the Stack. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns><b>true</b> if item is found in the Stack; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the Stack to an existing one-dimensional Array, starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from Stack. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.GetEnumerator">
            <summary>
            Returns an enumerator for the Stack.
            </summary>
            <returns>An Stack.Enumerator for the Stack.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.Peek">
            <summary>
            Returns the object at the top of the Stack without removing it.
            </summary>
            <returns>The object at the top of the Stack.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.Pop">
            <summary>
            Removes and returns the object at the top of the Stack.
            </summary>
            <returns>The object removed from the top of the Stack.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.Push(`0)">
            <summary>
            Inserts an object at the top of the Stack.
            </summary>
            <param name="item">The object to push onto the Stack. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.ToArray">
            <summary>
            Copies the Stack to a new array.
            </summary>
            <returns>A new array containing copies of the elements of the Stack.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.TrimExcess">
            <summary>
            Sets the capacity to the actual number of elements in the Stack, if that number is less than 90 percent of current capacity.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Kalman.Collections.SynchronizedStack`1.Count">
            <summary>
            Gets the number of elements contained in the Stack.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedStack`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedStack`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
        </member>
        <member name="T:Kalman.Data.UpdateBehavior">
            <summary>
            使用Database.UpdateDataSet方法当DataAdapter的更新命令遇到错误时，选择采用哪种更新行为
            </summary>
        </member>
        <member name="F:Kalman.Data.UpdateBehavior.Standard">
            <summary>
            标准行为，更新数据时遇到错误后终止，剩下的数据行不再更新
            </summary>
        </member>
        <member name="F:Kalman.Data.UpdateBehavior.Continue">
            <summary>
            更新数据时遇到错误后继续更新后面的数据行
            </summary>
        </member>
        <member name="F:Kalman.Data.UpdateBehavior.Transactional">
            <summary>
            使用实物，所有更新过的数据行自动回滚
            </summary>
        </member>
        <member name="T:Kalman.Utilities.CollectionUtil">
            <summary>
            集合工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.CollectionUtil.Implode(System.Collections.ICollection,System.String)">
            <summary>
            将集合对象转换为指定字符分隔的字符串
            </summary>
            <param name="collection">集合对象</param>
            <param name="separator">分隔字符</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.CollectionUtil.FormatToString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将NameValueCollection集合转换成字符串
            </summary>
            <param name="nvc">NameValueCollection集合对象</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Kalman.Utilities.CollectionUtil.FormatToString(System.Collections.Specialized.NameValueCollection,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Kalman.Utilities.CollectionUtil.FormatToString(System.Collections.IDictionary,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Kalman.Utilities.CollectionUtil.FormatToString``2(System.Collections.Generic.IDictionary{``0,``1},System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="T:Kalman.Remoting.HostManager">
            <summary>
            Remoting宿主管理类
            宿主监控（监控宿主的状态，并标志不可用的宿主）
            负载均衡（将客户端的远程调用请求均匀的分配到各个宿主）
            </summary>
        </member>
        <member name="M:Kalman.Remoting.HostManager.PollingHost">
            <summary>
            轮询Remoting宿主，检测其是否可用
            </summary>
        </member>
        <member name="M:Kalman.Remoting.HostManager.GetCurrentHostAddress">
            <summary>
            获取当前Host地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.HostManager.GetCurrentHostAddress(System.String)">
            <summary>
            获取当前Host地址
            </summary>
            <param name="clientName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.HostManager.GetUsableHostAddress(System.String)">
            <summary>
            从Client可用Host列表中随机获取一个可用的Host
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.HostManager.GetHostStateInfo(System.String,System.String)">
            <summary>
            返回Host状态信息，只记录异常信息
            </summary>
            <param name="clientName"></param>
            <param name="hostName"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Logging.LogLevel">
            <summary>
            日志记录级别
            </summary>
        </member>
        <member name="F:Kalman.Logging.LogLevel.Trace">
            <summary>
            记录用来跟踪程序的执行情况的信息
            </summary>
        </member>
        <member name="F:Kalman.Logging.LogLevel.Debug">
            <summary>
            记录用来帮助程序调式的信息
            </summary>
        </member>
        <member name="F:Kalman.Logging.LogLevel.Info">
            <summary>
            记录正常信息
            </summary>
        </member>
        <member name="F:Kalman.Logging.LogLevel.Warning">
            <summary>
            记录警告信息，可能发生了错误，但是不影响程序执行
            </summary>
        </member>
        <member name="F:Kalman.Logging.LogLevel.Error">
            <summary>
            记录错误信息，程序发生了异常，但是没有必要终止程序
            </summary>
        </member>
        <member name="F:Kalman.Logging.LogLevel.Fatal">
            <summary>
            记录致命错误信息，程序发生了致命异常，必须重新启动程序
            </summary>
        </member>
        <member name="T:Kalman.Logging.LogEntry">
            <summary>
            日志实体类
            </summary>
        </member>
        <member name="M:Kalman.Logging.LogEntry.Clone">
            <summary>
            克隆一个日志实体
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kalman.Logging.LogEntry.Level">
            <summary>
            获取或设置日志级别
            </summary>
        </member>
        <member name="P:Kalman.Logging.LogEntry.Message">
            <summary>
            获取或设计日志消息
            </summary>
        </member>
        <member name="P:Kalman.Logging.LogEntry.CreatedAt">
            <summary>
            获取或设置日志创建时间
            </summary>
        </member>
        <member name="P:Kalman.Logging.LogEntry.ThreadID">
            <summary>
            获取或设置写日志的线程ID
            </summary>
        </member>
        <member name="P:Kalman.Logging.LogEntry.StackFrames">
            <summary>
            获取或设置堆栈帧数组
            </summary>
        </member>
        <member name="P:Kalman.Logging.LogEntry.Exception">
            <summary>
            获取或设置应用程序抛出的异常
            </summary>
        </member>
        <member name="P:Kalman.Logging.LogEntry.Logger">
            <summary>
            获取或设置日志实体所属的日志记录器
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.MySqlDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            构造函数，指定数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
            <param name="dbProviderFactory"></param>
        </member>
        <member name="M:Kalman.Data.DbProvider.MySqlDatabase.#ctor(System.String)">
            <summary>
            构造函数，指定数据提供程序固定名称，用于创建数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:Kalman.Security.AsymmetricAlgorithmType">
            <summary>
            不对称加密算法类型枚举
            </summary>
        </member>
        <member name="T:Kalman.Remoting.RCHelper">
            <summary>
            Remoting客户端代理类，客户端通过该对象来访问远程对象的代理实例
            </summary>
        </member>
        <member name="M:Kalman.Remoting.RCHelper.GetWellKnownObject``1(System.String,System.String)">
            <summary>
            获取远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="hostUrl"></param>
            <param name="objectUri"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.RCHelper.GetWellKnownObject``1">
            <summary>
            获取远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.RCHelper.GetWellKnownObject``1(System.String)">
            <summary>
            获取指定客户端名称的远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="clientName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.RCHelper.GetRemoteObject``1(System.String)">
            <summary>
            获取默认客户端的远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectUri"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Net.FtpClient">
            <summary>
            FTP客户端组件（该组件来自Discuz.Net，已修改命令行中有中文时会出现乱码的问题）
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.server">
            <summary>
            服务器连接地址
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.user">
            <summary>
            登陆帐号
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.pass">
            <summary>
            登陆口令
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.port">
            <summary>
            端口号
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.timeout">
            <summary>
            无响应时间（FTP在指定时间内无响应）
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.errormessage">
            <summary>
            服务器错误状态信息
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.messages">
            <summary>
            服务器状态返回信息
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.responseStr">
            <summary>
            服务器的响应信息
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.passive_mode">
            <summary>
            链接模式（主动或被动，默认为被动）
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.bytes_total">
            <summary>
            上传或下载信息字节数
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.file_size">
            <summary>
            上传或下载的文件大小
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.main_sock">
            <summary>
            主套接字
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.main_ipEndPoint">
            <summary>
            要链接的网络地址终结点
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.listening_sock">
            <summary>
            侦听套接字
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.data_sock">
            <summary>
            数据套接字
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.data_ipEndPoint">
            <summary>
            要链接的网络数据地址终结点
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.file">
            <summary>
            用于上传或下载的文件流对象
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.response">
            <summary>
            与FTP服务器交互的状态值
            </summary>
        </member>
        <member name="F:Kalman.Net.FtpClient.bucket">
            <summary>
            读取并保存当前命令执行后从FTP服务器端返回的数据信息
            </summary>
        </member>
        <member name="M:Kalman.Net.FtpClient.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Kalman.Net.FtpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
            <param name="mode">链接方式</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.#ctor(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
            <param name="mode">链接方式</param>
            <param name="timeout_sec">无响应时间(限时),单位:秒 (小于或等于0为不受时间限制)</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.Fail">
            <summary>
            操作失败
            </summary>
        </member>
        <member name="M:Kalman.Net.FtpClient.ReadResponse">
            <summary>
            返回服务器端返回信息
            </summary>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenDataSocket">
            <summary>
            打开数据套接字
            </summary>
        </member>
        <member name="M:Kalman.Net.FtpClient.Disconnect">
            <summary>
            关闭所有链接
            </summary>
        </member>
        <member name="M:Kalman.Net.FtpClient.Connect(System.String,System.Int32,System.String,System.String)">
            <summary>
            链接到FTP服务器
            </summary>
            <param name="server">要链接的IP地址或主机名</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.Connect(System.String,System.String,System.String)">
            <summary>
            链接到FTP服务器
            </summary>
            <param name="server">要链接的IP地址或主机名</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.Connect">
            <summary>
            链接到FTP服务器
            </summary>
        </member>
        <member name="M:Kalman.Net.FtpClient.List">
            <summary>
            获取FTP当前(工作)目录下的文件列表
            </summary>
            <returns>返回文件列表数组</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.ListFiles">
            <summary>
            获取到文件名列表
            </summary>
            <returns>返回文件名列表</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.ListDirectories">
            <summary>
            获取路径列表
            </summary>
            <returns>返回路径列表</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.GetFileDateRaw(System.String)">
            <summary>
            获取原始数据信息.
            </summary>
            <param name="fileName">远程文件名</param>
            <returns>返回原始数据信息.</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.GetFileDate(System.String)">
            <summary>
            得到文件日期.
            </summary>
            <param name="fileName">远程文件名</param>
            <returns>返回远程文件日期</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.GetWorkingDirectory">
            <summary>
            获取FTP上的当前(工作)路径
            </summary>
            <returns>返回FTP上的当前(工作)路径</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.ChangeDir(System.String)">
            <summary>
            跳转服务器上的当前(工作)路径
            </summary>
            <param name="path">要跳转的路径</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.MakeDir(System.String)">
            <summary>
            创建指定的目录
            </summary>
            <param name="dir">要创建的目录</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.RemoveDir(System.String)">
            <summary>
            移除FTP上的指定目录
            </summary>
            <param name="dir">要移除的目录</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.RemoveFile(System.String)">
            <summary>
            移除FTP上的指定文件
            </summary>
            <param name="filename">要移除的文件名称</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.RenameFile(System.String,System.String)">
            <summary>
            重命名FTP上的文件
            </summary>
            <param name="oldfilename">原文件名</param>
            <param name="newfilename">新文件名</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.GetFileSize(System.String)">
            <summary>
            获得指定文件的大小(如果FTP支持)
            </summary>
            <param name="filename">指定的文件</param>
            <returns>返回指定文件的大小</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenUpload(System.String)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">要上传的文件</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenUpload(System.String,System.String)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">本地文件名</param>
            <param name="remotefilename">远程要覆盖的文件名</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenUpload(System.String,System.Boolean)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">本地文件名</param>
            <param name="resume">如果存在,则尝试恢复</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenUpload(System.String,System.String,System.Boolean)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">本地文件名</param>
            <param name="remote_filename">远程要覆盖的文件名</param>
            <param name="resume">如果存在,则尝试恢复</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenDownload(System.String)">
            <summary>
            下载指定文件
            </summary>
            <param name="filename">远程文件名称</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenDownload(System.String,System.Boolean)">
            <summary>
            下载并恢复指定文件
            </summary>
            <param name="filename">远程文件名称</param>
            <param name="resume">如文件存在,则尝试恢复</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenDownload(System.String,System.String)">
            <summary>
            下载指定文件
            </summary>
            <param name="filename">远程文件名称</param>
            <param name="localfilename">本地文件名</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.OpenDownload(System.String,System.String,System.Boolean)">
            <summary>
            打开并下载文件
            </summary>
            <param name="remote_filename">远程文件名称</param>
            <param name="local_filename">本地文件名</param>
            <param name="resume">如果文件存在则恢复</param>
        </member>
        <member name="M:Kalman.Net.FtpClient.DoUpload">
            <summary>
            上传文件(循环调用直到上传完毕)
            </summary>
            <returns>发送的字节数</returns>
        </member>
        <member name="M:Kalman.Net.FtpClient.DoDownload">
            <summary>
            下载文件(循环调用直到下载完毕)
            </summary>
            <returns>接收到的字节点</returns>
        </member>
        <member name="P:Kalman.Net.FtpClient.IsConnected">
            <summary>
            当前是否已连接
            </summary>
        </member>
        <member name="P:Kalman.Net.FtpClient.MessagesAvailable">
            <summary>
            当message缓冲区有数据则返回
            </summary>
        </member>
        <member name="P:Kalman.Net.FtpClient.Messages">
            <summary>
            获取服务器状态返回信息, 并清空messages变量
            </summary>
        </member>
        <member name="P:Kalman.Net.FtpClient.ResponseString">
            <summary>
            最新指令发出后服务器的响应
            </summary>
        </member>
        <member name="P:Kalman.Net.FtpClient.BytesTotal">
             <summary>
            在一次传输中,发送或接收的字节数
             </summary>
        </member>
        <member name="P:Kalman.Net.FtpClient.FileSize">
             <summary>
            被下载或上传的文件大小,当文件大小无效时为0
             </summary>
        </member>
        <member name="P:Kalman.Net.FtpClient.PassiveMode">
            <summary>
            链接模式: 
            true 被动模式 [默认]
            false: 主动模式
            </summary>
        </member>
        <member name="T:Kalman.Data.DbSchemaFactory">
            <summary>
            数据库架构工厂类
            </summary>
        </member>
        <member name="M:Kalman.Data.DbSchemaFactory.Create(System.String)">
            <summary>
            创建一个数据库架构实例
            </summary>
            <param name="connectionStringName">连接字符串名称</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaFactory.Create(Kalman.Data.Database)">
            <summary>
            创建一个数据库架构实例
            </summary>
            <param name="db">数据提供程序实例</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SOColumn">
            <summary>
            列架构对象
            </summary>
        </member>
        <member name="M:Kalman.Data.SchemaObject.SOColumn.IsNumeric">
            <summary>
            判断当前列是否数字类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.SchemaObject.SOColumn.IsInt">
            <summary>
            判断当前列是否整数类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.SchemaObject.SOColumn.IsDecimal">
            <summary>
            判断当前列是否小数类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.SchemaObject.SOColumn.IsDateTime">
            <summary>
            判断当前列是否日期类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.SchemaObject.SOColumn.IsString">
            <summary>
            判断当前列是否字符串类型
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.Parent">
            <summary>
            父对象，所属表或视图
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.PrimaryKey">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.ForeignKey">
            <summary>
            是否外键
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.Identify">
            <summary>
            是否标志字段
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.NativeType">
            <summary>
            原生类型，数据库定义的类型
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.DataType">
            <summary>
            数据类型，原生类型所对应的.Net Framework所定义的数据类型
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.Nullable">
            <summary>
            是否允许空值
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.Precision">
            <summary>
            精度[字段长度]
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.Scale">
            <summary>
            小数位数
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.Length">
            <summary>
            长度，nchar(10)，char(10)长度都是10，但nchar(10)的Size为20
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOColumn.Database">
            <summary>
            获取所属数据库对象
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.SQLiteDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            构造函数，指定数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
            <param name="dbProviderFactory"></param>
        </member>
        <member name="M:Kalman.Data.DbProvider.SQLiteDatabase.#ctor(System.String)">
            <summary>
            构造函数，指定数据提供程序固定名称，用于创建数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:Kalman.Collections.SynchronizedList`1">
            <summary>
            Represents a strongly typed list of objects that can be accessed by index. Provides methods to search, sort, and manipulate lists.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.#ctor">
            <summary>
            Initializes a new instance of the List class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the List class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the List class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Add(`0)">
            <summary>
            Adds an object to the end of the List.
            </summary>
            <param name="item">object to be added to the end of the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the List.
            </summary>
            <param name="collection">The collection whose elements should be added to the end of the List. The collection itself cannot be a null reference (Nothing in Visual Basic), but it can contain elements that are a null reference (Nothing in Visual Basic), if type T is a reference type.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.AsReadOnly">
            <summary>
            Returns a read-only IList wrapper for the current collection.
            </summary>
            <returns>A ReadOnlyCollection that acts as a read-only wrapper around the current List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.BinarySearch(`0)">
            <summary>
            Searches the entire sorted List for an element using the default comparer and returns the zero-based index of the element.
            </summary>
            <param name="item">The object to locate. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of item in the sorted List, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Searches the entire sorted List for an element using the specified comparer and returns the zero-based index of the element.
            </summary>
            <param name="item">The object to locate. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer Comparer.</param>
            <returns>The zero-based index of item in the sorted List, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
            <summary>
            Searches a range of elements in the sorted List for an element using the specified comparer and returns the zero-based index of the element.
            </summary>
            <param name="index">The zero-based starting index of the range to search.</param>
            <param name="count">The length of the range to search.</param>
            <param name="item">The object to locate. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer Comparer.</param>
            <returns>The zero-based index of item in the sorted List, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than item or, if there is no larger element, the bitwise complement of Count.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Clear">
            <summary>
            Removes all elements from the List.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Contains(`0)">
            <summary>
            Determines whether an element is in the List.
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns><b>true</b> if item is found in the List; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.ConvertAll``1(System.Converter{`0,``0})">
            <summary>
            Converts the elements in the current List to another type, and returns a list containing the converted elements.
            </summary>
            <typeparam name="TOutput">The type each element in the list should be converted to.</typeparam>
            <param name="converter">A Converter delegate that converts each element from one type to another type.</param>
            <returns>A List of the target type containing the converted elements from the current List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.CopyTo(`0[])">
            <summary>
            Copies the entire List to a compatible one-dimensional array, starting at the beginning of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from List. The Array must have zero-based indexing.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire List to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from List. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
            <summary>
            Copies a range of elements from the List to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="index">The zero-based index in the source List at which copying begins.</param>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from List. The Array must have zero-based indexing</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <param name="count">The number of elements to copy.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Exists(System.Predicate{`0})">
            <summary>
            Determines whether the List contains elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the elements to search for.</param>
            <returns><b>true</b> if the List contains one or more elements that match the conditions defined by the specified predicate; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Find(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire List.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <i>T</i>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.FindAll(System.Predicate{`0})">
            <summary>
            Retrieves all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the elements to search for.</param>
            <returns>A List containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.FindIndex(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire List.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.FindIndex(System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the List that extends from the specified index to the last element.
            </summary>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.FindLast(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire List.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <i>T</i>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.FindLastIndex(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire List.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.FindLastIndex(System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the List that extends from the first element to the specified index.
            </summary>
            <param name="startIndex">The zero-based starting index of the backward search.</param>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the List that contains the specified number of elements and ends at the specified index.
            </summary>
            <param name="startIndex">The zero-based starting index of the backward search.</param>
            <param name="count">The number of elements in the section to search.</param>
            <param name="match">The Predicate delegate that defines the conditions of the element to search for.</param>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.ForEach(System.Action{`0})">
            <summary>
            Performs the specified action on each element of the List.
            </summary>
            <param name="action">The Action delegate to perform on each element of the List.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the List.
            </summary>
            <returns>A List.Enumerator for the List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.GetRange(System.Int32,System.Int32)">
            <summary>
            Creates a shallow copy of a range of elements in the source List.
            </summary>
            <param name="index">The zero-based List index at which the range starts.</param>
            <param name="count">The number of elements in the range.</param>
            <returns>A shallow copy of a range of elements in the source List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire List.
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the first occurrence of item within the entire List, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.IndexOf(`0,System.Int32)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the List that extends from the specified index to the last element.
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <param name="index">The zero-based starting index of the search.</param>
            <returns>zero-based index of the first occurrence of item within the range of elements in the List that extends from index to the last element, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the List that starts at the specified index and contains the specified number of elements.
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <param name="index">The zero-based starting index of the search.</param>
            <param name="count">The number of elements in the section to search.</param>
            <returns>The zero-based index of the first occurrence of item within the range of elements in the List that starts at index and contains count number of elements, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into the List at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts the elements of a collection into the List at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the List. The collection itself cannot be a null reference (Nothing in Visual Basic), but it can contain elements that are a null reference (Nothing in Visual Basic), if type T is a reference type.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.LastIndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the last occurrence within the entire List.
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns>The zero-based index of the last occurrence of item within the entire the List, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.LastIndexOf(`0,System.Int32)">
            <summary>
            Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the List that extends from the first element to the specified index.
            </summary>
            <param name="item"> object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <param name="index">The zero-based starting index of the backward search.</param>
            <returns>The zero-based index of the last occurrence of item within the range of elements in the List that extends from the first element to index, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>
            Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the List that contains the specified number of elements and ends at the specified index.
            </summary>
            <param name="item">The object to locate in the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <param name="index">The zero-based starting index of the backward search.</param>
            <param name="count">The number of elements in the section to search.</param>
            <returns>The zero-based index of the last occurrence of item within the range of elements in the List that contains count number of elements and ends at index, if found; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the List.
            </summary>
            <param name="item">The object to remove from the List. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns><b>true</b> if item is successfully removed; otherwise, <b>false</b>. This method also returns <b>false</b> if item was not found in the List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.RemoveAll(System.Predicate{`0})">
            <summary>
            Removes the all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions of the elements to remove.</param>
            <returns>The number of elements removed from the List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the List.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from the List.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Reverse">
            <summary>
            Reverses the order of the elements in the entire List.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of the elements in the specified range.
            </summary>
            <param name="index">The zero-based starting index of the range to reverse.</param>
            <param name="count">The number of elements in the range to reverse.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Sort">
            <summary>
            Sorts the elements in the entire List using the default comparer.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire List using the specified System.Comparison.
            </summary>
            <param name="comparison">The System.Comparison to use when comparing elements.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire List using the specified comparer.
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in a range of elements in List using the specified comparer.
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.ToArrary">
            <summary>
            Copies the elements of the List to a new array.
            </summary>
            <returns>An array containing copies of the elements of the List.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.TrimExcess">
            <summary>
            Sets the capacity to the actual number of elements in the List, if that number is less than a threshold value.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.TrueForAll(System.Predicate{`0})">
            <summary>
            Determines whether every element in the List matches the conditions defined by the specified predicate.
            </summary>
            <param name="match">The Predicate delegate that defines the conditions to check against the elements.</param>
            <returns><b>true</b> if every element in the List matches the conditions defined by the specified predicate; otherwise, <b>false</b>. If the list has no elements, the return value is <b>true</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns><b>true</b> if item is found in the IList; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The object to locate in the IList.</param>
            <returns>The index of item if found in the list; otherwise, ?.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="value">The object to insert into the IList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedList`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The object to remove from the IList.</param>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.Capacity">
            <summary>
            Gets or sets the total number of elements the internal data structure can hold without resizing.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.Count">
            <summary>
            Gets the number of elements actually contained in the List.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the IList has a fixed size.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedList`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="T:Kalman.Caching.FileDependency">
            <summary>
            基于文件依赖的缓存项过期对象
            </summary>
        </member>
        <member name="M:Kalman.Caching.FileDependency.HasExpired">
            <summary>
            判断缓存项是否过期
            </summary>
        </member>
        <member name="M:Kalman.Caching.FileDependency.EnsureTargetFileAccessible">
            <summary>
            确认目标文件可被访问
            </summary>
        </member>
        <member name="P:Kalman.Caching.FileDependency.FileName">
            <summary>
            获取缓存项依赖的文件名
            </summary>
        </member>
        <member name="P:Kalman.Caching.FileDependency.LastModifiedTime">
            <summary>
            获取缓存项依赖文件的最后修改时间
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.ActionOnError">
            <summary>
            发送错误时的处理动作枚举
            </summary>
        </member>
        <member name="F:Kalman.Web.MVC.Model.ActionOnError.ShowDialog">
            <summary>
            弹窗
            </summary>
        </member>
        <member name="F:Kalman.Web.MVC.Model.ActionOnError.Redirect">
            <summary>
            跳转到错误页面
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.HandleMode">
            <summary>
            客户端处理模式枚举
            </summary>
        </member>
        <member name="F:Kalman.Web.MVC.Model.HandleMode.ShowDialog">
            <summary>
            1弹窗
            </summary>
        </member>
        <member name="F:Kalman.Web.MVC.Model.HandleMode.Refresh">
            <summary>
            2刷新
            </summary>
        </member>
        <member name="F:Kalman.Web.MVC.Model.HandleMode.ShowDialogAndRefresh">
            <summary>
            3弹窗并刷新
            </summary>
        </member>
        <member name="F:Kalman.Web.MVC.Model.HandleMode.ShowDialogAndRedirect">
            <summary>
            弹窗后再跳转
            </summary>
        </member>
        <member name="T:Kalman.WebCacher">
            <summary>
            缓存管理类
            </summary>
        </member>
        <member name="F:Kalman.WebCacher.DayFactor">
            <summary>
            DayFactor
            </summary>
        </member>
        <member name="F:Kalman.WebCacher.HourFactor">
            <summary>
            HourFactor
            </summary>
        </member>
        <member name="F:Kalman.WebCacher.MinuteFactor">
            <summary>
            MinuteFactor
            </summary>
        </member>
        <member name="F:Kalman.WebCacher.SecondFactor">
            <summary>
            SecondFactor
            </summary>
        </member>
        <member name="M:Kalman.WebCacher.ReSetFactor(System.Int32)">
            <summary>
            
            </summary>
            <param name="cacheFactor"></param>
        </member>
        <member name="M:Kalman.WebCacher.#cctor">
            <summary>
            确保当前HttpContext只有一个Cache实例
            </summary>
        </member>
        <member name="M:Kalman.WebCacher.Clear">
            <summary>
            清空Cache
            </summary>
        </member>
        <member name="M:Kalman.WebCacher.RemoveByPattern(System.String)">
            <summary>
            根据正则表达式的模式移除Cache
            </summary>
            <param name="pattern">模式</param>
        </member>
        <member name="M:Kalman.WebCacher.Remove(System.String)">
            <summary>
            根据键值移除Cache
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Kalman.WebCacher.Insert(System.String,System.Object)">
            <summary>
            把对象加载到Cache
            </summary>
            <param name="key">键</param>
            <param name="obj">对象</param>
        </member>
        <member name="M:Kalman.WebCacher.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            把对象加载到Cache,附加缓存依赖信息
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
        </member>
        <member name="M:Kalman.WebCacher.Insert(System.String,System.Object,System.Int32)">
            <summary>
            把对象加载到Cache,附加过期时间信息
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Kalman.WebCacher.Insert(System.String,System.Object,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            把对象加载到Cache,附加过期时间信息和优先级
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="seconds"></param>
            <param name="priority"></param>
        </member>
        <member name="M:Kalman.WebCacher.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32)">
            <summary>
            把对象加载到Cache,附加缓存依赖和过期时间(多少秒后过期)
            (默认优先级为Normal)
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Kalman.WebCacher.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            把对象加载到Cache,附加缓存依赖和过期时间(多少秒后过期)及优先级
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
            <param name="seconds"></param>
            <param name="priority"></param>
        </member>
        <member name="M:Kalman.WebCacher.MicroInsert(System.String,System.Object,System.Int32)">
            <summary>
            把对象加到缓存并忽略优先级
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="secondFactor"></param>
        </member>
        <member name="M:Kalman.WebCacher.Max(System.String,System.Object)">
            <summary>
            把对象加到缓存,并把过期时间设为最大值
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Kalman.WebCacher.Max(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            把对象加到缓存,并把过期时间设为最大值,附加缓存依赖信息
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
        </member>
        <member name="M:Kalman.WebCacher.Permanent(System.String,System.Object)">
            <summary>
            插入持久性缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Kalman.WebCacher.Permanent(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            插入持久性缓存,附加缓存依赖
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
        </member>
        <member name="M:Kalman.WebCacher.Get(System.String)">
            <summary>
            根据键获取被缓存的对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.WebCacher.SecondFactorCalculate(System.Int32)">
            <summary>
            Return int of seconds * SecondFactor
            </summary>
        </member>
        <member name="T:Kalman.Utilities.RandomUtil">
            <summary>
            跟随机数有关的工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.BuildRandomString(System.Int32,System.String)">
            <summary>
            生成指定长度的随机字符串
            </summary>
            <param name="len">生成的随机字符串的长度</param>
            <param name="dic">产生随机字符串的字典内容，如："0123456789"</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.GetRandomString(System.String[])">
            <summary>
            从一组字符串中随机获取一个
            </summary>
            <param name="dic">字典</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.GetRandomString(System.Collections.Generic.IList{System.String})">
            <summary>
            从一组字符串中随机获取一个
            </summary>
            <param name="dic">字典</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.GetRandomObject(System.Object[])">
            <summary>
            从一组对象里面随机获取一个
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.GetRandomObject(System.Collections.Generic.IList{System.Object})">
            <summary>
            从一组对象里面随机获取一个
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.GetRandomObject``1(System.Collections.Generic.IList{``0})">
            <summary>
            从一组对象里面随机获取一个
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.GetInteger(System.Int32,System.Int32)">
            <summary>
            获取一个随机整数
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.RandomUtil.GetDouble">
            <summary>
            获取一个随机小数
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kalman.Remoting.RemoteObject">
            <summary>
            远程对象基类
            </summary>
        </member>
        <member name="M:Kalman.Net.MXLookUp.GetMXRecords(System.String)">
            <summary>
            获取MX记录，如：mx0.qq.com,mx1.qq.com
            </summary>
            <param name="mailAddress">邮件地址或域名，如xxx@qq.com,qq.com</param>
            <returns>返回MX记录数组</returns>
        </member>
        <member name="T:Kalman.Logging.Targets.FileTarget">
            <summary>
            将日志输出到文件
            </summary>
        </member>
        <member name="M:Kalman.Logging.Targets.FileTarget.LoadConfig(Kalman.Logging.TargetConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <exception cref="T:System.InvalidOperationException">配置已经被加载</exception>
            <exception cref="T:System.ArgumentNullException">参数<c>config</c> 不能为空</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">配置无法正确加载</exception>
        </member>
        <member name="M:Kalman.Logging.Targets.FileTarget.Write(Kalman.Logging.LogEntry)">
            <summary>
            写日志实体
            </summary>
        </member>
        <member name="M:Kalman.Logging.Targets.FileTarget.GenerateFilename(Kalman.Logging.LogEntry)">
            <summary>
            按规则生成日志文件名，不包含路径
            </summary>
            <returns></returns>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.Name">
            <summary>
            获取或设置Target名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.Formatter">
            <summary>
            获取或设置格式化器
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.FileName">
            <summary>
            获取或设置日志文件名，如果配置了这个参数，则文件名规则失效
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.DaysToKeepLogs">
            <summary>
            获取或设置日志保留天数（0表示永久保留）
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.YearInPath">
            <summary>
            年份作为写日志路径的一部分(yyyy)
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.MonthInPath">
            <summary>
            月份作为写日志路径的一部分(yyyyMM)，默认true
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.DayInPath">
            <summary>
            日期作为写日志路径的一部分(yyyyMMdd)
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.LoggerNameInPath">
            <summary>
            是否将日志记录器名称作为写日志路径的一部分
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.LogLevelInPath">
            <summary>
            是否将日志级别作为写日志路径的一部分
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.WriteDirectly">
            <summary>
            获取或设置是否直接写日志，不通过队列和线程池
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.WritePerYear">
            <summary>
            每年写一个日志文件，文件名包含年份(yyyy)
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.WritePerMonth">
            <summary>
            每月写一个日志文件，文件名包含月份(yyyyMM)
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.WritePerDay">
            <summary>
            每天写一个日志文件，文件名包含日期(yyyyMMdd)，默认true
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.WritePerHour">
            <summary>
            每小时写一个日志文件，文件名包含小时(yyyyMMdd_HH)
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.LoggerNameInFilename">
            <summary>
            是否将日志记录器名称作为日志文件名的一部分，文件名包含日志记录器名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.LogLevelInFilename">
            <summary>
            是否将日志级别作为日志文件名的一部分，文件名包含日志级别
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.FileTarget.BaseDirectory">
            <summary>
            获取写日志的基础目录
            </summary>
        </member>
        <member name="T:Kalman.Logging.Formatters.LogLevelFormatter">
            <summary>
            LogLevelFormatter
            </summary>
        </member>
        <member name="T:Kalman.Logging.Formatters.DateTimeFormatter">
            <summary>
            日期和时间格式化器
            </summary>
        </member>
        <member name="M:Kalman.Logging.Formatters.DateTimeFormatter.Format(Kalman.Logging.LogEntry)">
            <summary>
            格式化日期和时间属性
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.Logging.Formatters.DateTimeFormatter.FormatString">
            <summary>
            获取或设置日期时间格式化字符串
            </summary>
        </member>
        <member name="T:Kalman.Logging.DefaultFormatter">
            <summary>
            默认格式化器
            </summary>
        </member>
        <member name="T:Kalman.Logging.IFormatter">
            <summary>
            日志实体格式化器接口
            </summary>
        </member>
        <member name="M:Kalman.Logging.IFormatter.LoadConfig(Kalman.Logging.FormatterConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <exception cref="T:System.InvalidOperationException">配置已经被加载</exception>
            <exception cref="T:System.ArgumentNullException">参数<c>config</c> 不能为空</exception>
        </member>
        <member name="M:Kalman.Logging.IFormatter.Format(Kalman.Logging.LogEntry)">
            <summary>
            格式化日志实体
            </summary>
        </member>
        <member name="M:Kalman.Logging.IFormatter.FormatDateTime(System.DateTime)">
            <summary>
            格式化日期和时间
            </summary>
        </member>
        <member name="M:Kalman.Logging.IFormatter.FormatDate(System.DateTime)">
            <summary>
            格式化日期
            </summary>
        </member>
        <member name="P:Kalman.Logging.IFormatter.Name">
            <summary>
            获取或设置格式化器名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.IFormatter.FormatString">
            <summary>
            获取或设置格式化字符串
            </summary>
        </member>
        <member name="M:Kalman.Logging.DefaultFormatter.LoadConfig(Kalman.Logging.FormatterConfig)">
            <summary>
            加载配置
            </summary>
            <param name="config"></param>
            <exception cref="T:System.InvalidOperationException">配置已经被加载</exception>
            <exception cref="T:System.ArgumentNullException">参数<c>config</c> 不能为空</exception>
        </member>
        <member name="M:Kalman.Logging.DefaultFormatter.Format(Kalman.Logging.LogEntry)">
            <summary>
            格式化日志实体
            </summary>
        </member>
        <member name="M:Kalman.Logging.DefaultFormatter.FormatDateTime(System.DateTime)">
            <summary>
            格式化日期和时间
            </summary>
        </member>
        <member name="M:Kalman.Logging.DefaultFormatter.FormatDate(System.DateTime)">
            <summary>
            格式化日期
            </summary>
        </member>
        <member name="M:Kalman.Logging.DefaultFormatter.ParseFormat(System.String)">
            <summary>
            解析格式化字符串
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.Logging.DefaultFormatter.Name">
            <summary>
            获取或设置格式化器名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.DefaultFormatter.FormatString">
            <summary>
            获取或设置格式化字符串
            </summary>
        </member>
        <member name="T:Kalman.Logging.TargetConfig">
            <summary>
            Target Configuration
            </summary>
        </member>
        <member name="P:Kalman.Logging.TargetConfig.TargetType">
            <summary>
            获取或设置Target类型
            </summary>
        </member>
        <member name="P:Kalman.Logging.TargetConfig.Name">
            <summary>
            获取或设置Target名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.TargetConfig.FormatterName">
            <summary>
            获取或设置格式化器名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.TargetConfig.ChildConfig">
            <summary>
            获取或设置Target子配置
            </summary>
        </member>
        <member name="T:Kalman.IISLogParser.LogRecord">
            <summary>
            IIS日志记录对象，对应一条IIS日志记录
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.ClientIP">
            <summary>
            客户端IP地址[c-ip]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.ClientIPLocation">
            <summary>
            IP归属地
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Method">
            <summary>
            方法[cs-method]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.UriQuery">
            <summary>
            URI查询[cs-uri-query]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.UriStem">
            <summary>
            URI资源[cs-uri-stem]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.UriStemAlias">
            <summary>
            URI资源别名，需要配置与URI资源的对照表
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Url">
            <summary>
            完整的请求Url，包括参数部分
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.UserAgent">
            <summary>
            用户代理，客户端所用浏览器[cs(User-Agent)]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.UserAgentAliasList">
            <summary>
            用户代理别名，需要配置与用户代理的对照表
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.UserName">
            <summary>
            用户名[cs-username]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Date">
            <summary>
            记录日期[date]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Time">
            <summary>
            记录时间[time]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.LogTime">
            <summary>
            日志记录时间
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.ServerIP">
            <summary>
            服务器IP地址[s-ip]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Port">
            <summary>
            服务器端口[s-port]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.SiteName">
            <summary>
            服务名[s-sitename]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Referer">
            <summary>
            引用站点，统计访问来源[cs(Referer)]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.RefererAlias">
            <summary>
            引用站点别名，需要配置与引用站点的对照表，比如："http://www.baidu.com"别名为"百度"
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Status">
            <summary>
            协议状态[sc-status]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.SubStatus">
            <summary>
            协议子状态[sc-substatus]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.Win32Status">
            <summary>
            Win32状态[sc-win32-status]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.ReceiveBytes">
            <summary>
            接收的字节数[cs-bytes]
            </summary>
        </member>
        <member name="P:Kalman.IISLogParser.LogRecord.SendBytes">
            <summary>
            发送的字节数[sc-bytes]
            </summary>
        </member>
        <member name="M:Kalman.Extensions.GuidExt.To32Lower(System.Guid)">
            <summary>
            转换成32位的GUID小写字符串，无中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.GuidExt.To32Upper(System.Guid)">
            <summary>
            转换成2位的GUID大写字符串，无中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.GuidExt.To36Lower(System.Guid)">
            <summary>
             转换成36位的GUID小写字符串，有中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.GuidExt.To36Upper(System.Guid)">
            <summary>
            转换成36位的GUID大写字符串，有中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.GetKey(System.Int32)">
            <summary>
            Returns the key at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The key at the index.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.GetValue(System.Int32)">
            <summary>
            Returns the value at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The value at the index.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.IndexOf(`0)">
            <summary>
            Get the index of a particular key.
            </summary>
            <param name="key">The key to find the index of.</param>
            <returns>The index of the key, or -1 if not found.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.IndexOf(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Given the key-value pair, find the index.
            </summary>
            <param name="kvp">The key-value pair.</param>
            <returns>The index, or -1 if not found.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Clear">
            <summary>
            Clears all entries in the KeyedList.
            </summary>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.ContainsKey(`0)">
            <summary>
            Test if the KeyedList contains the key.
            </summary>
            <param name="key">The key.</param>
            <returns>True if the key is found.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Test if the KeyedList contains the key in the key-value pair.
            </summary>
            <param name="kvp">The key-value pair.</param>
            <returns>True if the key is found.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Add(`0,`1)">
            <summary>
            Adds a key-value pair to the KeyedList.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The associated value.</param>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds a key-value pair to the KeyedList.
            </summary>
            <param name="kvp">The KeyValuePair instance.</param>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copy the entire key-value pairs to the KeyValuePair array, starting
            at the specified index of the target array.  The array is populated 
            as an ordered list.
            </summary>
            <param name="kvpa">The KeyValuePair array.</param>
            <param name="idx">The position to start the copy.</param>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Insert(System.Int32,`0,`1)">
            <summary>
            Insert the key-value at the specified index.
            </summary>
            <param name="index">The zero-based insert point.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Insert(System.Int32,System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Insert the key-value pair at the specified index location.
            </summary>
            <param name="index">The key.</param>
            <param name="kvp">The value.</param>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Remove(`0)">
            <summary>
            Remove the entry.
            </summary>
            <param name="key">The key identifying the key-value pair.</param>
            <returns>True if removed.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Remove the key in the specified KeyValuePair instance.  The Value
            property is ignored.
            </summary>
            <param name="kvp">The key-value identifying the entry.</param>
            <returns>True if removed.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.RemoveAt(System.Int32)">
            <summary>
            Remove the entry at the specified index.
            </summary>
            <param name="index">The index to the entry to be removed.</param>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.TryGetValue(`0,`1@)">
            <summary>
            Attempt to get the value, given the key, without throwing an exception if not found.
            </summary>
            <param name="key">The key indentifying the entry.</param>
            <param name="val">The value, if found.</param>
            <returns>True if found.</returns>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an ordered System.Collections KeyValuePair objects.
            </summary>
        </member>
        <member name="M:Kalman.Collections.KeyedList`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{K@V}}#GetEnumerator">
            <summary>
            Returns an ordered KeyValuePair enumerator.
            </summary>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.IsReadOnly">
            <summary>
            Returns false.
            </summary>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.Count">
            <summary>
            Returns the number of entries in the KeyedList.
            </summary>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.Item(System.Int32)">
            <summary>
            Get/Set the value at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.Item(`0)">
            <summary>
            Get/Set the value associated with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The associated value.</returns>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.Keys">
            <summary>
            Get an unordered list of keys.
            This collection refers back to the keys in the original Dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.Values">
            <summary>
            Get an unordered list of values.
            This collection refers back to the values in the original Dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.OrderedKeys">
            <summary>
            Get the ordered list of keys.
            This is a copy of the keys in the original Dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.OrderedValues">
            <summary>
            Get the ordered list of values.
            This is a copy of the values in the original Dictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.KeyedList`2.ObjectTable">
            <summary>
            Gets the Dictionary class backing the KeyedList.
            </summary>
        </member>
        <member name="T:Kalman.Caching.SlidingTime">
            <summary>
            使用时间片来判断一个缓存项是否过期
            </summary>
        </member>
        <member name="M:Kalman.Caching.SlidingTime.HasExpired">
            <summary>
            判断缓存项是否过期
            </summary>
        </member>
        <member name="M:Kalman.Caching.SlidingTime.Notify">
            <summary>
            通知该缓存项最近被使用过
            </summary>
        </member>
        <member name="M:Kalman.Caching.SlidingTime.CheckSlidingExpiration(System.DateTime,System.DateTime,System.TimeSpan)">
            <summary>
            检查是否过期
            </summary>
            <param name="nowDateTime">当前时间</param>
            <param name="lastUsed">缓存项最后使用时间</param>
            <param name="slidingExpiration">过期时间片</param>
        </member>
        <member name="P:Kalman.Caching.SlidingTime.TimeLastUsed">
            <summary>
            获取缓存项最近使用时间
            </summary>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.DbType2SqlDbType(System.Data.DbType)">
            <summary>
            获取对应的SqlServer特定数据类型
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.Type2DbType(System.Type)">
            <summary>
            获取对应的数据类型
            </summary>
            <param name="type">type由数据库元数据中定义的DataType转换而来</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.DbType2TypeString(System.Data.DbType)">
            <summary>
            将System.Data.DbType类型转换为对应System.Type类型字符串
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.DbType2Type(System.Data.DbType)">
            <summary>
            将System.Data.DbType类型转换为对应System.Type类型
            </summary>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.SqlServerDataType2DbType(System.String)">
            <summary>
            将数据库的原生数据类型转换成System.Data.DbType
            参考：http://msdn.microsoft.com/en-us/library/cc716729.aspx
            </summary>
            <param name="nativeType">数据库原生类型</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.MySqlDataType2DbType(System.String)">
            <summary>
            将数据库的原生数据类型转换成System.Data.DbType
            </summary>
            <param name="nativeType">数据库原生类型</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.OracleDataType2DbType(System.String,System.Int32,System.Int32)">
            <summary>
            将数据库的原生数据类型转换成System.Data.DbType
            参考：http://msdn.microsoft.com/en-us/library/yk72thhd%28VS.80%29.aspx
                  http://msdn.microsoft.com/en-us/library/cc716726.aspx
            </summary>
            <param name="nativeType">数据库原生类型</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.DB2DataType2DbType(System.String)">
            <summary>
            将数据库的原生数据类型转换成System.Data.DbType
            参考：
            </summary>
            <param name="nativeType">数据库原生类型</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.SQLiteDataType2DbType(System.String)">
            <summary>
            将数据库的原生数据类型转换成System.Data.DbType
            参考：
            </summary>
            <param name="nativeType">数据库原生类型</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.TypeUtil.OleDbADataType2DbType(System.String)">
            <summary>
            将数据库的原生数据类型转换成System.Data.DbType
            参考：http://msdn.microsoft.com/en-us/library/cc668759.aspx
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Security.HashAlgorithmType">
            <summary>
            哈希算法类型
            </summary>
        </member>
        <member name="F:Kalman.Security.HashAlgorithmType.MD5">
            <summary>MD5 Hash</summary>
        </member>
        <member name="F:Kalman.Security.HashAlgorithmType.SHA1">
            <summary>SHA1 - A 160 bit Secure Algorithm Hash</summary>
        </member>
        <member name="F:Kalman.Security.HashAlgorithmType.SHA256">
            <summary>SHA2 - A 256 bit Secure Algorithm Hash</summary>
        </member>
        <member name="F:Kalman.Security.HashAlgorithmType.SHA384">
            <summary>SHA3 - A 384 bit Secure Algorithm Hash</summary>
        </member>
        <member name="F:Kalman.Security.HashAlgorithmType.SHA512">
            <summary>SHA5 - A 512 bit Secure Algorithm Hash</summary>
        </member>
        <member name="T:Kalman.Data.DbProvider.IOraclePackage">
            <summary>
            Represents the description of an oracle package mapping.
            </summary>
            <remarks>
            <see cref="T:Kalman.Data.DbProvider.IOraclePackage"/> is used to specify how to transform store procedure names 
            into package qualified Oracle stored procedure names.
            </remarks>
            <seealso cref="!:OracleDbProvider"/>
        </member>
        <member name="P:Kalman.Data.DbProvider.IOraclePackage.Name">
            <summary>
            When implemented by a class, gets the name of the package.
            </summary>
            <value>
            The name of the package.
            </value>
        </member>
        <member name="P:Kalman.Data.DbProvider.IOraclePackage.Prefix">
            <summary>
            When implemented by a class, gets the prefix for the package.
            </summary>
            <value>
            The prefix for the package.
            </value>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ToHex(System.Byte)">
            <summary>
            转十六进制
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ToHex(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            转十六进制
            </summary>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ToBase64String(System.Byte[])">
            <summary>
            将 8 位无符号整数数组转换为它的等效 System.String 表示形式（使用 Base 64 数字编码）
            </summary>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ToInt(System.Byte[],System.Int32)">
            <summary>
            返回由字节数组中指定位置的八个字节转换来的 32 位有符号整数
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ToInt64(System.Byte[],System.Int32)">
            <summary>
            返回由字节数组中指定位置的八个字节转换来的 64 位有符号整数
            </summary>
            <param name="data"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.Decode(System.Byte[],System.Text.Encoding)">
            <summary>
            转换为指定编码字符串
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.Save(System.Byte[],System.String)">
            <summary>
            保存到文件
            </summary>
            <param name="data"></param>
            <param name="path"></param>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ToMemoryStream(System.Byte[])">
            <summary>
            保存到内存流
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ComputeHash(System.Byte[],Kalman.Security.HashAlgorithmType)">
            <summary>
            使用指定哈希算法计算哈希值
            </summary>
            <param name="data"></param>
            <param name="hashEnum"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ByteUtil.ComputeHash(System.Byte[])">
            <summary>
            使用默认Hash算法SHA1计算哈希值
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ServiceModel.ServiceUriManager.GetServiceUrl(System.String,System.String)">
            <summary>
            获取服务URL
            </summary>
            <param name="clientName">客户端名称，每种WCF数据服务都需要在调用方配置对应的客户端（命名规范：服务顶层命名空间加Client后缀，如：xxx.Client）</param>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Remoting.ServerConfig">
            <summary>
            服务端配置，每个Remoting宿主目前只允许配置一项
            </summary>
        </member>
        <member name="M:Kalman.Remoting.ServerConfig.AddWellKnownObject(System.Runtime.Remoting.WellKnownServiceTypeEntry)">
            <summary>
            加入一个WellKnown对象实体
            </summary>
            <param name="entry"></param>
        </member>
        <member name="P:Kalman.Remoting.ServerConfig.ChannelType">
            <summary>
            通道类型，默认为TCP通道
            </summary>
        </member>
        <member name="P:Kalman.Remoting.ServerConfig.Address">
            <summary>
            服务器地址（IP、机器名或域名）
            </summary>
        </member>
        <member name="P:Kalman.Remoting.ServerConfig.Port">
            <summary>
            服务端口
            </summary>
        </member>
        <member name="T:Kalman.PdmParser.SOConverter">
            <summary>
            将PDObject对象转换成SchemaObject对象，方便重用基于SchemaObject代码生成引擎
            PDM模型的代码生成主要是针对表对象，其他对象暂时不予支持
            </summary>
        </member>
        <member name="M:Kalman.PdmParser.SOConverter.PDMDataTypeToDbType(Kalman.PdmParser.PDColumn)">
            <summary>
            
            </summary>
            <param name="dbms"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Logging.LogProvider">
            <summary>
            默认的日志记录器提供者
            </summary>
        </member>
        <member name="T:Kalman.Logging.ILogProvider">
            <summary>
            Provides loggers.
            </summary>
        </member>
        <member name="M:Kalman.Logging.ILogProvider.GetLogger(System.String)">
            <summary>
            获取日志记录器（根据指定名称）
            </summary>
        </member>
        <member name="M:Kalman.Logging.ILogProvider.GetCurrentClassLogger">
            <summary>
            获取日志记录器（为当前类找出匹配的日志记录器）
            </summary>
        </member>
        <member name="M:Kalman.Logging.LogProvider.GetLogger(System.String)">
            <summary>
            获取日志记录器（根据指定名称）
            </summary>
        </member>
        <member name="M:Kalman.Logging.LogProvider.GetCurrentClassLogger">
            <summary>
            获取日志记录器（为当前类找出匹配的日志记录器）
            </summary>
        </member>
        <member name="M:Kalman.Logging.LogProvider.LoadConfig">
            <summary>
            加载配置
            </summary>
        </member>
        <member name="T:Kalman.Logging.FormatterConfig">
            <summary>
            格式化器配置
            </summary>
        </member>
        <member name="P:Kalman.Logging.FormatterConfig.Name">
            <summary>
            获取或设置格式化器名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.FormatterConfig.Format">
            <summary>
            获取或设置格式化字符串
            </summary>
        </member>
        <member name="P:Kalman.Logging.FormatterConfig.Type">
            <summary>
            获取或设置格式化器类型
            </summary>
        </member>
        <member name="P:Kalman.Logging.FormatterConfig.ChildConfig">
            <summary>
            获取或设置格式化器子配置
            </summary>
        </member>
        <member name="T:Kalman.ExtendedAttributes">
            <summary>
            采用序列化的方式扩展属性，对于需要扩展属性的实体必须继承此类
            </summary>
        </member>
        <member name="M:Kalman.ExtendedAttributes.GetExtendedAttribute(System.String)">
            <summary>
            获取扩展属性值
            </summary>
        </member>
        <member name="M:Kalman.ExtendedAttributes.SetExtendedAttribute(System.String,System.String)">
            <summary>
            设置扩展属性值
            </summary>
        </member>
        <member name="M:Kalman.ExtendedAttributes.GetBool(System.String,System.Boolean)">
            <summary>
            获取扩展属性值（布尔类型值）
            </summary>
        </member>
        <member name="M:Kalman.ExtendedAttributes.GetInt(System.String,System.Int32)">
            <summary>
            获取扩展属性值（整型值）
            </summary>
        </member>
        <member name="M:Kalman.ExtendedAttributes.GetString(System.String,System.String)">
            <summary>
            获取扩展属性值（字符串类型值）
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ExtendedAttributes.GetSerializerData">
            <summary>
            将扩展属性集合序列化为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.ExtendedAttributes.SetSerializerData(System.String)">
            <summary>
            将字符串反序列化扩展属性集合
            </summary>
        </member>
        <member name="P:Kalman.ExtendedAttributes.ExtendedAttributesCount">
            <summary>
            获取扩展属性个数
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OdbcDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            构造函数，指定数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
            <param name="dbProviderFactory"></param>
        </member>
        <member name="M:Kalman.Data.DbProvider.OdbcDatabase.#ctor(System.String)">
            <summary>
            构造函数，指定数据提供程序固定名称，用于创建数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:Kalman.Collections.SynchronizedSortedList`2">
            <summary>
            Represents a synchronized collection of key/value pairs that are sorted by key based on the associated IComparer implementation.
            </summary>
            <typeparam name="TKey">The type of keys in the collection.</typeparam>
            <typeparam name="TValue">The type of values in the collection.</typeparam>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.#ctor">
            <summary>
            Initializes a new instance of the SortedList class that is empty, has the default initial capacity, and uses the default IComparer.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the SortedList class that is empty, has the default initial capacity, and uses the specified IComparer.
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing keys, or aa null reference (Nothing in Visual Basic) to use the default Comparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the SortedList class that contains elements copied from the specified IDictionary, has sufficient capacity to accommodate the number of elements copied, and uses the default IComparer.
            </summary>
            <param name="dictionary">The IDictionary whose elements are copied to the new SortedList.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SortedList class that is empty, has the specified initial capacity, and uses the default IComparer.
            </summary>
            <param name="capacity">The initial number of elements that the SortedList can contain.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the SortedList class that contains elements copied from the specified IDictionary, has sufficient capacity to accommodate the number of elements copied, and uses the specified IComparer.
            </summary>
            <param name="dictionary">The IDictionary whose elements are copied to the new SortedList.</param>
            <param name="comparer">The IComparer implementation to use when comparing keys, or aa null reference (Nothing in Visual Basic) to use the default Comparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the SortedList class that is empty, has the specified initial capacity, and uses the specified IComparer.
            </summary>
            <param name="capacity">The initial number of elements that the SortedList can contain.</param>
            <param name="comparer">The IComparer implementation to use when comparing keys, or aa null reference (Nothing in Visual Basic) to use the default Comparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.Add(`0,`1)">
            <summary>
            Adds an element with the specified key and value into the SortedList.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.Clear">
            <summary>
            Removes all elements from the SortedList.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.ContainsKey(`0)">
            <summary>
            Determines whether the SortedList contains a specific key.
            </summary>
            <param name="key">The key to locate in the SortedList.</param>
            <returns><b>true</b> if the SortedList contains an element with the specified key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.ContainsValue(`1)">
            <summary>
            Determines whether the SortedList contains a specific value.
            </summary>
            <param name="value">The value to locate in the SortedList.</param>
            <returns><b>true</b> if the SortedList contains an element with the specified value; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the SortedList.
            </summary>
            <returns>An IEnumerator of type KeyValuePair for the SortedList.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.IndexOfKey(`0)">
            <summary>
            Searches for the specified key and returns the zero-based index within the entire SortedList.
            </summary>
            <param name="key">The key to locate in the SortedList.</param>
            <returns>The zero-based index of key within the entire SortedList, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.IndexOfValue(`1)">
            <summary>
            Searches for the specified value and returns the zero-based index within the entire SortedList.
            </summary>
            <param name="value">The value to locate in the SortedList.</param>
            <returns>The zero-based index of value within the entire SortedList, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the SortedList.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns><b>true</b> if the element is successfully removed; otherwise, <b>false</b>. This method also returns <b>false</b> if key was not found in the original SortedList.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the SortedList.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.TrimExcess">
            <summary>
            Sets the capacity to the actual number of elements in the SortedList, if that number is less than 90 percent of current capacity.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds a key/value pair to the ICollection.
            </summary>
            <param name="item">The KeyValuePair to add to the ICollection.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the ICollection contains a specific element.
            </summary>
            <param name="item">The KeyValuePair to locate in the ICollection.</param>
            <returns><b>true</b> if keyValuePair is found in the ICollection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of a specific key/value pair from the ICollection.
            </summary>
            <param name="item">The KeyValuePair to remove from the ICollection.</param>
            <returns><b>true</b> if keyValuePair was successfully removed from the ICollection; otherwise, <b>false</b>. This method also returns <b>false</b> if keyValuePair was not found in the original ICollection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
            <param name="key">The Object to use as the key of the element to add.</param>
            <param name="value">The Object to use as the value of the element to add.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the IDictionary.</param>
            <returns><b>true</b> if the IDictionary contains an element with the key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
            <returns>An IDictionaryEnumerator for the IDictionary.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.Capacity">
            <summary>
            Gets or sets the number of elements that the SortedList can contain.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.Comparer">
            <summary>
            Gets the IComparer for the sorted list.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.Count">
            <summary>
            Gets the number of key/value pairs contained in the SortedList.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get or set.</param>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException and a set operation creates a new element using the specified key.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.Keys">
            <summary>
            Gets a collection containing the keys in the SortedList.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.Values">
            <summary>
            Gets a collection containing the values in the SortedList.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
            <summary>
            Gets an ICollection containing the values of the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key, or a null reference (Nothing in Visual Basic) if key is not in the dictionary or key is of a type that is not assignable to the key type TKey of the SortedList.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedList`2.System#Collections#IDictionary#Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="T:Kalman.Web.MVC.Model.LoginModel">
            <summary>
            系统登录MVC模型对象
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.LoginModel.ErrCode">
            <summary>
            错误代码：-1登录失败，0登录成功，1用户账号不存在，2密码错误，3用户账号被禁用或锁定
            </summary>
        </member>
        <member name="P:Kalman.Web.MVC.Model.LoginModel.Message">
            <summary>
            获取错误代码对应错误消息
            </summary>
        </member>
        <member name="T:Kalman.Utilities.SpellUtil">
            <summary>
            中文拼音相关工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.SpellUtil.GetSpell(System.String)">
            <summary>
            获取汉字拼音，拼音之间用空格隔开
            </summary>
            <param name="chinese">汉字</param>
            <returns>返回汉字拼音</returns>
        </member>
        <member name="M:Kalman.Utilities.SpellUtil.GetSpell(System.String,System.String)">
            <summary>
            获取汉字拼音
            </summary>
            <param name="chinese">汉字</param>
            <param name="split">拼音之间的分隔符号</param>
            <returns>返回汉字拼音</returns>
        </member>
        <member name="T:Kalman.RegexConst">
            <summary>
            常用正则表达式
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.UnMinusInteger">
            <summary>
            非负整数
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.PlusInteger">
            <summary>
            正整数
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.UnPlusInteger">
            <summary>
            非正整数（负整数 + 0） 
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.MinusInteger">
            <summary>
            负整数
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.Integer">
            <summary>
            整数
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.UnMinusFloat">
            <summary>
            非负浮点数（正浮点数 + 0）
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.PlusFloat">
            <summary>
            正浮点数
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.UnPlusFloat">
            <summary>
            非正浮点数（负浮点数 + 0）
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.MinusFloat">
            <summary>
            负浮点数
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.Float">
            <summary>
            浮点数
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.Letter">
            <summary>
            由26个英文字母组成的字符串
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.UpperLetter">
            <summary>
            由26个英文字母的大写组成的字符串
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.LowerLetter">
            <summary>
            由26个英文字母的小写组成的字符串
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.NumericOrLetter">
            <summary>
            由数字和26个英文字母组成的字符串
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.NumericOrLetterOrUnderline">
            <summary>
            由数字、26个英文字母或者下划线组成的字符串
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.Email">
            <summary>
            email地址
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.Telephone">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.ImageFormat">
            <summary>
            图像文件扩展名
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.IP">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.Date">
            <summary>
            日期（YYYY-MM-DD）
            </summary>
        </member>
        <member name="F:Kalman.RegexConst.DateTime">
            <summary>
            日期和时间（YYYY-MM-DD HH:MM:SS）
            </summary>
        </member>
        <member name="T:Kalman.Data.DatabaseType">
            <summary>
            所支持的数据库类型
            </summary>
        </member>
        <member name="T:Kalman.ServiceModel.WcfClientProxy">
            <summary>
            WCF客户端代理类
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.Create``1(System.String)">
            <summary>
            创建一个客户端代理，不需要配置，默认使用NetTcpBinding
            </summary>
            <typeparam name="I">服务契约接口类型</typeparam>
            <param name="uri">服务地址</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.Create``1(System.ServiceModel.EndpointAddress)">
            <summary>
            创建一个客户端代理，不需要配置，默认使用NetTcpBinding
            </summary>
            <typeparam name="I">服务契约接口类型</typeparam>
            <param name="ea">端点地址</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.Create``1(System.ServiceModel.Channels.Binding,System.String)">
            <summary>
            创建一个客户端代理，不需要配置
            </summary>
            <typeparam name="I">服务契约接口类型</typeparam>
            <param name="uri">服务地址</param>
            <param name="binding">通道绑定类型（BasicHttpBinding|NetTcpBinding|CustomBinding|NetNamedPipeBinding|NetPeerTcpBinding|WebHttpBinding|WSDualHttpBinding）</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.Create``1(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            创建一个客户端代理，不需要配置
            </summary>
            <typeparam name="I">服务契约接口类型</typeparam>
            <param name="binding">通道绑定类型（BasicHttpBinding|NetTcpBinding|CustomBinding|NetNamedPipeBinding|NetPeerTcpBinding|WebHttpBinding|WSDualHttpBinding）</param>
            <param name="ea">端点地址</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.CreateByConfig``1(System.String)">
            <summary>
            创建一个客户端代理，需配置端点并指定名称
            </summary>
            <typeparam name="I">服务契约接口类型</typeparam>
            <param name="endPointConfigurationName">端点名称</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.CreateByConfig``1(System.String,System.String)">
            <summary>
            创建一个客户端代理，需配置端点并指定名称
            </summary>
            <typeparam name="I">服务契约接口类型</typeparam>
            <param name="uri">服务地址</param>
            <param name="endPointConfigurationName">端点名称</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.CreateSelfHost``2">
            <summary>
            创建一个自托管实例，主要用于测试
            </summary>
            <typeparam name="I">服务契约接口类型</typeparam>
            <typeparam name="T">服务契约的实现类型</typeparam>
            <returns>返回客户端代理实例</returns>
        </member>
        <member name="M:Kalman.ServiceModel.WcfClientProxy.CloseAndDispose(System.ServiceModel.IClientChannel)">
            <summary>
            关闭通道连接并释放资源
            </summary>
            <example>WcfClientProxy.CloseAndDispose((IClientChannel)_IService);</example>
            <param name="serviceProxy">代理实例</param>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.Package">
            <summary>
            所属包对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.Table">
            <summary>
            所属表对象
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.DataType">
            <summary>
            列的数据类型，如"varchar(50)"
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.Length">
            <summary>
            列长度
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.Precision">
            <summary>
            精度
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.Mandatory">
            <summary>
            是否强制不能为空
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.IsPK">
            <summary>
            是否主键
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.PDColumn.IsFK">
            <summary>
            是否外键
            </summary>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetTableList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取表列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetTableColumnList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的列列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetTableSqlText(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表的Sql脚本
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetViewList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取视图列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetCommandList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取存储过程列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetCommandParameterList(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程参数列表
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OracleSchema.GetDbType(System.String)">
            <summary>
            获取.Net Framework数据类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetDatabaseList">
            <summary>
            获取数据库列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetTableList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取表列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetTableColumnList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的列列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetTableIndexList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的索引列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetViewList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取视图列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetViewColumnList(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图所拥有的列列表
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetViewIndexList(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图所拥有的索引列表
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetCommandList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取存储过程列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetCommandParameterList(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程参数列表
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetTableSqlText(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表的Sql脚本
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.MySqlSchema.GetDbType(System.String)">
            <summary>
            获取.Net Framework数据类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Utilities.ReflectUtil">
            <summary>
            反射工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.ReflectUtil.FindAssemblyFromCurrentAppDomain(System.String)">
            <summary>
            从当前应用程序域中根据类型名称查找该类型所属的程序集
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ReflectUtil.FindAssemblyFromAppDomain(System.AppDomain,System.String)">
            <summary>
            从指定应用程序域中根据类型名称查找该类型所属的程序集
            </summary>
            <param name="appDomain"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ReflectUtil.FindAssemblyFromAppDirectory(System.String)">
            <summary>
            从应用程序根目录的文件中根据类型名称查找该类型所属的程序集
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.ReflectUtil.GetCurrentMethodInfo(System.Int32)">
            <summary>
            获取当前正在执行的方法信息，如：ClassName->Method(arg1,arg2,out arg3)
            </summary>
            <param name="skipFrames">堆栈上要跳过的帧数，直接调用该方法为1，间接调用请再加上封装的层次</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Utilities.GuidUtil">
            <summary>
            Guid工具类
            </summary>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.New32Lower">
            <summary>
            创建一个GUID，转换为32位小写字符串，无中划线-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.New32Upper">
            <summary>
            创建一个GUID，转换为32位大写字符串，无中划线-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.New36Lower">
            <summary>
            创建一个GUID，转换为36位小写字符串，有中划线-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.New36Upper">
            <summary>
            创建一个GUID，转换为32位大写字符串，有中划线-
            </summary>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.To32Lower(System.Guid)">
            <summary>
            转换成32位的GUID小写字符串，无中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.To32Upper(System.Guid)">
            <summary>
             转换成32位的GUID大写字符串，无中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.To36Lower(System.Guid)">
            <summary>
            转换成36位的GUID小写字符串，有中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Utilities.GuidUtil.To36Upper(System.Guid)">
            <summary>
            转换成36位的GUID大写字符串，有中划线-
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Remoting.LoggingService">
            <summary>
            Remoting Logging Service
            </summary>
        </member>
        <member name="M:Kalman.Remoting.LoggingService.WriteLog(System.String,System.String)">
            <summary>
            写日志
            </summary>
            <param name="appName">应用程序名称（唯一）</param>
            <param name="msg">日志消息</param>
        </member>
        <member name="M:Kalman.Remoting.LoggingService.GetLogPath(System.String)">
            <summary>
            获取指定名称的应用程序日志写入路径
            </summary>
            <param name="appName">应用程序名称</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Logging.Targets.EventLogTarget">
            <summary>
            Windows事件日志
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.EventLogTarget.EventLogName">
            <summary>
            事件日志名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.EventLogTarget.EventLogDisplayName">
            <summary>
            事件日志显示名称
            </summary>
        </member>
        <member name="P:Kalman.Logging.Targets.EventLogTarget.MaxSize">
            <summary>
            日志文件最大尺寸[kb]
            </summary>
        </member>
        <member name="T:Kalman.IDBuilder">
            <summary>
            用来生成主键ID
            </summary>
        </member>
        <member name="M:Kalman.IDBuilder.BuildByDateTime(System.String,System.Int32,System.String)">
            <summary>
            根据当前时间来生成
            </summary>
            <param name="format">日期格式，如：yyyyMMddHHmmssfff</param>
            <param name="randomStringLength">后面附加的随机字符串长度</param>
            <param name="prefix">前缀</param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SOCommand">
            <summary>
            存储过程架构对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommand.Parent">
            <summary>
            获取或设置父对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommand.FullName">
            <summary>
            获取完整名称
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommand.Owner">
            <summary>
            获取或设置对象所有者
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommand.SchemaName">
            <summary>
            所属架构名称，SqlServer2005+特有属性
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommand.ParameterList">
            <summary>
            获取或设置参数列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommand.Database">
            <summary>
            获取所属数据库对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SOCommand.SqlText">
            <summary>
            获取或设置存储过程Sql脚本
            </summary>
        </member>
        <member name="T:Kalman.Data.DbSchemaProvider.SqlServerSchema">
            <summary>
            SqlServerSchema
            </summary>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.#ctor(Kalman.Data.Database)">
            <summary>
            
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.GetTableList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取表列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.GetTableColumnList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的列列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.GetViewList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取视图列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.GetCommandList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取存储过程列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.GetCommandParameterList(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程参数列表
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.SqlServerSchema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OleDbSchema.GetTableList(Kalman.Data.SchemaObject.SODatabase)">
            <summary>
            获取表列表
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OleDbSchema.GetTableColumnList(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表所拥有的列列表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OleDbSchema.GetTableSqlText(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表的Sql脚本
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OleDbSchema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OleDbSchema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.OleDbSchema.GetDbType(System.String)">
            <summary>
            获取.Net Framework数据类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.DB2Schema.GetTableSqlText(Kalman.Data.SchemaObject.SOTable)">
            <summary>
            获取表的Sql脚本
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.DB2Schema.GetViewSqlText(Kalman.Data.SchemaObject.SOView)">
            <summary>
            获取视图的Sql脚本
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.DB2Schema.GetCommandSqlText(Kalman.Data.SchemaObject.SOCommand)">
            <summary>
            获取存储过程的Sql脚本
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbSchemaProvider.DB2Schema.GetDbType(System.String)">
            <summary>
            获取.Net Framework数据类型
            </summary>
            <param name="nativeType"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Data.DbProvider.OleDbDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory)">
            <summary>
            构造函数，指定数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
            <param name="dbProviderFactory"></param>
        </member>
        <member name="M:Kalman.Data.DbProvider.OleDbDatabase.#ctor(System.String)">
            <summary>
            构造函数，指定数据提供程序固定名称，用于创建数据提供程序工厂实例
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:Kalman.Caching.NeverExpired">
            <summary>
            从不过期
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.#ctor(System.String,System.Collections.Generic.IList{Kalman.Data.DbProvider.IOraclePackage})">
            <summary>
            数据库架构对象
            </summary>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.SetParameterValue(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
            设置参数值
            </summary>
            <param name="command"></param>
            <param name="parameterName">参数名称</param>
            <param name="value">参数值</param>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.PrepareCWRefCursor(System.Data.Common.DbCommand)">
            <devdoc>
            This is a private method that will build the Oracle package name if your stored procedure
            has proper prefix and postfix. 
            This functionality is include for
            the portability of the architecture between SQL and Oracle datbase.
            This method also adds the reference cursor to the command writer if not already added. This
            is required for Oracle .NET managed data provider.
            </devdoc>        
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.Common.DbCommand"/> and populates the Parameters collection of the specified <see cref="T:System.Data.Common.DbCommand"/> object. 
            </summary>
            <param name="discoveryCommand">The <see cref="T:System.Data.Common.DbCommand"/> to do the discovery.</param>
            <remarks>
            The <see cref="T:System.Data.Common.DbCommand"/> must be an instance of a <see cref="T:System.Data.OracleClient.OracleCommand"/> object.
            </remarks>
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.GetStoredProcCommand(System.String,System.Object[])">
            <summary>
            <para>Creates a <see cref="T:System.Data.Common.DbCommand"/> for a stored procedure.</para>
            </summary>
            <param name="storedProcedureName"><para>The name of the stored procedure.</para></param>
            <param name="parameterValues"><para>The list of parameters for the procedure.</para></param>
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure.</para></returns>
            <remarks>
            <para>The parameters for the stored procedure will be discovered and the values are assigned in positional order.</para>
            </remarks>        
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.GetStoredProcCommand(System.String)">
            <summary>
            <para>Creates a <see cref="T:System.Data.Common.DbCommand"/> for a stored procedure.</para>
            </summary>
            <param name="storedProcedureName"><para>The name of the stored procedure.</para></param>		
            <returns><para>The <see cref="T:System.Data.Common.DbCommand"/> for the stored procedure.</para></returns>
            <remarks>
            <para>The parameters for the stored procedure will be discovered and the values are assigned in positional order.</para>
            </remarks>        
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.TranslatePackageSchema(System.String)">
            <devdoc>
            Looks into configuration and gets the information on how the command wrapper should be updated if calling a package on this
            connection.
            </devdoc>        
        </member>
        <member name="M:Kalman.Data.DbProvider.OracleDatabase.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
            <summary>
            Sets the RowUpdated event for the data adapter.
            </summary>
            <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter"/> to set the event.</param>
            <remarks>The <see cref="T:System.Data.Common.DbDataAdapter"/> must be an <see cref="T:System.Data.OracleClient.OracleDataAdapter"/>.</remarks>
        </member>
        <member name="P:Kalman.Data.DbProvider.OracleDatabase.DatabaseType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="T:Kalman.TimeConst">
            <summary>
            时间常量（基础单位：毫秒），可以作为线程等待时间
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.MS1">
            <summary>
            1毫秒
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.MS10">
            <summary>
            10毫秒
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.MS100">
            <summary>
            100毫秒
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.MS200">
            <summary>
            200毫秒
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.MS300">
            <summary>
            300毫秒
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.MS500">
            <summary>
            500毫秒
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.S1">
            <summary>
            1秒(=1000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.S2">
            <summary>
            2秒(=2000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.S3">
            <summary>
            3秒(=3000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.S5">
            <summary>
            5秒(=5000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.S10">
            <summary>
            10秒(=10000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.S20">
            <summary>
            20秒(=20000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.S30">
            <summary>
            30秒(=30000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.M1">
            <summary>
            1分钟(=60000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.M2">
            <summary>
            2分钟(=120000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.M3">
            <summary>
            3分钟(=180000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.M5">
            <summary>
            5分钟(=300000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.M10">
            <summary>
            10分钟(=600000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.M20">
            <summary>
            20分钟(=1200000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.M30">
            <summary>
            30分钟(=1800000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.H1">
            <summary>
            1小时(=3600000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.H2">
            <summary>
            2小时(=7200000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.H3">
            <summary>
            3小时(=10800000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.H5">
            <summary>
            5小时(=18000000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.H10">
            <summary>
            10小时(=36000000毫秒)
            </summary>
        </member>
        <member name="F:Kalman.TimeConst.D1">
            <summary>
            1天(=86400000毫秒)
            </summary>
        </member>
        <member name="M:Kalman.TimeConst.Second2MS(System.Int32)">
            <summary>
            计算指定秒数对应的毫秒数
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.TimeConst.Minute2MS(System.Int32)">
            <summary>
            计算指定分钟数对应的毫秒数
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.TimeConst.Hour2MS(System.Int32)">
            <summary>
            计算指定小时数对应的毫秒数
            </summary>
            <param name="h"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.TimeConst.Day2MS(System.Int32)">
            <summary>
            计算指定天数对应的毫秒数
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.StringConst">
            <summary>
            字符串常量定义
            </summary>
        </member>
        <member name="F:Kalman.StringConst.Digital">
            <summary>
            数字0123456789
            </summary>
        </member>
        <member name="F:Kalman.StringConst.UpperLetter">
            <summary>
            大写字母ABCDEFGHIJKLMNOPQRSTUVWXYZ
            </summary>
        </member>
        <member name="F:Kalman.StringConst.Digital_UpperLetter">
            <summary>
            数字、大写字母1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ
            </summary>
        </member>
        <member name="F:Kalman.StringConst.Letter">
            <summary>
            字母，包含大小写ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
            </summary>
        </member>
        <member name="F:Kalman.StringConst.LowerLetter">
            <summary>
            小写字母abcdefghijklmnopqrstuvwxyz
            </summary>
        </member>
        <member name="F:Kalman.StringConst.Digital_LowerLetter">
            <summary>
            数字、小写字母1234567890abcdefghijklmnopqrstuvwxyz
            </summary>
        </member>
        <member name="F:Kalman.StringConst.Digital_Letter">
            <summary>
            数字及字母（包含大小写）1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
            </summary>
        </member>
        <member name="T:Kalman.ServiceModel.ServiceHostManager">
            <summary>
            WCF服务宿主管理类
            </summary>
        </member>
        <member name="M:Kalman.ServiceModel.ServiceHostManager.Open(System.Type)">
            <summary>
            发布WCF服务组件
            </summary>
            <param name="type"></param>
        </member>
        <member name="T:Kalman.Remoting.RemotingClientProxy">
            <summary>
            客户端访问Remoting对象的代理类
            </summary>
        </member>
        <member name="M:Kalman.Remoting.RemotingClientProxy.GetObject``1(System.String)">
            <summary>
            获取远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objectUri"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.RemotingClientProxy.GetObject``1(System.String,System.String)">
            <summary>
            获取远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="hostUrl"></param>
            <param name="objectUri"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.RemotingClientProxy.GetObject``1">
            <summary>
            获取远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.RemotingClientProxy.GetObjectByClient``1(System.String)">
            <summary>
            获取指定客户端名称的远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="clientName"></param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Remoting.RemotingClientProxy.GetObjectByClient``1(System.String,System.String)">
            <summary>
            获取指定客户端名称的远程对象实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="clientName"></param>
            <param name="objectUri"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Remoting.IAuthentication">
            <summary>
            认证接口，对于需要进行认证才能调用的远程对象必须实现该接口
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.ReferenceJoin.ParentColumnID">
            <summary>
            父表列ID
            </summary>
        </member>
        <member name="P:Kalman.PdmParser.ReferenceJoin.ChildColumnID">
            <summary>
            子表列ID，该列为外键列
            </summary>
        </member>
        <member name="T:Kalman.PdmParser.PdmReader">
            <summary>
            PDM文件读取类
            </summary>
        </member>
        <member name="M:Kalman.PdmParser.PdmReader.BuildModel">
            <summary>
            解析并生成模型实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:Kalman.Data.SchemaObject.SODatabase">
            <summary>
            数据库架构对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SODatabase.Parent">
            <summary>
            获取或设置父对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SODatabase.IsSystemDatabase">
            <summary>
            是否是系统数据库
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SODatabase.Database">
            <summary>
            获取所属数据库对象
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SODatabase.TableList">
            <summary>
            获取或设置表列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SODatabase.ViewList">
            <summary>
            获取或设置视图列表
            </summary>
        </member>
        <member name="P:Kalman.Data.SchemaObject.SODatabase.CommandList">
            <summary>
            获取或设置存储过程列表
            </summary>
        </member>
        <member name="T:Kalman.Collections.SynchronizedSortedDictionary`2">
            <summary>
            Represents a collection of key/value pairs that are sorted on the key.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the SortedDictionary class that is empty and uses the default IComparer implementation for the key type.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the SortedDictionary class that is empty and uses the specified IComparer implementation to compare keys.
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing keys, or a null reference (Nothing in Visual Basic) to use the default Comparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the SortedDictionary class that contains elements copied from the specified IDictionary and uses the default IComparer implementation for the key type.
            </summary>
            <param name="dictionary">The IDictionary whose elements are copied to the new SortedDictionary.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the SortedDictionary class that contains elements copied from the specified IDictionary and uses the specified IComparer implementation to compare keys.
            </summary>
            <param name="dictionary">The IDictionary whose elements are copied to the new SortedDictionary.</param>
            <param name="comparer">The IComparer implementation to use when comparing keys, or a null reference (Nothing in Visual Basic) to use the default Comparer for the type of the key.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.Add(`0,`1)">
            <summary>
            Adds an element with the specified key and value into the SortedDictionary.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.Clear">
            <summary>
            Removes all elements from the SortedDictionary.
            </summary>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the SortedDictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the SortedDictionary.</param>
            <returns><b>true</b> if the SortedDictionary contains an element with the specified key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.ContainsValue(`1)">
            <summary>
            Determines whether the SortedDictionary contains an element with the specified value.
            </summary>
            <param name="value">The value to locate in the SortedDictionary. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
            <returns><b>true</b> if the SortedDictionary contains an element with the specified value; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the SortedDictionary to the specified array of KeyValuePair structures, starting at the specified index.
            </summary>
            <param name="array">The one-dimensional array of KeyValuePair structures that is the destination of the elements copied from the current SortedDictionary The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the SortedDictionary.
            </summary>
            <returns>A SortedDictionary.Enumerator for the SortedDictionary.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the SortedDictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns><b>true</b> if the element is successfully removed; otherwise, <b>false</b>. This method also returns <b>false</b> if key is not found in the SortedDictionary.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds an item to the ICollection.
            </summary>
            <param name="item">The KeyValuePair structure to add to the ICollection.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the ICollection contains a specific key and value.
            </summary>
            <param name="item">The KeyValuePair structure to locate in the ICollection.</param>
            <returns><b>true</b> if keyValuePair is found in the ICollection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of the specified element from the ICollection.
            </summary>
            <param name="item">The KeyValuePair structure to remove from the ICollection.</param>
            <returns><b>true</b> if keyValuePair was successfully removed from the ICollection; otherwise, <b>false</b>. This method also returns <b>false</b> if keyValuePair was not found in the ICollection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the ICollection to an array, starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the ICollection. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the IDictionary.</param>
            <returns><b>true</b> if the IDictionary contains an element with the key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
            <returns>An IDictionaryEnumerator for the IDictionary.</returns>
        </member>
        <member name="M:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.Comparer">
            <summary>
            Gets the IComparer used to order the elements of the SortedDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.Count">
            <summary>
            Gets the number of key/value pairs contained in the SortedDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException, and a set operation creates a new element with the specified key.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.Keys">
            <summary>
            Gets a collection containing the keys in the SortedDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.Values">
            <summary>
            Gets a collection containing the values in the SortedDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the ICollection is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
            <summary>
            Gets an ICollection containing the values of the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The element with the specified key, or a null reference (Nothing in Visual Basic) if key is not in the dictionary or key is of a type that is not assignable to the key type TKey of the SortedDictionary.</returns>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Kalman.Collections.SynchronizedSortedDictionary`2.System#Collections#IDictionary#Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="T:Kalman.LogHandler">
            <summary>
            日志处理委托
            </summary>
            <param name="msg">日志消息</param>
        </member>
        <member name="T:Kalman.Data.ParameterCache">
            <summary>
            <para>
            Provides parameter caching services for dynamic parameter discovery of stored procedures.
            Eliminates the round-trip to the database to derive the parameters and types when a command
            is executed more than once.
            </para>
            </summary>
        </member>
        <member name="M:Kalman.Data.ParameterCache.SetParameters(System.Data.Common.DbCommand,Kalman.Data.Database)">
            <summary>
            <para>
            Populates the parameter collection for a command wrapper from the cache 
            or performs a round-trip to the database to query the parameters.
            </para>
            </summary>
            <param name="command">
            <para>The command to add the parameters.</para>
            </param>
            <param name="database">
            <para>The database to use to set the parameters.</para>
            </param>
        </member>
        <member name="M:Kalman.Data.ParameterCache.Clear">
            <summary>
            <para>Empties the parameter cache.</para>
            </summary>
        </member>
        <member name="M:Kalman.Data.ParameterCache.AddParametersFromCache(System.Data.Common.DbCommand,Kalman.Data.Database)">
            <summary>
            <para>Adds parameters to a command using the cache.</para>
            </summary>
            <param name="command">
            <para>The command to add the parameters.</para>
            </param>
            <param name="database">The database to use.</param>
        </member>
        <member name="M:Kalman.Data.ParameterCache.AlreadyCached(System.Data.IDbCommand,Kalman.Data.Database)">
            <summary>
            <para>Checks to see if a cache entry exists for a specific command on a specific connection</para>
            </summary>
            <param name="command">
            <para>The command to check.</para>
            </param>
            <param name="database">The database to check.</param>
            <returns>True if the parameters are already cached for the provided command, false otherwise</returns>
        </member>
        <member name="T:Kalman.Data.DatabaseFactory">
            <summary>
            数据库工厂
            </summary>
        </member>
        <member name="M:Kalman.Data.DatabaseFactory.Create(System.String)">
            <summary>
            创建一个数据提供程序实例
            </summary>
            <param name="connectionStringName"></param>
            <returns></returns>
        </member>
        <member name="T:Kalman.Serializer">
            <summary>
            序列化工具类，支持Xml及Binary序列化和反序列化
            </summary>
        </member>
        <member name="M:Kalman.Serializer.#cctor">
            <summary>
            静态构造
            </summary>
        </member>
        <member name="F:Kalman.Serializer.CanBinarySerialize">
            <summary>
            是否能二进制序列化
            </summary>
        </member>
        <member name="M:Kalman.Serializer.ToBinary(System.Object)">
            <summary>
            将对象以二进制方式序列化
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Kalman.Serializer.ToBinaryFile(System.Object,System.String)">
            <summary>
            将对象以二进制方式序列化后保存到文件
            </summary>
            <param name="obj"></param>
            <param name="path">保存文件路径</param>
            <returns>成功返回true</returns>
        </member>
        <member name="M:Kalman.Serializer.ToXml(System.Object)">
            <summary>
            将对象序列化为xml字符串
            </summary>
        </member>
        <member name="M:Kalman.Serializer.ToXmlFile(System.Object,System.String)">
            <summary>
            将对象序列化为xml字符串后保存到文件
            </summary>
            <param name="obj"></param>
            <param name="path">保存文件路径</param>
        </member>
        <member name="M:Kalman.Serializer.FromBinary(System.Byte[])">
            <summary>
            反序列化（二进制数据）
            </summary>
            <param name="byteArray">二进制数据</param>
            <returns>返回反序列化后的对象实例</returns>
        </member>
        <member name="M:Kalman.Serializer.FromBinaryFile(System.String)">
            <summary>
            反序列化，二进制数据文件转换为对象
            </summary>
            <param name="path">二进制数据文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Serializer.FromXml(System.String,System.Type)">
            <summary>
            反序列化，xml字符串转换为对象
            </summary>
            <param name="xml">xml字符串</param>
            <param name="objectType">对象类型</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Serializer.FromXmlFile(System.String,System.Type)">
            <summary>
            反序列化，xml文件转换为对象
            </summary>
            <param name="path">xml文件路径</param>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="P:Kalman.PdmParser.PDView.Package">
            <summary>
            所属包对象
            </summary>
        </member>
        <member name="T:Kalman.Logging.Formatters.TextFormatter">
            <summary>
            当不包含任何格式化器的时候直接输出文本
            </summary>
        </member>
        <member name="P:Kalman.Logging.Formatters.TextFormatter.Text">
            <summary>
            获取或设置要输出的文本
            </summary>
        </member>
        <member name="M:Kalman.Extensions.CollectionExt.Implode(System.Collections.ICollection,System.String)">
            <summary>
            将集合对象转换为指定字符分隔的字符串
            </summary>
            <param name="collection">集合对象</param>
            <param name="separator">分隔字符</param>
            <returns></returns>
        </member>
        <member name="M:Kalman.Extensions.CollectionExt.FormatToString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            将NameValueCollection集合转换成字符串
            </summary>
            <param name="nvc">NameValueCollection集合对象</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Kalman.Extensions.CollectionExt.FormatToString(System.Collections.Specialized.NameValueCollection,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Kalman.Extensions.CollectionExt.FormatToString(System.Collections.IDictionary,System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Kalman.Extensions.CollectionExt.FormatToString``2(System.Collections.Generic.IDictionary{``0,``1},System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="T:Kalman.ErrorCode">
            <summary>
            系统错误代码枚举定义
            </summary>
        </member>
        <member name="F:Kalman.ErrorCode.Failed">
            <summary>
            -1失败
            </summary>
        </member>
        <member name="F:Kalman.ErrorCode.Success">
            <summary>
            0成功
            </summary>
        </member>
        <member name="F:Kalman.ErrorCode.Unknown">
            <summary>
            999未知错误
            </summary>
        </member>
    </members>
</doc>
